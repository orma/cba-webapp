{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/assets/locales/source/en.json","app/assets/locales/vi.json","app/assets/scripts/actions/action-creators.js","app/assets/scripts/actions/action-types.js","app/assets/scripts/components/assets-create.js","app/assets/scripts/components/assets-edit-modal.js","app/assets/scripts/components/confirmation-prompt.js","app/assets/scripts/components/district-list.js","app/assets/scripts/components/dropdown.js","app/assets/scripts/components/map-legend.js","app/assets/scripts/components/map-options.js","app/assets/scripts/components/map-search.js","app/assets/scripts/components/modal.js","app/assets/scripts/components/province-table-column-header.js","app/assets/scripts/components/province-table-row.js","app/assets/scripts/components/province-table.js","app/assets/scripts/components/road-pagination.js","app/assets/scripts/components/road-progress-bar.js","app/assets/scripts/components/road-table-row.js","app/assets/scripts/components/road-table.js","app/assets/scripts/components/site-header.js","app/assets/scripts/components/t.js","app/assets/scripts/components/task-list-item.js","app/assets/scripts/config.js","app/assets/scripts/config/local.js","app/assets/scripts/config/production.js","app/assets/scripts/config/staging.js","app/assets/scripts/constants.js","app/assets/scripts/containers/province-table-container.js","app/assets/scripts/containers/road-table-container.js","app/assets/scripts/containers/road-table-row-container.js","app/assets/scripts/main.js","app/assets/scripts/redux/modules/map.js","app/assets/scripts/redux/modules/osm.js","app/assets/scripts/redux/modules/roadCount.js","app/assets/scripts/redux/modules/roads.js","app/assets/scripts/redux/modules/tasks.js","app/assets/scripts/redux/reducer.js","app/assets/scripts/redux/store.js","app/assets/scripts/utils/line-colors.js","app/assets/scripts/utils/to-osm.js","app/assets/scripts/utils/zoom.js","app/assets/scripts/views/app.js","app/assets/scripts/views/assets-admin-area.js","app/assets/scripts/views/assets-detail.js","app/assets/scripts/views/assets-index.js","app/assets/scripts/views/assets.js","app/assets/scripts/views/demo.js","app/assets/scripts/views/editor.js","app/assets/scripts/views/explore.js","app/assets/scripts/views/faq.js","app/assets/scripts/views/home.js","app/assets/scripts/views/tasks.js","app/assets/scripts/views/uhoh.js","app/assets/scripts/views/upload.js","node_modules/process/browser.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;QC3JgB,W,GAAA,W;QAqBA,W,GAAA,W;QAmBA,c,GAAA,c;QAeA,e,GAAA,e;QAyBA,kB,GAAA,kB;QAMA,kB,GAAA,kB;QAqBA,qB,GAAA,qB;QAOA,uB,GAAA,uB;QAwBA,oB,GAAA,oB;QAmBA,a,GAAA,a;QAOA,kB,GAAA,kB;QAwBA,c,GAAA,c;QA+BA,c,GAAA,c;;AAlPhB;;;;AACA;;IAAY,O;;AACZ;;;;;;;;AAGA;AACA;AACA;;AAEA,SAAS,aAAT,GAA0B;AACxB,SAAO;AACL,UAAM,QAAQ;AADT,GAAP;AAGD;;AAED,SAAS,aAAT,CAAwB,IAAxB,EAA8B;AAC5B,SAAO;AACL,UAAM,QAAQ,cADT;AAEL,UAAM,IAFD;AAGL,gBAAY,KAAK,GAAL;AAHP,GAAP;AAKD;;AAEM,SAAS,WAAT,GAAiC;AAAA,MAAX,EAAW,uEAAN,IAAM;;AACtC,SAAO,UAAU,QAAV,EAAoB;AACzB,aAAS,eAAT;;AAEA;AACA;;AAEA;AACA;AACA,QAAI,MAAS,iBAAO,GA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":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n    \"Analytics\": \"Analytics\",\n    \"Assets\": \"Assets\",\n    \"Provinces\": \"Provinces\",\n    \"Explore\": \"Explore\",\n    \"Editor\": \"Editor\",\n    \"Tasks\": \"Tasks\",\n    \"Task\": \"Task\",\n    \"Province\": \"Province\",\n    \"Field\": \"Field\",\n    \"Done\": \"Done\",\n    \"Status\": \"Status\",\n    \"Total\": \"Total\",\n    \"Complete\": \"Complete\",\n    \"% Complete\": \"% Complete\",\n    \"Progress\": \"Progress\",\n    \"Language\": \"Language\",\n    \"Search\": \"Search\",\n    \"Options\": \"Options\",\n    \"Clear search\": \"Clear search\",\n    \"Loading\": \"Loading\",\n    \"Width\": \"Width\",\n    \"Condition\": \"Condition\",\n    \"Surface\": \"Surface\",\n    \"added\": \"added\",\n    \"not added\": \"not added\",\n    \"Back to overview\": \"Back to overview\",\n    \"Select language\": \"Select language\",\n    \"No data available\": \"No data available\",\n    \"Change Language\": \"Change Language\",\n    \"Menu\": \"Menu\",\n    \"Previous\": \"Previous\",\n    \"Next\": \"Next\",\n    \"PCS\": \"PCS\",\n    \"Tracking and visualizing road assets in Vietnam for inclusive growth.\": \"Tracking and visualizing road assets in Vietnam for inclusive growth.\",\n    \"Access and improve Road Networks\": \"Access and improve Road Networks\",\n    \"Work with the OpenRoads project to close this critical information gap and create a comprehensive road network of Vietnam\": \"Work with the OpenRoads project to close this critical information gap and create a comprehensive road network of Vietnam\",\n    \"View assets\": \"View assets\",\n    \"VPRoMMS Assets By Province\": \"VPRoMMS Assets By Province\",\n    \"of VPRoMMS Ids have field data collected\": \"of VPRoMMS Ids have field data collected\",\n    \"Visualized variable\": \"Visualized variable\",\n    \"Road without VPRoMMS ID\": \"Road without VPRoMMS ID\",\n    \"View analytics\": \"View analytics\",\n    \"Explore on map\": \"Explore on map\",\n    \"VPRoMMS Edits By Province\": \"VPRoMMS Edits By Province\",\n    \"of VPRoMMS Ids added\": \"of VPRoMMS Ids added\",\n    \"Show road without VPRoMMS ID\": \"Show road without VPRoMMS ID\",\n    \"Select visualized variable\": \"Select visualized variable\",\n    \"Page Not Found\": \"Page Not Found\",\n    \"Select an action\": \"Select an action\",\n    \"Information on VPRoMMS roads is not available\": \"Information on VPRoMMS roads is not available\",\n    \"of VPRoMMS Ids have field data\": \"of VPRoMMS Ids have field data\",\n    \"Download\": \"Download\",\n    \"Download Roads\": \"Download Roads\",\n    \"Download road network\": \"Download road network\",\n    \"Road\": \"Road\",\n    \"Roads\": \"Roads\",\n    \"Districts\": \"Districts\",\n    \"Performing action...\": \"Performing action...\",\n    \"Selected\": \"Selected\",\n    \"road selected\": \"road selected\",\n    \"roads selected\": \"roads selected\",\n    \"Select at least another one\": \"Select at least another one\",\n    \"No roads selected yet. Click a road to select it\": \"No roads selected yet. Click a road to select it\",\n    \"1 road selected. Select at least one more\": \"1 road selected. Select at least one more\",\n    \"Cancel\": \"Cancel\",\n    \"Confirm\": \"Confirm\",\n    \"Submit\": \"Submit\",\n    \"Delete\": \"Delete\",\n    \"Create\": \"Create\",\n    \"Confirm Delete\": \"Confirm Delete\",\n    \"Key\": \"Key\",\n    \"Value\": \"Value\",\n    \"Create New Property\": \"Create New Property\",\n    \"Remove Duplicates\": \"Remove Duplicates\",\n    \"Remove Duplicate Roads\": \"Remove Duplicate Roads\",\n    \"Click on a road to keep. The other roads here will be deleted.\": \"Click on a road to keep. The other roads here will be deleted.\",\n    \"Delete Road\": \"Delete Road\",\n    \"Edit Road\": \"Edit Road\",\n    \"Add Road\": \"Add Road\",\n    \"Create New Road\": \"Create New Road\",\n    \"New Road Id\": \"New Road Id\",\n    \"Invalid Road Id\": \"Invalid Road Id\",\n    \"Create Intersection\": \"Create Intersection\",\n    \"Finish task\": \"Finish task\",\n    \"Skip task\": \"Skip task\",\n    \"Show\": \"Show\",\n    \"Hide\": \"Hide\",\n    \"Upload\": \"Upload\",\n    \"Upload RoadLabPro ZIP files\": \"Upload RoadLabPro ZIP files\",\n    \"Road properties\": \"Road properties\",\n    \"Road geometries\": \"Road geometries\",\n    \"FAQ\": \"FAQ\",\n    \"Frequently Asked Questions\": \"Frequently Asked Questions\",\n    \"If you have any remaining questions\": \"If you have any remaining questions\",\n    \"email us\": \"email us\",\n    \"Question regarding ORMA, not answered in the FAQ\": \"Question regarding ORMA, not answered in the FAQ\",\n    \"Select roads to work on\": \"Select roads to work on\",\n    \"Choose an action to perform\": \"Choose an action to perform\",\n    \"Showing 1 Road\": \"Showing 1 Road\",\n    \"Showing 2 Roads\": \"Showing 2 Roads\",\n    \"Showing\": \"Showing\",\n    \"Admin\": \"Admin\",\n    \"Admin Level\": \"Admin Level\",\n    \"Search by Admin Area\": \"Search by Admin Area\",\n    \"Search by VPRoMMS ID\": \"Search by VPRoMMS ID\",\n    \"Please search for an Admin Area\": \"Please search for an Admin Area\",\n    \"No results available. Please refine your search\": \"No results available. Please refine your search.\",\n    \"No available data\": \"No available data\",\n    \"Highway\": \"Highway\",\n    \"Properties\": \"Properties\",\n    \"Field Data\": \"Field Data\",\n    \"View\": \"View\",\n    \"Field Data Sources\": \"Field Data Sources\",\n    \"Loading your first task\": \"Loading your first task\",\n    \"Tasks Remaining\": \"Tasks Remaining\",\n    \"No tasks remaining\": \"No tasks remaining\",\n    \"Error\": \"Error\",\n    \"Connection Error\": \"Connection Error\",\n    \"Already Exists\": \"Already Exists\",\n    \"Bad response\": \"Bad response\",\n    \"Data not available\": \"Data not available\",\n    \"Could not update task status\": \"Could not update task status\",\n    \"Are you sure you want to delete VPRoMMS\": \"Are you sure you want to delete VPRoMMS\",\n    \"Improve Map\": \"Improve Map\",\n    \"VPRoMMS ID\": \"VPRoMMS ID\",\n    \"Road Name\": \"Road Name\",\n    \"Road Type\": \"Road Type\",\n    \"Risk Score\": \"Risk Score\",\n    \"Road Number\": \"Road Number\",\n    \"End Latitude\": \"End Latitude\",\n    \"Surface Type\": \"Surface Type\",\n    \"Poverty Score\": \"Poverty Score\",\n    \"Terrain Class\": \"Terrain Class\",\n    \"Traffic Level\": \"Terrain Level\",\n    \"End Longitude\": \"End Longitude\",\n    \"End Point Name\": \"End Point Name\",\n    \"Moisture Class\": \"Moisture Class\",\n    \"Start Latitude\": \"Start Latitude\",\n    \"Road Class Code\": \"Road Class Code\",\n    \"Roughness (IRI)\": \"Roughness (IRI)\",\n    \"IRI\": \"IRI\",\n    \"No data\": \"No data\",\n    \"Roughness Score\": \"Roughness Score\",\n    \"Start Longitude\": \"Start Longitude\",\n    \"Start Point Name\": \"Start Point Name\",\n    \"Criticality Score\": \"Criticality Score\",\n    \"Structural Number\": \"Structural Number\",\n    \"Temperature Class\": \"Temperature Class\",\n    \"or_responsibility\": \"or_responsibility\",\n    \"Road Length (ORMA)\": \"Road Length (ORMA)\",\n    \"Road Length (VProMMS)\": \"Road Length (VProMMS)\",\n    \"Accessibility Score\": \"Accessibility Score\",\n    \"Large Bus (veh/day)\": \"Large Bus (veh/day)\",\n    \"Pavement Age (year)\": \"Pavement Age (year)\",\n    \"Small Bus (veh/day)\": \"Small Bus (veh/day)\",\n    \"Small Car (veh/day)\": \"Small Car (veh/day)\",\n    \"Embankment Width (m)\": \"Embankment Width (m)\",\n    \"Medium Bus (veh/day)\": \"Medium Bus (veh/day)\",\n    \"Medium Car (veh/day)\": \"Medium Car (veh/day)\",\n    \"Motorcycle (veh/day)\": \"Motorcycle (veh/day)\",\n    \"Carriageway Width (m)\": \"Carriageway Width (m)\",\n    \"Heavy Truck (veh/day)\": \"Heavy Truck (veh/day)\",\n    \"Light Truck (veh/day)\": \"Light Truck (veh/day)\",\n    \"Management Class Code\": \"Management Class Code\",\n    \"Number of Lanes Class\": \"Number of Lanes Class\",\n    \"Road Length (VPRoMMS)\": \"Road Length (VPRoMMS)\",\n    \"Medium Truck (veh/day)\": \"Medium Truck (veh/day)\",\n    \"4 Wheel Drive (veh/day)\": \"4 Wheel Drive (veh/day)\",\n    \"Total Traffic (veh/day)\": \"Total Traffic (veh/day)\",\n    \"Drainage Condition Class\": \"Drainage Condition Class\",\n    \"Pavement Condition Class\": \"Pavement Condition Class\",\n    \"Delivery Vehicle (veh/day)\": \"Delivery Vehicle (veh/day)\",\n    \"Articulated Truck (veh/day)\": \"Articulated Truck (veh/day)\",\n    \"Traffic Annual Growth Scenario\": \"Traffic Annual Growth Scenario\",\n    \"Length (ORMA)\": \"Length (ORMA)\",\n    \"Length (Tabular)\": \"Length (Tabular)\",\n    \"Filter tasks by province\": \"Filter tasks by province\",\n    \"Select a VPROMMID to apply\": \"Select a VPROMMID to apply\",\n    \"province\": \"province\",\n    \"commune\": \"commune\",\n    \"district\": \"district\"\n}\n","module.exports={\n    \"Analytics\": \"Phân tích\",\n    \"Assets\": \"Tài sản\",\n    \"Provinces\": \"Các tỉnh\",\n    \"Explore\": \"Hiển thị\",\n    \"Editor\": \"Chỉnh sửa\",\n    \"Tasks\": \"Nhiệm vụ\",\n    \"Task\": \"Nhiệm vụ\",\n    \"Province\": \"Tỉnh\",\n    \"Field\": \"Trường dữ liệu\",\n    \"Done\": \"Hoàn thành\",\n    \"Status\": \"Tình trạng\",\n    \"Total\": \"Tổng\",\n    \"Complete\": \"Hoàn thành\",\n    \"% Complete\": \"% hoàn thành\",\n    \"Progress\": \"Tiến độ\",\n    \"Language\": \"Ngôn ngữ\",\n    \"Search\": \"Tìm kiếm\",\n    \"Options\": \"Tùy chọn\",\n    \"Clear search\": \"Xóa tìm kiếm\",\n    \"Loading\": \"Đang tải\",\n    \"Width\": \"Chiều rộng\",\n    \"Condition\": \"Tình trạng\",\n    \"Surface\": \"Mặt đường\",\n    \"added\": \"Đã có\",\n    \"not added\": \"Chưa có\",\n    \"Back to overview\": \"Quay về trang chủ\",\n    \"Select language\": \"Lựa chọn ngôn ngữ\",\n    \"No data available\": \"Không có dữ liệu\",\n    \"Change Language\": \"Đổi ngôn ngữ\",\n    \"Menu\": \"Mục chọn\",\n    \"Previous\": \"Trước\",\n    \"Next\": \"Tiếp\",\n    \"PCS\": \"Chỉ số dự án\",\n    \"Tracking and visualizing road assets in Vietnam for inclusive growth.\": \"Theo dõi và hiển thị tài sản đường bộ Việt Nam cho tăng trưởng chiều sâu\",\n    \"Access and improve Road Networks\": \"Truy cập và cải thiện mạng lưới đường bộ\",\n    \"Work with the OpenRoads project to close this critical information gap and create a comprehensive road network of Vietnam\": \"Làm việc với nền tảng OpenRoads để rút ngắn khoảng cách về thông tin và tạo ra một mạng lưới đường bộ toàn diện của Việt Nam\",\n    \"View assets\": \"Xem tài sản\",\n    \"VPRoMMS Assets By Province\": \"VProMMS theo Tỉnh\",\n    \"of VPRoMMS Ids have field data collected\": \"VProMMS Ids có dự liệu hiện trường\",\n    \"Visualized variable\": \"Thuộc tính hiển thị\",\n    \"Road without VPRoMMS ID\": \"Đường không có mã VProMMS\",\n    \"View analytics\": \"Xem phân tích\",\n    \"Explore on map\": \"Hiển thị bản đồ\",\n    \"VPRoMMS Edits By Province\": \"VProMMS theo Tỉnh\",\n    \"of VPRoMMS Ids added\": \"mã VProMMS đã được thêm vào\",\n    \"Show road without VPRoMMS ID\": \"Hiện đường không có mã VProMMS\",\n    \"Select visualized variable\": \"Lựa chọn thuộc tính hiển thị\",\n    \"Page Not Found\": \"Không tìm thấy trang\",\n    \"Select an action\": \"Chọn thao tác\",\n    \"Information on VPRoMMS roads is not available\": \"Không có dữ liệu VPRoMMS\",\n    \"of VPRoMMS Ids have field data\": \"VProMMS ID có dự liệu hiện trường\",\n    \"Download\": \"Tải về\",\n    \"Download Roads\": \"Tải dữ liệu đường\",\n    \"Download road network\": \"Tải xuống mạng lưới đường\",\n    \"Road\": \"Đường\",\n    \"Roads\": \"Các đường\",\n    \"Districts\": \"Huyện\",\n    \"Performing action...\": \"Chương trình đang chạy...\",\n    \"Selected\": \"Đã chọn\",\n    \"road selected\": \"đường đã chọn\",\n    \"roads selected\": \"đường đã chọn\",\n    \"Select at least another one\": \"Lựa chọn ít nhất một đối tượng nữa\",\n    \"No roads selected yet. Click a road to select it\": \"Chưa có đường nào được chọn. Ấn vào một đường để chọn\",\n    \"1 road selected. Select at least one more\": \"1 đường được chọn. Lựa chọn ít nhất một đối tượng nữa\",\n    \"Cancel\": \"Hủy\",\n    \"Confirm\": \"Xác nhận\",\n    \"Submit\": \"Gửi đi\",\n    \"Delete\": \"Xóa\",\n    \"Create\": \"Tạo\",\n    \"Confirm Delete\": \"Xác nhận xóa\",\n    \"Key\": \"Khóa\",\n    \"Value\": \"Giá trị\",\n    \"Create New Property\": \"Tạo thuộc tính mới\",\n    \"Remove Duplicates\": \"Xóa trùng lặp\",\n    \"Remove Duplicate Roads\": \"Xóa đường trùng lặp\",\n    \"Click on a road to keep. The other roads here will be deleted.\": \"Chọn một đường để giữ lại. Các đường khác sẽ bị xóa.\",\n    \"Delete Road\": \"Xóa đường\",\n    \"Edit Road\": \"Sửa đường\",\n    \"Add Road\": \"Thêm đường\",\n    \"Create New Road\": \"Tạo đường mới\",\n    \"New Road Id\": \"Mã đường mới\",\n    \"Invalid Road Id\": \"Mã đường không phù hợp\",\n    \"Create Intersection\": \"Tạo nút giao\",\n    \"Finish task\": \"Hoàn thành\",\n    \"Skip task\": \"Bỏ qua\",\n    \"Show\": \"Hiện\",\n    \"Hide\": \"Ẩn\",\n    \"Upload\": \"Tải lên\",\n    \"Upload RoadLabPro ZIP files\": \"Tải lên tập tin RoadLabPro ZIP\",\n    \"Road properties\": \"Thuộc tính đường\",\n    \"Road geometries\": \"Tọa độ đường\",\n    \"FAQ\": \"FAQ\",\n    \"Frequently Asked Questions\": \"Các câu hỏi thường gặp\",\n    \"If you have any remaining questions\": \"Nếu bạn còn câu hỏi nào\",\n    \"email us\": \"gửi thư cho chúng tôi\",\n    \"Question regarding ORMA, not answered in the FAQ\": \"Câu hỏi về ORMA, chưa được trả lời trong FAQ\",\n    \"Select roads to work on\": \"Lựa chọn đường để làm việc\",\n    \"Choose an action to perform\": \"Chọn thao tác\",\n    \"Showing 1 Road\": \"Đang hiện 1 đường\",\n    \"Showing 2 Roads\": \"Đang hiện 2 đường\",\n    \"Showing\": \"Đang hiện\",\n    \"Admin\": \"Hành chính\",\n    \"Admin Level\": \"Cấp hành chính\",\n    \"Search by Admin Area\": \"Tìm kiếm theo Địa giới hành chính\",\n    \"Search by VPRoMMS ID\": \"Tìm kiếm theo VProMMS ID\",\n    \"Please search for an Admin Area\": \"Tìm kiếm theo Địa giới hành chính\",\n    \"No results available. Please refine your search\": \"Không có kết quả. Vui lòng tìm lại.\",\n    \"No available data\": \"Không có dữ liệu\",\n    \"Highway\": \"Đường cao tốc\",\n    \"Properties\": \"Thuộc tính\",\n    \"Field Data\": \"Dữ liệu hiện trường\",\n    \"View\": \"Xem\",\n    \"Field Data Sources\": \"Nguồn của dữ liệu hiện trường\",\n    \"Loading your first task\": \"Đang tải nhiệm vụ đầu tiên\",\n    \"Tasks Remaining\": \"Nhiệm vụ còn lại\",\n    \"No tasks remaining\": \"Không còn nhiệm vụ nào\",\n    \"Error\": \"Lỗi\",\n    \"Connection Error\": \"Lỗi kết nối\",\n    \"Already Exists\": \"Đã tồn tại\",\n    \"Bad response\": \"Phản hồi kém\",\n    \"Data not available\": \"Không có dữ liệu\",\n    \"Could not update task status\": \"Không thể cập nhật trạng thái\",\n    \"Are you sure you want to delete VPRoMMS\": \"Bạn có chắc muốn xóa mã VPRoMMS?\",\n    \"Improve Map\": \"Cải thiện bản đồ\",\n    \"VPRoMMS ID\": \"Mã VProMMS\",\n    \"Road Name\": \"Tên đường\",\n    \"Road Type\": \"Loại đường\",\n    \"Risk Score\": \"Chỉ số rủi ro\",\n    \"Road Number\": \"Số hiệu đường\",\n    \"End Latitude\": \"Vĩ độ điểm cuối\",\n    \"Surface Type\": \"Loại mặt đường\",\n    \"Poverty Score\": \"Chỉ số đói nghèo\",\n    \"Terrain Class\": \"Loại địa hình\",\n    \"Traffic Level\": \"Loại địa hình\",\n    \"End Longitude\": \"Kinh độ điểm cuối\",\n    \"End Point Name\": \"Tên điểm cuối\",\n    \"Moisture Class\": \"Phân loại độ ẩm\",\n    \"Start Latitude\": \"Vĩ độ điểm đầu\",\n    \"Road Class Code\": \"Mã cấp đường\",\n    \"Roughness (IRI)\": \"Độ gồ ghề (IRI)\",\n    \"IRI\": \"IRI\",\n    \"No data\": \"Không có dữ liệu\",\n    \"Roughness Score\": \"Chỉ số độ gồ ghề\",\n    \"Start Longitude\": \"Kinh độ điểm đầu\",\n    \"Start Point Name\": \"Tên điểm đầu\",\n    \"Criticality Score\": \"Chỉ số tầm quan trọng\",\n    \"Structural Number\": \"Số kết cấu\",\n    \"Temperature Class\": \"Phân loại mức nhiệt\",\n    \"or_responsibility\": \"Cấp quản lý\",\n    \"Road Length (ORMA)\": \"Chiều dài đường (ORMA)\",\n    \"Road Length (VProMMS)\": \"Chiều dài đường (VProMMS)\",\n    \"Accessibility Score\": \"Chỉ số tiếp cận\",\n    \"Large Bus (veh/day)\": \"Xe buýt cỡ lớn (xe/ngày)\",\n    \"Pavement Age (year)\": \"Tuổi thọ mặt đường (năm)\",\n    \"Small Bus (veh/day)\": \"Xe buýt cỡ nhỏ (xe/ngày)\",\n    \"Small Car (veh/day)\": \"Ô tô cỡ nhỏ (xe/ngày)\",\n    \"Embankment Width (m)\": \"Chiều rộng nền (m)\",\n    \"Medium Bus (veh/day)\": \"Xe buýt cỡ trung (xe/ngày)\",\n    \"Medium Car (veh/day)\": \"Ô tô cỡ trung (xe/ngày)\",\n    \"Motorcycle (veh/day)\": \"Xe máy (xe/ngày)\",\n    \"Carriageway Width (m)\": \"Chiều rộng mặt (m)\",\n    \"Heavy Truck (veh/day)\": \"Xe tải hạng nặng (xe/ngày)\",\n    \"Light Truck (veh/day)\": \"Xe tải hạng nhẹ (xe/ngày)\",\n    \"Management Class Code\": \"Mã cấp quản lý\",\n    \"Number of Lanes Class\": \"Số làn đường\",\n    \"Road Length (VPRoMMS)\": \"Chiều dài đường (VProMMS)\",\n    \"Medium Truck (veh/day)\": \"Xe tải cỡ trung (xe/ngày)\",\n    \"4 Wheel Drive (veh/day)\": \"Xe hai cầu (xe/ngày)\",\n    \"Total Traffic (veh/day)\": \"Tổng lưu lượng (xe/ngày)\",\n    \"Drainage Condition Class\": \"Tình trạng thoát nước\",\n    \"Pavement Condition Class\": \"Tình trạng mặt đường\",\n    \"Delivery Vehicle (veh/day)\": \"Xe giao hàng (xe/ngày)\",\n    \"Articulated Truck (veh/day)\": \"Xe rơ-móoc (xe/ngày)\",\n    \"Traffic Annual Growth Scenario\": \"Kịch bản gia tăng lưu lượng hàng năm\",\n    \"Length (ORMA)\": \"Chiều dài (ORMA)\",\n    \"Length (Tabular)\": \"Chiều dài (Bảng)\"\n}\n","import fetch from 'isomorphic-fetch';\nimport * as actions from './action-types';\nimport config from '../config';\n\n\n// ////////////////////////////////////////////////////////////////\n//                       ADMIN SUBREGIONS                        //\n// ////////////////////////////////////////////////////////////////\n\nfunction requestAdmins () {\n  return {\n    type: actions.REQUEST_ADMINS\n  };\n}\n\nfunction receiveAdmins (json) {\n  return {\n    type: actions.RECEIVE_ADMINS,\n    json: json,\n    receivedAt: Date.now()\n  };\n}\n\nexport function fetchAdmins (id = null) {\n  return function (dispatch) {\n    dispatch(requestAdmins());\n\n    // The function called by the thunk middleware can return a value,\n    // that is passed on as the return value of the dispatch method.\n\n    // In this case, we return a promise to wait for.\n    // This is not required by thunk middleware, but it is convenient for us.\n    let url = `${config.api}/admin/units?name=${id}&limit=10`;\n    console.time('fetch subregions');\n    return fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        console.timeEnd('fetch subregions');\n        dispatch(receiveAdmins(json));\n      });\n    // catch any error in the network call.\n  };\n}\n\nexport function clearAdmins () {\n  return {\n    type: actions.CLEAR_ADMINS\n  };\n}\n\nfunction requestAdminInfo () {\n  return {\n    type: actions.REQUEST_ADMIN_INFO\n  };\n}\n\nfunction receiveAdminInfo (json) {\n  return {\n    type: actions.RECEIVE_ADMIN_INFO,\n    json: json\n  };\n}\n\nexport function fetchAdminInfo (id) {\n  return function (dispatch) {\n    dispatch(requestAdminInfo());\n    const url = `${config.api}/admin/${id}/info`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        if (json.statusCode >= 400) {\n          throw new Error('Bad Request');\n        }\n        dispatch(receiveAdminInfo(json));\n      });\n  };\n}\n\nexport function removeAdminInfo () {\n  return {\n    type: actions.REMOVE_ADMIN_INFO\n  };\n}\n\n// ////////////////////////////////////////////////////////////////\n//                        SEARCH RESULTS                         //\n// ////////////////////////////////////////////////////////////////\n\nfunction requestSearchResults (query) {\n  return {\n    type: actions.REQUEST_SEARCH_RESULTS,\n    query\n  };\n}\n\nfunction receiveSearchResults (json) {\n  return {\n    type: actions.RECEIVE_SEARCH_RESULTS,\n    json: json,\n    receivedAt: Date.now()\n  };\n}\n\nexport function cleanSearchResults () {\n  return {\n    type: actions.CLEAN_SEARCH_RESULTS\n  };\n}\n\nexport function fetchSearchResults (searchQuery) {\n  return function (dispatch) {\n    dispatch(requestSearchResults(searchQuery));\n\n    console.time('fetch search results');\n    return fetch(`${config.api}/admin/search/${searchQuery}`)\n      .then(response => response.json())\n      .then(json => {\n        console.timeEnd('fetch search results');\n        // setTimeout(() => dispatch(receiveSearchResults(json)), 2000);\n        dispatch(receiveSearchResults(json));\n      });\n    // catch any error in the network call.\n  };\n}\n\n\n// ////////////////////////////////////////////////////////////////\n//                         Explore Map                           //\n// ////////////////////////////////////////////////////////////////\n\nexport function selectExploreMapLayer (layer) {\n  return {\n    type: actions.SELECT_EXPLORE_MAP_LAYER,\n    layer\n  };\n}\n\nexport function exploreMapShowNoVpromms (bool) {\n  return {\n    type: actions.EXPLORE_MAP_SHOW_NO_VPROMMS,\n    bool\n  };\n}\n\n\n// ///////////////////////////////////////////////////////////////\n//                             Roads                            //\n// ///////////////////////////////////////////////////////////////\nfunction requestFieldVProMMsids () {\n  return {\n    type: actions.REQUEST_VPROMMS_FIELD_IDS\n  };\n}\n\nfunction receiveFieldVProMMsids (json) {\n  return {\n    type: actions.RECEIVE_VPROMMS_FIELD_IDS,\n    json: json\n  };\n}\n\nexport function fetchFieldVProMMsIds (json) {\n  return function (dispatch) {\n    dispatch(requestFieldVProMMsids());\n    const url = `${config.api}/field/ids`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        if (json.statusCode >= 400) {\n          throw new Error('Bad Response');\n        }\n        dispatch(receiveFieldVProMMsids(json));\n      });\n  };\n}\n\n\n// ////////////////////////////////////////////////////////////////\n//                             Search                            //\n// ////////////////////////////////////////////////////////////////\nexport function setSearchType (text) {\n  return {\n    type: actions.SET_SEARCH_TYPE,\n    text: text\n  };\n}\n\nexport function setFilteredVProMMs (array) {\n  return {\n    type: actions.SET_FILTERED_VPROMMS,\n    array: array\n  };\n}\n\n// ////////////////////////////////////////////////////////////////\n//                            Admins                             //\n// ////////////////////////////////////////////////////////////////\n\nfunction requestAdminBbox () {\n  return {\n    type: actions.REQUEST_ADMIN_BBOX\n  };\n}\n\nfunction receiveAdminBbox (json) {\n  return {\n    type: actions.RECEIVE_ADMIN_BBOX,\n    json: json\n  };\n}\n\nexport function fetchAdminBbox (id) {\n  return function (dispatch) {\n    dispatch(requestAdminBbox());\n    let url = `${config.api}/admin/${id}/info`;\n    return fetch(url)\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n      // if not found, throw an error.\n        if (json.statusCode >= 400) {\n          throw new Error('Bad response');\n        }\n        dispatch(receiveAdminBbox(json));\n      });\n  };\n}\n\nfunction requestProvinces () {\n  return {\n    type: actions.REQUEST_PROVINCES\n  };\n}\n\nfunction receiveProvinces (json) {\n  return {\n    type: actions.RECEIVE_PROVINCES,\n    json: json\n  };\n}\n\nexport function fetchProvinces () {\n  return function (dispatch) {\n    dispatch(requestProvinces());\n    let url = `${config.api}/admin/province/units`;\n    return fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        if (json.statusCode >= 400) {\n          throw new Error('Bad response');\n        }\n        dispatch(receiveProvinces(json));\n      });\n  };\n}\n","export const REQUEST_ADMIN_INFO = 'REQUEST_ADMIN_INFO';\nexport const RECEIVE_ADMIN_INFO = 'RECEIVE_ADMIN_INFO';\nexport const REMOVE_ADMIN_INFO = 'REMOVE_ADMIN_INFO';\n\nexport const REQUEST_ADMINS = 'REQUEST_ADMINS';\nexport const RECEIVE_ADMINS = 'RECEIVE_ADMINS';\nexport const CLEAR_ADMINS = 'CLEAR_ADMINS';\n\nexport const REQUEST_SEARCH_RESULTS = 'REQUEST_ADMIN_SEARCH_RESULTS';\nexport const RECEIVE_SEARCH_RESULTS = 'RECEIVE_ADMIN_SEARCH_RESULTS';\nexport const CLEAN_SEARCH_RESULTS = 'CLEAN_SEARCH_RESULTS';\n\nexport const SET_FILTERED_VPROMMS = 'SET_FILTERED_VPROMMS';\n\nexport const REQUEST_VPROMMS_BBOX = 'REQUEST_VPROMMS_BBOX';\nexport const RECIEVE_VPROMMS_BBOX = 'RECIEVE_VPROMMS_BBOX';\n\nexport const REQUEST_VPROMMS_FIELD_IDS = 'REQUEST_VPROMMS_FIELD_IDS';\nexport const RECEIVE_VPROMMS_FIELD_IDS = 'RECEIVE_VPROMMS_FIELD_IDS';\n\nexport const SELECT_EXPLORE_MAP_LAYER = 'SELECT_EXPLORE_MAP_LAYER';\nexport const EXPLORE_MAP_SHOW_NO_VPROMMS = 'EXPLORE_MAP_SHOW_NO_VPROMMS';\n\nexport const REQUEST_ADMIN_BBOX = 'REQUEST_ADMIN_BBOX';\nexport const RECEIVE_ADMIN_BBOX = 'RECEIVE_ADMIN_BBOX';\n\nexport const SET_SEARCH_TYPE = 'SET_SEARCH_TYPE';\n\nexport const REQUEST_PROVINCES = 'REQUEST_PROVINCES';\nexport const RECEIVE_PROVINCES = 'RECEIVE_PROVINCES';\n","'use strict';\nimport React, { PropTypes } from 'react';\nimport c from 'classnames';\nimport { connect } from 'react-redux';\nimport {\n  compose,\n  getContext\n} from 'recompose';\nimport { local } from 'redux-fractal';\nimport { createStore } from 'redux';\nimport { withRouter } from 'react-router';\n\nimport {\n  CREATE_ROAD,\n  CREATE_ROAD_SUCCESS,\n  CREATE_ROAD_ERROR,\n  createRoadEpic\n} from '../redux/modules/roads';\nimport { environment } from '../config';\n\nimport T, {\n  translate\n} from '../components/t';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from './modal';\n\n\nclass AssetsCreateModal extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.onSave = this.onSave.bind(this);\n    this.onCloseClick = this.onCloseClick.bind(this);\n\n    this.state = this.prepareState(props);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!this.props.revealed && nextProps.revealed) {\n      this.setState(this.prepareState(nextProps));\n    }\n  }\n\n  prepareState (props) {\n    return {\n      vpromm: ''\n    };\n  }\n\n  onValueChange (what, event) {\n    this.setState({ [what]: event.target.value });\n  }\n\n  onCloseClick (e) {\n    // Block while processing.\n    if (this.props.roadPropsOp.processing) return;\n    this.props.onCloseClick();\n  }\n\n  async onSave (e) {\n    e.preventDefault();\n    const vpromm = this.state.vpromm;\n\n    // Validate Vprom\n\n    try {\n      const res = await this.props.createRoad(vpromm);\n      if (res.error) throw new Error(res.error);\n      this.props.onCloseClick({action: 'redirect', vpromm});\n    } catch (error) {\n      alert(translate(this.props.language, 'The Vpromm Id id not valid. Please try again.'));\n    }\n  }\n\n  render () {\n    const { processing } = this.props.roadPropsOp;\n\n    return (\n      <Modal\n        id='assets-edit-modal'\n        className='modal--medium'\n        onCloseClick={this.onCloseClick}\n        revealed={this.props.revealed} >\n\n        <ModalHeader>\n          <div className='modal__headline'>\n            <h1 className='modal__title'><T>Add new asset</T></h1>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <form className={c('form', {disabled: processing})} disabled={processing} onSubmit={this.onSave}>\n            <div className='inner'>\n              <fieldset className='form__fieldset'>\n                <legend className='form__legend'><T>Meta</T></legend>\n                <div className='form__group'>\n                  <label className='form__label' htmlFor='vpromm'>VPRoMM ID</label>\n                  <input type='text' id='vpromm' name='vpromm' className='form__control' value={this.state.vpromm} onChange={this.onValueChange.bind(this, 'vpromm')} />\n                </div>\n              </fieldset>\n            </div>\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <button className={c('mfa-xmark', {disabled: processing})} disabled={processing} type='button' onClick={this.onCloseClick}><span>Cancel</span></button>\n          <button className={c('mfa-main mfa-tick', {disabled: processing})} disabled={processing} type='submit' onClick={this.onSave}><span>Save</span></button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nif (environment !== 'production') {\n  AssetsCreateModal.propTypes = {\n    revealed: PropTypes.bool,\n    roadPropsOp: PropTypes.object,\n    onCloseClick: PropTypes.func,\n    createRoad: PropTypes.func,\n    language: PropTypes.string\n  };\n}\n\n\nclass AssetsCreate extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.onCreateAssetClick = this.onCreateAssetClick.bind(this);\n    this.onModalClose = this.onModalClose.bind(this);\n\n    this.state = {\n      createModalOpen: false\n    };\n  }\n\n  onModalClose (data = {}) {\n    this.setState({ createModalOpen: false });\n    if (data.action === 'redirect') {\n      // Why the setTimeout you ask?\n      // For some reason redux-fractal doesn't play well with thunks.\n      // It thinks that the action is being dispatched from a reducer and\n      // throws an error. \"Reducers may not dispatch actions.\"\n      // This is meant to refresh the data after properties are saved.\n      setTimeout(() => { this.props.router.push({pathname: `/${this.props.language}/assets/road/${data.vpromm}/`}); }, 0);\n    }\n  }\n\n  onCreateAssetClick (e) {\n    e.preventDefault();\n    this.setState({ createModalOpen: true });\n  }\n\n  render () {\n    return (\n      <div>\n        <a href='#' className='ica-plus ica-main' onClick={this.onCreateAssetClick}><T>Add asset</T></a>\n\n        <AssetsCreateModal\n          revealed={this.state.createModalOpen}\n          language={this.props.language}\n          onCloseClick={this.onModalClose}\n          createRoad={this.props.createRoad}\n          roadPropsOp={this.props.roadPropsOp} />\n      </div>\n    );\n  }\n}\n\nif (environment !== 'production') {\n  AssetsCreate.propTypes = {\n    router: PropTypes.object,\n    createRoad: React.PropTypes.func,\n    language: React.PropTypes.string,\n    roadPropsOp: React.PropTypes.object\n  };\n}\n\n//\n//\n//\n\n// Road operations state and reducer.\n// Handles operations done to the properties.\nconst stateOpOnRoad = {\n  processing: false,\n  data: {}\n};\n\nconst reducerOpOnRoad = (state = stateOpOnRoad, action) => {\n  switch (action.type) {\n    case CREATE_ROAD:\n      return {...state, processing: true, error: false};\n    case CREATE_ROAD_SUCCESS:\n      return {...state, processing: false, error: false, data: action.data};\n    case CREATE_ROAD_ERROR:\n      return {...state, processing: false, error: true};\n  }\n\n  return state;\n};\n\nexport default compose(\n  withRouter,\n  getContext({ language: React.PropTypes.string }),\n  local({\n    key: ({ vpromm }) => `create-road`,\n    createStore: () => createStore(reducerOpOnRoad),\n    mapStateToProps: (state) => ({\n      roadPropsOp: state\n    }),\n    filterGlobalActions: ({ type }) => [\n      CREATE_ROAD,\n      CREATE_ROAD_SUCCESS,\n      CREATE_ROAD_ERROR\n    ].indexOf(type) > -1\n  }),\n  connect(\n    (state, props) => ({}),\n    (dispatch) => ({\n      createRoad: (...args) => dispatch(createRoadEpic(...args))\n    })\n  )\n)(AssetsCreate);\n","'use strict';\nimport React, { PropTypes } from 'react';\nimport c from 'classnames';\nimport { clone, findIndex } from 'lodash';\nimport T from '../components/t';\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from './modal';\n\nimport { environment } from '../config';\n\nlet idCounter = 0;\nconst uniqueId = key => `${key}-${++idCounter}`;\n\nclass AssetsEditModal extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.addProperty = this.addProperty.bind(this);\n    this.renderExistingProperties = this.renderExistingProperties.bind(this);\n    this.renderNewProperties = this.renderNewProperties.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onCloseClick = this.onCloseClick.bind(this);\n\n    this.state = this.prepareState(props);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!this.props.revealed && nextProps.revealed) {\n      this.setState(this.prepareState(nextProps));\n    }\n  }\n\n  prepareState (props) {\n    const roadProperties = props.roadProps.data.properties;\n    let propertyNames = Object.keys(roadProperties);\n    propertyNames.sort((a, b) => a.toLowerCase() > b.toLowerCase() ? 1 : -1);\n\n    return {\n      vpromm: props.vpromm,\n      properties: propertyNames.map(p => ({\n        id: uniqueId('property'),\n        key: p,\n        value: roadProperties[p],\n        valueOriginal: roadProperties[p],\n        existing: true\n      })),\n      propertiesToRemove: []\n    };\n  }\n\n  getBaseProperty () {\n    return {\n      id: uniqueId('property'),\n      key: '',\n      value: '',\n      existing: false\n    };\n  }\n\n  addProperty () {\n    const properties = this.state.properties.concat(this.getBaseProperty());\n    this.setState({properties});\n  }\n\n  removeProperty (id) {\n    const field = this.state.properties.find(o => o.id === id);\n    const properties = this.state.properties.filter(o => o.id !== id);\n    let propertiesToRemove = this.state.propertiesToRemove;\n    // Only properties that already should be removed from the DB.\n    if (field.existing) {\n      propertiesToRemove = propertiesToRemove.concat(field);\n    }\n    this.setState({properties, propertiesToRemove});\n  }\n\n  onValueChange (what, event) {\n    this.setState({ [what]: event.target.value });\n  }\n\n  onPropertyChange (id, what, event) {\n    let properties = clone(this.state.properties);\n    const idx = findIndex(properties, ['id', id]);\n\n    const val = event.target.value;\n    properties[idx][what] = val;\n\n    this.setState({ properties });\n  }\n\n  onCloseClick (e) {\n    // Block while processing.\n    if (this.props.roadPropsOp.processing) return;\n    this.props.onCloseClick();\n  }\n\n  async onSave (e) {\n    e.preventDefault();\n    const propertiesToAdd = this.state.properties.filter(property => !property.existing && property.key !== '');\n    const propertiesToUpdate = this.state.properties.filter(property => property.existing && property.value !== property.valueOriginal);\n    const propertiesToRemove = this.state.propertiesToRemove;\n    const originalVpromm = this.props.vpromm;\n    const newVpromm = this.state.vpromm;\n    const diffVpromm = newVpromm !== originalVpromm;\n\n    try {\n      let successRes = {};\n\n      if (propertiesToAdd.length || propertiesToUpdate.length || propertiesToRemove.length) {\n        const res = await this.props.opOnRoadProperty(this.props.vpromm, {\n          add: propertiesToAdd,\n          replace: propertiesToUpdate,\n          remove: propertiesToRemove\n        });\n        if (res.error) throw new Error(res.error);\n        successRes = {action: 'refresh'};\n      }\n\n      if (diffVpromm) {\n        const res = await this.props.editRoad(originalVpromm, newVpromm);\n        if (res.error) throw new Error(res.error);\n        successRes = {action: 'redirect', vpromm: newVpromm};\n      }\n\n      this.props.onCloseClick(successRes);\n    } catch (error) {\n      alert('An error occurred while saving. Please try again.');\n    }\n  }\n\n  renderExistingProperties ({id, key, value}) {\n    return (\n      <div className='form__group' key={id}>\n        <div className='form__inner-header'>\n          <div className='form__inner-headline'>\n            <label className='form__label' htmlFor={id}>{key}</label>\n          </div>\n          <div className='form__inner-actions'>\n            <button type='button' className='fia-trash' title={'Delete property'} onClick={this.removeProperty.bind(this, id)}><span>Delete</span></button>\n          </div>\n        </div>\n        <input type='text' id={id} name={id} className='form__control' value={value} onChange={this.onPropertyChange.bind(this, id, 'value')} />\n      </div>\n    );\n  }\n\n  renderNewProperties ({id, key, value}) {\n    return (\n      <fieldset className='form__fieldset' key={id}>\n        <div className='form__inner-header'>\n          <div className='form__inner-headline'>\n            <legend className='form__legend'><T>New attribute</T></legend>\n          </div>\n          <div className='form__inner-actions'>\n            <button type='button' className={c('fia-trash')} title={'Delete property'} onClick={this.removeProperty.bind(this, id)}><span>Delete</span></button>\n          </div>\n        </div>\n\n        <div className='form__hascol form__hascol--2'>\n          <div className='form__group'>\n            <label className='form__label' htmlFor={`key-${id}`}>Name</label>\n            <input type='text' id={`key-${id}`} name={`key-${id}`} className='form__control' value={key} onChange={this.onPropertyChange.bind(this, id, 'key')} />\n          </div>\n          <div className='form__group'>\n            <label className='form__label' htmlFor={`value-${id}`}>Value</label>\n            <input type='text' id={`value-${id}`} name={`value-${id}`} className='form__control' value={value} onChange={this.onPropertyChange.bind(this, id, 'value')} />\n          </div>\n        </div>\n      </fieldset>\n    );\n  }\n  render () {\n    const { processing } = this.props.roadPropsOp;\n\n    return (\n      <Modal\n        id='assets-edit-modal'\n        className='modal--medium'\n        onCloseClick={this.onCloseClick}\n        revealed={this.props.revealed} >\n\n        <ModalHeader>\n          <div className='modal__headline'>\n            <h1 className='modal__title'><T>Edit attributes of</T> {this.props.vpromm}</h1>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <form className={c('form', {disabled: processing})} disabled={processing} onSubmit={this.onSave}>\n            <div className='inner'>\n              <fieldset className='form__fieldset'>\n                <legend className='form__legend'><T>Meta</T></legend>\n                <div className='form__group'>\n                  <label className='form__label' htmlFor='vpromm'>VPRoMM ID</label>\n                  <input type='text' id='vpromm' name='vpromm' className='form__control' value={this.state.vpromm} onChange={this.onValueChange.bind(this, 'vpromm')} />\n                </div>\n              </fieldset>\n\n              <fieldset className='form__fieldset'>\n                <legend className='form__legend'><T>Attributes</T></legend>\n                {this.state.properties.filter(o => o.existing).map(this.renderExistingProperties)}\n              </fieldset>\n\n              {this.state.properties.filter(o => !o.existing).map(this.renderNewProperties)}\n\n              <div className='form__extra-actions'>\n                <button type='button' className='fea-plus' title='Add new file' onClick={this.addProperty}><span>New attribute</span></button>\n              </div>\n            </div>\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <button className={c('mfa-xmark', {disabled: processing})} disabled={processing} type='button' onClick={this.onCloseClick}><span>Cancel</span></button>\n          <button className={c('mfa-main mfa-tick', {disabled: processing})} disabled={processing} type='submit' onClick={this.onSave}><span>Save</span></button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nif (environment !== 'production') {\n  AssetsEditModal.propTypes = {\n    vpromm: PropTypes.string,\n    revealed: PropTypes.bool,\n    roadProps: PropTypes.object,\n    roadPropsOp: PropTypes.object,\n    onCloseClick: PropTypes.func,\n    opOnRoadProperty: PropTypes.func,\n    editRoad: PropTypes.func\n  };\n}\n\nexport default AssetsEditModal;\n","'use strict';\nimport React from 'react';\n\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from './modal';\n\nconst noop = () => {};\n// Once the component is mounted we store it to be able to access it from\n// the outside.\nvar theConfirmationModal = null;\n\nconst ConfirmationPrompt = React.createClass({\n  getInitialState: function () {\n    return {\n      onConfirm: noop,\n      onCancel: noop,\n      revealed: false,\n      title: 'Confirm',\n      description: null,\n      body: <p>Are you sure</p>\n    };\n  },\n\n  keyListener: function (e) {\n    // Enter.\n    if (this.state.revealed && e.keyCode === 13) {\n      e.preventDefault();\n      this.onConfirm();\n    }\n  },\n\n  onConfirm: function () {\n    this.setState({revealed: false});\n    this.state.onConfirm();\n  },\n\n  onCancel: function () {\n    this.setState({revealed: false});\n    this.state.onCancel();\n  },\n\n  componentDidMount: function () {\n    if (theConfirmationModal !== null) {\n      throw new Error('<ConfirmationPrompt /> component was already mounted. Only 1 is allowed.');\n    }\n    theConfirmationModal = this;\n    document.addEventListener('keyup', this.keyListener);\n  },\n\n  componentWillUnmount: function () {\n    document.removeEventListener('keyup', this.keyListener);\n  },\n\n  render: function () {\n    return (\n      <Modal\n        id='confirmation-prompt'\n        className='modal--small modal--prompt'\n        onCloseClick={this.onCancel}\n        revealed={this.state.revealed} >\n\n        <ModalHeader>\n          <div className='modal__headline'>\n            <h1 className='modal__title'>{this.state.title}</h1>\n            <div className='modal__description'>\n              {this.state.description}\n            </div>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          {this.state.body}\n        </ModalBody>\n        <ModalFooter>\n          <button className='mfa-xmark' type='button' onClick={this.onCancel}><span>Cancel</span></button>\n          <button className='mfa-main mfa-tick' type='submit' onClick={this.onConfirm}><span>Confirm</span></button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n});\n\nexport default ConfirmationPrompt;\n\nexport function showConfirm (opt, onConfirm = noop, onCancel = noop) {\n  if (theConfirmationModal === null) {\n    throw new Error('<ConfirmationPrompt /> component not mounted');\n  }\n\n  theConfirmationModal.setState(Object.assign({}, opt, {\n    revealed: true,\n    onConfirm,\n    onCancel\n  }));\n}\n","import React from 'react';\nimport { Link } from 'react-router';\nimport T from './t';\nimport {\n  ADMIN_MAP\n} from '../constants';\n\n\nconst DistrictList = ({ districts, aaId, language }) => (\n  <nav className='a-subnav'>\n    <h2><T>Districts</T></h2>\n    <ul className='a-children'>\n      {districts\n        .filter(({ id }) => ADMIN_MAP.district[id] !== undefined)\n        .map((child, i) => (\n          <li\n            key={child.id}\n          >\n            <Link\n              className={ADMIN_MAP.district[child.id] === '' ? 'disabled' : ''}\n              to={`/${language}/assets/${aaId}/${child.id}`}\n            >\n              {child.name_en}\n            </Link>\n          </li>\n        ))\n      }\n    </ul>\n  </nav>\n);\n\n\nexport default DistrictList;\n","'use strict';\nimport React, { PropTypes as T } from 'react';\nimport TetherComponent from 'react-tether';\nimport { CSSTransition } from 'react-transition-group';\n\nlet activeDropdowns = [];\n\n/*\n<Dropdown\n  className='browse-menu'\n  triggerClassName='browse-button'\n  triggerActiveClassName='button--active'\n  triggerText='Menu'\n  triggerTitle='Toggle menu options'\n  direction='down'\n  alignment='right' >\n\n  <h6 className='drop__title'>Browse</h6>\n  <ul className='drop__menu drop__menu--select'>\n    <li><Link to='' className='drop__menu-item' activeClassName='drop__menu-item--active'>Label</Link></li>\n  </ul>\n\n</Dropdown>\n*/\n\nexport default class Dropdown extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this._bodyListener = this._bodyListener.bind(this);\n    this._toggleDropdown = this._toggleDropdown.bind(this);\n  }\n\n  static closeAll () {\n    activeDropdowns.forEach(d => d.close());\n  }\n\n  _bodyListener (e) {\n    // Get the dropdown that is a parent of the clicked element. If any.\n    let theSelf = e.target;\n    if (theSelf.tagName === 'BODY' ||\n        theSelf.tagName === 'HTML' ||\n        e.target.getAttribute('data-hook') === 'dropdown:close') {\n      this.close();\n      return;\n    }\n\n    // If the trigger element is an \"a\" the target is the \"span\", but it is a\n    // button, the target is the \"button\" itself.\n    // This code handles this case. No idea why this is happening.\n    // TODO: Unveil whatever black magic is at work here.\n    if (theSelf.tagName === 'SPAN' &&\n        theSelf.parentNode === this.triggerRef &&\n        theSelf.parentNode.getAttribute('data-hook') === 'dropdown:btn') {\n      return;\n    }\n    if (theSelf.tagName === 'SPAN' &&\n        theSelf.parentNode.getAttribute('data-hook') === 'dropdown:close') {\n      this.close();\n      return;\n    }\n\n    if (theSelf && theSelf.getAttribute('data-hook') === 'dropdown:btn') {\n      if (theSelf !== this.triggerRef) {\n        this.close();\n      }\n      return;\n    }\n\n    do {\n      if (theSelf && theSelf.getAttribute('data-hook') === 'dropdown:content') {\n        break;\n      }\n      theSelf = theSelf.parentNode;\n    } while (theSelf && theSelf.tagName !== 'BODY' && theSelf.tagName !== 'HTML');\n\n    if (theSelf !== this.dropdownRef) {\n      this.close();\n    }\n  }\n\n  _toggleDropdown (e) {\n    e.preventDefault();\n    this.toggle();\n  }\n\n  // Lifecycle method.\n  // Called once as soon as the component has a DOM representation.\n  componentDidMount () {\n    activeDropdowns.push(this);\n    window.addEventListener('click', this._bodyListener);\n  }\n\n  // Lifecycle method.\n  componentWillUnmount () {\n    activeDropdowns.splice(activeDropdowns.indexOf(this), 1);\n    window.removeEventListener('click', this._bodyListener);\n  }\n\n  toggle () {\n    this.setState({ open: !this.state.open });\n  }\n\n  open () {\n    !this.state.open && this.setState({ open: true });\n  }\n\n  close () {\n    this.state.open && this.setState({ open: false });\n  }\n\n  renderTriggerElement () {\n    const {\n      id,\n      triggerTitle,\n      triggerText,\n      triggerClassName,\n      triggerActiveClassName,\n      triggerElement: TriggerElement\n    } = this.props;\n\n    let triggerKlasses = ['drop__toggle'];\n    let triggerProps = {\n      onClick: this._toggleDropdown,\n      'data-hook': 'dropdown:btn',\n      ref: el => { this.triggerRef = el; }\n    };\n\n    if (triggerClassName) {\n      triggerKlasses.push(triggerClassName);\n    }\n\n    if (this.state.open && triggerActiveClassName) {\n      triggerKlasses.push(triggerActiveClassName);\n    }\n\n    triggerProps.className = triggerKlasses.join(' ');\n\n    // Additional trigger props.\n    if (TriggerElement === 'button') {\n      triggerProps.type = 'button';\n    } else {\n      triggerProps.href = '#';\n      if (id) {\n        triggerProps.href += id;\n      }\n    }\n    if (triggerTitle) {\n      triggerProps.title = triggerTitle;\n    }\n\n    return (\n      <TriggerElement {...triggerProps} >\n        <span>{ triggerText }</span>\n      </TriggerElement>\n    );\n  }\n\n  renderContent () {\n    const { id, direction, className } = this.props;\n\n    // Base and additional classes for the trigger and the content.\n    let klasses = ['drop__content', 'drop__content--react', `drop-trans--${direction}`];\n    let dropdownContentProps = {\n      ref: el => { this.dropdownRef = el; },\n      'data-hook': 'dropdown:content'\n    };\n\n    if (className) {\n      klasses.push(className);\n    }\n\n    dropdownContentProps.className = klasses.join(' ');\n\n    if (id) {\n      dropdownContentProps.id = id;\n    }\n\n    return (\n      <CSSTransition\n        in={this.state.open}\n        appear={true}\n        unmountOnExit={true}\n        classNames='drop-trans'\n        timeout={{ enter: 300, exit: 300 }}>\n\n        <TransitionItem\n          props={dropdownContentProps}\n          onChange={this.props.onChange} >\n          { this.props.children }\n        </TransitionItem>\n\n      </CSSTransition>\n    );\n  }\n\n  render () {\n    let { alignment, direction } = this.props;\n\n    let allowed;\n    if (direction === 'up' || direction === 'down') {\n      allowed = ['left', 'center', 'right'];\n    } else if (direction === 'left' || direction === 'right') {\n      allowed = ['top', 'middle', 'bottom'];\n    } else {\n      throw new Error(`Dropdown: direction \"${direction}\" is not supported. Use one of: up, down, left, right`);\n    }\n\n    if (allowed.indexOf(alignment) === -1) {\n      throw new Error(`Dropdown: alignment \"${alignment}\" is not supported when direction is ${direction}. Use one of: ${allowed.join(', ')}`);\n    }\n\n    let tetherAttachment;\n    let tetherTargetAttachment;\n    switch (direction) {\n      case 'up':\n        tetherAttachment = `bottom ${alignment}`;\n        tetherTargetAttachment = `top ${alignment}`;\n        break;\n      case 'down':\n        tetherAttachment = `top ${alignment}`;\n        tetherTargetAttachment = `bottom ${alignment}`;\n        break;\n      case 'right':\n        tetherAttachment = `${alignment} left`;\n        tetherTargetAttachment = `${alignment} right`;\n        break;\n      case 'left':\n        tetherAttachment = `${alignment} right`;\n        tetherTargetAttachment = `${alignment} left`;\n        break;\n    }\n\n    // attachment={tetherAttachment}\n    // targetAttachment={tetherTargetAttachment}\n    return (\n      <TetherComponent\n        // attachment is the content.\n        attachment={tetherAttachment}\n        // targetAttachment is the trigger\n        targetAttachment={tetherTargetAttachment}\n        constraints={[{\n          to: 'scrollParent',\n          attachment: 'together'\n        }]}>\n        {this.renderTriggerElement()}\n        {this.renderContent()}\n      </TetherComponent>\n    );\n  }\n}\n\nDropdown.defaultProps = {\n  triggerElement: 'button',\n  direction: 'down',\n  alignment: 'center'\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Dropdown.propTypes = {\n    id: T.string,\n    onChange: T.func,\n\n    triggerElement: T.oneOf(['a', 'button']),\n    triggerClassName: T.string,\n    triggerActiveClassName: T.string,\n    triggerTitle: T.string,\n    triggerText: T.string.isRequired,\n\n    direction: T.oneOf(['up', 'down', 'left', 'right']),\n    alignment: T.oneOf(['left', 'center', 'right', 'top', 'middle', 'bottom']),\n\n    className: T.string,\n    children: T.node\n  };\n}\n\nclass TransitionItem extends React.Component {\n  componentDidMount () {\n    this.props.onChange && this.props.onChange(true);\n  }\n\n  componentWillUnmount () {\n    this.props.onChange && this.props.onChange(false);\n  }\n\n  render () {\n    return <div {...this.props.props}>{ this.props.children }</div>;\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  TransitionItem.propTypes = {\n    onChange: T.func,\n    props: T.object,\n    children: T.node\n  };\n}\n","import React from 'react';\nimport {\n  getContext\n} from 'recompose';\nimport lineColors from '../utils/line-colors';\nimport T from './t';\n\n\nconst renderTitle = (layer) => {\n  if (layer === 'iri') {\n    return <T>IRI</T>;\n  } else if (layer === 'or_width') {\n    return <T>Width</T>;\n  } else if (layer === 'or_condition') {\n    return <T>Condition</T>;\n  } else if (layer === 'or_surface') {\n    return <T>Surface</T>;\n  }\n};\n\nconst MapLegend = ({ layer }) => {\n  const colors = lineColors[layer];\n  const continuous = (colors.type !== 'categorical');\n  const stops = colors.stops;\n\n  let bestColorLabel;\n  let worstColorLabel;\n\n  if (continuous) {\n    bestColorLabel = stops[0][0];\n    worstColorLabel = stops[stops.length - 1][0];\n  }\n\n  return (\n    <figcaption className='panel legend-panel'>\n      <div className='panel__body'>\n        <h3 className='map-legend-title'>{renderTitle(layer)}</h3>\n        <div>\n          <div className='map-legend-scale-container'>\n            <div className='map-legend-scale' />\n            <span className='map-legend-scale-label'>{ bestColorLabel }</span>\n            <span className='map-legend-scale-label'>{ worstColorLabel }</span>\n          </div>\n          <div className='map-legend-nodata-container'>\n            <div className='map-legend-nodata' />\n            <span className='map-legend-nodata-label'><T>No data</T></span>\n          </div>\n        </div>\n      </div>\n    </figcaption>\n  );\n};\n\n\nMapLegend.propTypes = {\n  layer: React.PropTypes.string,\n  language: React.PropTypes.string\n};\n\n\nexport default getContext({ language: React.PropTypes.string })(MapLegend);\n","import React from 'react';\nimport {\n  getContext\n} from 'recompose';\nimport T, {\n  translate\n} from './t';\n\n\nconst MapOptions = ({ language, handleLayerChange, handleShowNoVpromms }) => (\n  <div className='panel options-panel'>\n    <div className='panel__body'>\n      <form className='form'>\n        <div className='form__group'>\n          <label className='form__label'><T>Visualized variable</T></label>\n          <select className='form__control' onChange={ e => handleLayerChange(e) }>\n            <option value='iri'>{translate(language, 'IRI')}</option>\n          </select>\n        </div>\n\n        <div className='form__group'>\n          <label className='form__label'>{translate(language, 'Options')}</label>\n          <label\n            className='form__option form__option--switch option fos-io'\n            htmlFor='show-no-vpromms'\n          >\n            <input type='checkbox' defaultChecked={true} name='show-no-vpromms' id='show-no-vpromms' value='show-no-vpromms' onChange={ e => handleShowNoVpromms(e) } />\n            <span className='form__option__ui'></span>\n            <span className='form__option__text'><T>Road without VPRoMMS ID</T> <b>----</b></span>\n          </label>\n        </div>\n      </form>\n    </div>\n  </div>\n);\n\n\nMapOptions.propTypes = {\n  layer: React.PropTypes.string,\n  handleLayerChange: React.PropTypes.func,\n  handleShowNoVpromms: React.PropTypes.func,\n  language: React.PropTypes.string\n};\n\n\nexport default getContext({ language: React.PropTypes.string })(MapOptions);\n","'use strict';\nimport React from 'react';\nimport _ from 'lodash';\nimport {\n  compose,\n  getContext\n} from 'recompose';\nimport { connect } from 'react-redux';\nimport {\n  push\n} from 'react-router-redux';\nimport T, {\n  translate\n} from './t';\nimport {\n  setSearchType,\n  fetchFieldVProMMsIds,\n  setFilteredVProMMs,\n  fetchAdmins,\n  clearAdmins,\n  fetchAdminBbox\n} from '../actions/action-creators';\nimport {\n  fetchRoadBboxEpic,\n  fetchRoadPropertyEpic\n} from '../redux/modules/roads';\nimport { withRouter } from 'react-router';\n\n\nvar MapSearch = React.createClass({\n  displayName: 'MapSearch',\n\n  propTypes: {\n    searchType: React.PropTypes.string,\n    fetching: React.PropTypes.bool,\n    vpromms: React.PropTypes.array,\n    admins: React.PropTypes.array,\n    filteredVProMMs: React.PropTypes.array,\n    language: React.PropTypes.string,\n    _setSearchType: React.PropTypes.func,\n    _fetchAdmins: React.PropTypes.func,\n    _clearAdmins: React.PropTypes.func,\n    _setFilteredVProMMs: React.PropTypes.func,\n    fetchRoadBbox: React.PropTypes.func,\n    _fetchFieldVProMMsIds: React.PropTypes.func,\n    _fetchAdminBbox: React.PropTypes.func,\n    fetchRoadProperty: React.PropTypes.func\n  },\n\n  getInitialState: function () {\n    return {\n      searchVal: '',\n      showResults: true\n    };\n  },\n\n  componentDidMount: function () {\n    this.props._fetchFieldVProMMsIds();\n    this.search = _.debounce(this.search, 300);\n  },\n\n  componentWillUnmount: function () {\n    this.props._clearAdmins();\n    this.props._setFilteredVProMMs([]);\n  },\n\n  componentWillReceiveProps: function (nextProps) {\n    if (this.props.language !== nextProps.language) {\n      this.setState({ searchVal: '', showResults: false });\n      this.props._clearAdmins();\n      this.props._setFilteredVProMMs([]);\n    }\n  },\n\n  onClearSearch: function (e) {\n    this.setState({ searchVal: '', showResults: false });\n    this.props._clearAdmins();\n    this.props._setFilteredVProMMs([]);\n  },\n\n  onSearchTypeChange: function (e) {\n    this.props._setSearchType(e.target.value);\n    this.setState({ searchVal: '', showResults: true });\n    this.props._clearAdmins();\n    this.props._setFilteredVProMMs([]);\n  },\n\n  onSearchQueryChange: function (e) {\n    var searchVal = e.target.value;\n    this.setState({ searchVal, showResults: true });\n    // The search function is debounced.\n    this.search(_.trim(searchVal));\n  },\n\n  onSearchSubmit: function (e) {\n    e.preventDefault();\n    this.setState({ showResults: true });\n    // On enter, use the first value. Feeling lucky!\n    var searchVal = this.state.searchVal;\n    if (searchVal.length) {\n      if (this.props.searchType === 'Admin' && this.props.admins[0]) {\n        this.searchAdminArea(this.props.admins[0].id);\n        this.setState({ searchVal: this.props.admins[0].name_en });\n      } else if (this.props.filteredVProMMs[0]) {\n        this.searchVProMMsID(this.props.filteredVProMMs[0]);\n        this.setState({ searchVal: this.props.filteredVProMMs[0] });\n      }\n    }\n  },\n\n  search: function (searchVal) {\n    if (this.props.searchType === 'Admin') {\n      if (searchVal.length > 0) {\n        this.props._fetchAdmins(searchVal);\n      } else {\n        this.props._clearAdmins();\n      }\n    } else {\n      if (searchVal.length >= 2) {\n        // Filter the available vpromms.\n        const matches = this.props.vpromms.filter((vpromm) => {\n          return vpromm.slice(0, searchVal.length) === searchVal.toUpperCase();\n        });\n        this.props._setFilteredVProMMs(matches.slice(0, 10));\n      } else {\n        this.props._setFilteredVProMMs([]);\n      }\n    }\n  },\n\n  searchVProMMsID: function (VProMMsID) {\n    this.setState({ showResults: false }, () => {\n      // Wait for the state to be set, otherwise the shouldComponentUpdate\n      // of the parent will prevent the re-render.\n      // This is an artifact.\n      this.props.fetchRoadBbox(VProMMsID);\n      this.props.fetchRoadProperty(VProMMsID);\n    });\n  },\n\n  searchAdminArea: function (adminAreaID) {\n    this.setState({ showResults: false }, () => {\n      // Wait for the state to be set, otherwise the shouldComponentUpdate\n      // of the parent will prevent the re-render.\n      // This is an artifact.\n      this.props._fetchAdminBbox(adminAreaID);\n    });\n  },\n\n  onAAClick: function (aa, e) {\n    e.preventDefault();\n    this.searchAdminArea(aa.id);\n    this.setState({ searchVal: this.props.language === 'en' ? aa.name_en : aa.name_vn });\n  },\n\n  onVprommClick: function (id, e) {\n    e.preventDefault();\n    this.searchVProMMsID(id);\n    this.setState({ searchVal: id });\n  },\n\n  renderResults: function () {\n    if (!this.state.showResults) {\n      return null;\n    }\n\n    if (this.props.fetching) {\n      return (\n        <div className='search-results'>\n          <p className='info'><T>Loading</T>...</p>\n        </div>\n      );\n    }\n\n    // Data to work with depends n the search type.\n    let data = this.props.searchType === 'Admin' ? this.props.admins : this.props.filteredVProMMs;\n    let contents = null;\n\n    if (this.props.searchType === 'Admin') {\n      if (data.length) {\n        contents = _(data)\n          .groupBy(o => o.level)\n          .reduce((acc, level, key) => {\n            acc.push(<h4 key={`aa-type-admin-${key}`}><T>Admin Level</T> - <T>{key}</T></h4>);\n\n            let adminAreas = level.reduce((_acc, o) => {\n              return _acc.concat(<li key={o.id}><a href='#' onClick={this.onAAClick.bind(null, o)}>{this.props.language === 'en' ? o.name_en : o.name_vn}</a></li>);\n            }, []);\n\n            acc.push(<ul key={`aa-admins-${key}`}>{adminAreas}</ul>);\n\n            return acc;\n          }, []);\n      } else {\n        if (this.state.searchVal) {\n          contents = <p className='info' key='no-results'><T>No results available. Please refine your search</T></p>;\n        }\n      }\n    } else if (this.props.searchType === 'VProMMs' && this.state.searchVal.length >= 2) {\n      if (!data.length) {\n        contents = <p className='info' key='no-results'><T>No results available. Please refine your search</T></p>;\n      } else {\n        contents = [<h4 key={`vpromms-title`}>VProMMs</h4>];\n\n        let vpromms = data.reduce((acc, o, key) => {\n          return acc.concat(<li key={o}><a href='#' onClick={this.onVprommClick.bind(null, o)}>{o}</a></li>);\n        }, []);\n\n        contents.push(<ul key={`vpromms-list`}>{vpromms}</ul>);\n      }\n    }\n\n    if (contents === null) {\n      return null;\n    }\n\n    return (\n      <div className='search-results'>\n        <div className='inner'>\n          {contents}\n        </div>\n      </div>\n    );\n  },\n\n  render: function () {\n    const { language, searchType } = this.props;\n\n    return (\n      <form className='form search' onSubmit={this.onSearchSubmit}>\n        <div className='form__group'>\n          <label className='form__label' htmlFor='search-field'><T>Search</T></label>\n          <div className='form__input-group form__input-group--medium'>\n            <select className='form__control' onChange={this.onSearchTypeChange} value={searchType}>\n              <option value='Admin'>{translate(language, 'Admin')}</option>\n              <option value='VProMMs'>VProMMs</option>\n            </select>\n            <input\n              type='text'\n              id='search-field'\n              name='search-field'\n              className='form__control'\n              placeholder={translate(language, 'Search')}\n              value={this.state.searchVal}\n              onChange={this.onSearchQueryChange} />\n            <button\n              type='button'\n              className='search__button'\n              onClick={this.onSearchSubmit}\n            >\n              <span><T>Search</T></span>\n            </button>\n          </div>\n\n          {this.state.searchVal !== '' &&\n            <button\n              type='button'\n              className='search__clear'\n              title={translate(language, 'Clear search')}\n              onClick={this.onClearSearch}\n            >\n              <span><T>Clear search</T></span>\n            </button>\n          }\n\n          {this.renderResults()}\n\n        </div>\n      </form>\n    );\n  }\n});\n\n\nexport default compose(\n  getContext({ language: React.PropTypes.string }),\n  withRouter,\n  // withProps(({ location: { query: { activeRoad } } }) => ({\n  //   activeRoad\n  // })),\n  connect(\n    state => ({\n      searchType: state.setSearchType.searchType,\n      admins: state.admins.units,\n      vpromms: state.fieldVProMMsids.ids,\n      filteredVProMMs: state.setFilteredVProMMs,\n      fetching: state.admins.fetching\n    }),\n    (dispatch, { location }) => ({\n      _fetchFieldVProMMsIds: (...args) => dispatch(fetchFieldVProMMsIds(...args)),\n      _setSearchType: (...args) => dispatch(setSearchType(...args)),\n      _setFilteredVProMMs: (filteredVProMMs) => dispatch(setFilteredVProMMs(filteredVProMMs)),\n      _clearAdmins: () => dispatch(clearAdmins()),\n      _fetchAdmins: (id) => dispatch(fetchAdmins(id)),\n      _fetchAdminBbox: (id) => dispatch(fetchAdminBbox(id)),\n      fetchRoadBbox: (vprommsId) => {\n        dispatch(push(Object.assign({}, location, {\n          query: Object.assign({}, location.query, {\n            activeRoad: vprommsId\n          })\n        })));\n        dispatch(fetchRoadBboxEpic(vprommsId));\n      },\n      fetchRoadProperty: (vprommsId) => {\n        dispatch(fetchRoadPropertyEpic(vprommsId));\n      }\n    })\n  )\n)(MapSearch);\n","'use strict';\nimport React, { PropTypes as T } from 'react';\nimport { Portal } from 'react-portal';\nimport { CSSTransition } from 'react-transition-group';\n\nexport class Modal extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.componentAddedBodyClass = false;\n\n    this.onOverlayClick = this.onOverlayClick.bind(this);\n    this.onCloseClick = this.onCloseClick.bind(this);\n    this.keyListener = this.keyListener.bind(this);\n\n    this.el = document.createElement('div');\n    this.el.className = `modal-portal-${Math.random().toString()}`;\n    this.rootEl = document.querySelector('#site-canvas');\n    if (!this.rootEl) throw new Error('Portal root element does not exist.');\n  }\n\n  keyListener (e) {\n    // ESC.\n    if (this.props.revealed && e.keyCode === 27) {\n      e.preventDefault();\n      this.props.onCloseClick();\n    }\n  }\n\n  // closeModal () {\n  //   this.setState({ revealed: false });\n  // },\n\n  // openModal () {\n  //   this.setState({ revealed: true });\n  // },\n\n  // getInitialState () {\n  //   return {\n  //     revealed: this.props.revealed\n  //   };\n  // },\n\n  toggleBodyClass (revealed) {\n    let bd = document.getElementsByTagName('body')[0];\n    if (revealed) {\n      this.componentAddedBodyClass = true;\n      bd.classList.add('modal__unscrollable-y');\n    } else if (this.componentAddedBodyClass) {\n      // Only act if the class was added by this component.\n      this.componentAddedBodyClass = false;\n      bd.classList.remove('modal__unscrollable-y');\n    }\n  }\n\n  componentDidUpdate () {\n    this.toggleBodyClass(this.props.revealed);\n  }\n\n  componentDidMount () {\n    document.addEventListener('keyup', this.keyListener);\n    this.toggleBodyClass(this.props.revealed);\n\n    this.rootEl.appendChild(this.el);\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keyup', this.keyListener);\n    this.toggleBodyClass(false);\n\n    this.rootEl.removeChild(this.el);\n  }\n\n  onOverlayClick (e) {\n    // Prevent children from triggering this.\n    if (e.target === e.currentTarget) {\n      // Overlay click is disabled.\n      // this.props.onOverlayClick.call(this, e);\n    }\n  }\n\n  onCloseClick (e) {\n    e.preventDefault();\n    this.props.onCloseClick(e);\n  }\n\n  getChild (klass) {\n    let c = null;\n    React.Children.forEach(this.props.children, o => {\n      if (!c && o.type === klass) {\n        c = o;\n      }\n    });\n    return c;\n  }\n\n  render () {\n    var klasses = ['modal'];\n    if (this.props.className) {\n      klasses.push(this.props.className);\n    }\n\n    return (\n      <Portal node={this.el && this.el}>\n        <CSSTransition\n          in={this.props.revealed}\n          appear={true}\n          unmountOnExit={true}\n          classNames='modal'\n          timeout={{ enter: 300, exit: 300 }}>\n\n          <section className={klasses.join(' ')} key={'modal-' + this.props.id} onClick={this.onOverlayClick} id={this.props.id}>\n            <div className='modal__inner'>\n              {this.getChild(ModalHeader)}\n              {this.getChild(ModalBody)}\n              {this.getChild(ModalFooter)}\n            </div>\n            <button className='modal__button-dismiss' title='Close' onClick={this.onCloseClick}><span>Dismiss</span></button>\n          </section>\n\n        </CSSTransition>\n      </Portal>\n    );\n  }\n}\n\nModal.defaultProps = {\n  revealed: false,\n\n  onOverlayClick: function (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Modal', 'onOverlayClick handler not implemented');\n    }\n  },\n\n  onCloseClick: function (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Modal', 'onCloseClick handler not implemented');\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Modal.propTypes = {\n    id: T.string.isRequired,\n    revealed: T.bool,\n    className: T.string,\n    onOverlayClick: T.func,\n    onCloseClick: T.func,\n    children: function (props, propName, componentName) {\n      let types = ['ModalHeader', 'ModalBody', 'ModalFooter'];\n      let typesRequired = ['ModalHeader', 'ModalBody'];\n      let children = React.Children.toArray(props[propName]);\n\n      let c = children.length;\n      if (c === 0 || c > 3) {\n        return new Error(`${componentName} should have at least a child but no more than 3`);\n      }\n\n      let components = {};\n\n      for (let i = 0; i < c; i++) {\n        let o = children[i];\n        let name = o.type.name;\n        if (types.indexOf(name) === -1) {\n          return new Error(`${componentName} children should be of the following types: ${types.join(', ')}`);\n        }\n        if (!components[name]) {\n          components[name] = 0;\n        }\n        if (++components[name] > 1) {\n          return new Error(`${componentName} should have only one instance of: ${name}`);\n        }\n      }\n\n      for (let i = 0; i < typesRequired.length; i++) {\n        if (!components[typesRequired[i]]) {\n          return new Error(`${componentName} should have a ${typesRequired[i]}`);\n        }\n      }\n    }\n  };\n}\n\nexport class ModalHeader extends React.Component {\n  render () {\n    return (\n      <header className='modal__header'>\n        {this.props.children}\n      </header>\n    );\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  ModalHeader.propTypes = {\n    children: T.node\n  };\n}\n\nexport class ModalBody extends React.Component {\n  render () {\n    return (\n      <div className='modal__body'>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  ModalBody.propTypes = {\n    children: T.node\n  };\n}\n\nexport class ModalFooter extends React.Component {\n  render () {\n    return (\n      <footer className='modal__footer'>\n        {this.props.children}\n      </footer>\n    );\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  ModalFooter.propTypes = {\n    children: T.node\n  };\n}\n","import React from 'react';\nimport T from './t';\nimport classnames from 'classnames';\nimport {\n  withHandlers\n} from 'recompose';\n\n\nconst ProvinceTableColumnHeader = withHandlers({\n  sortLink: ({ columnKey, sortLinkHandler }) => () => sortLinkHandler(columnKey)\n})(({ columnKey, label, sortField, sortOrder, sortLink }) => (\n  <th\n    className=\"table-properties-head sortable\"\n    onClick={sortLink}\n  >\n    <i\n      className={classnames({\n        'collecticon-sort-none': sortField !== columnKey,\n        'collecticon-sort-asc': sortField === columnKey && sortOrder === 'asc',\n        'collecticon-sort-desc': sortField === columnKey && sortOrder === 'desc'\n      })}\n    />\n    <T>{label}</T>\n  </th>\n));\n\n\nexport default ProvinceTableColumnHeader;\n","import React from 'react';\nimport { Link } from 'react-router';\n\n\nconst ProvinceTableRow = ({\n  id, name, routeId, osmCount, count, percentageComplete, language\n}) => (\n  <tr>\n    <td>\n      <Link to={`${language}/assets/${routeId}`}>\n        <strong>{name}</strong>\n      </Link>\n    </td>\n    <td>{osmCount}</td>\n    <td>{count}</td>\n    <td>\n      <div className='meter'>\n        <div\n          className='meter__internal'\n          style={{width: `${percentageComplete}%`}}\n        />\n      </div>\n    </td>\n  </tr>\n);\n\n\nexport default ProvinceTableRow;\n","import React from 'react';\nimport {\n  map,\n  orderBy\n} from 'lodash';\nimport ProvinceTableRow from './province-table-row';\nimport ProvinceTableColumnHeader from './province-table-column-header';\n\n\nconst ProvinceTable = ({\n  provinces, language, sortField, sortOrder, sortHandler\n}) => (\n  <div className='table'>\n    <table>\n      <thead>\n        <tr>\n          {\n            [['name', 'Province'], ['osmCount', 'Field'], ['count', 'Total'], ['percentageComplete', 'Progress']]\n              .map(([columnKey, columnLabel]) => (\n                <ProvinceTableColumnHeader\n                  key={columnLabel}\n                  columnKey={columnKey}\n                  label={columnLabel}\n                  sortField={sortField}\n                  sortOrder={sortOrder}\n                  sortLinkHandler={sortHandler}\n                />\n              ))\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {map(\n          orderBy(provinces, [sortField], [sortOrder]),\n          ({ id, name, routeId, osmCount, count, percentageComplete }) => (\n            <ProvinceTableRow\n              key={id}\n              id={id}\n              name={name}\n              routeId={routeId}\n              osmCount={osmCount}\n              count={count}\n              percentageComplete={percentageComplete}\n              language={language}\n            />\n          )\n        )}\n      </tbody>\n    </table>\n  </div>\n);\n\n\nexport default ProvinceTable;\n","import React from 'react';\nimport {\n  range\n} from 'lodash';\nimport {\n  compose,\n  withProps,\n  withHandlers\n} from 'recompose';\nimport T from './t';\n\n\nconst PageNumber = withHandlers({\n  buttonClick: ({ setPage, page }) => () => setPage(page)\n})(({ page, currentPage, buttonClick }) => (\n  <li>\n    {page === currentPage ?\n      <strong>{page}</strong> :\n      <button\n        className=\"button button-base-light\"\n        onClick={buttonClick}\n      >\n        {page}\n      </button>\n    }\n  </li>\n));\n\n\nconst RoadPagination = ({\n  start, end, page: currentPage, roadPageCount, setPage, nextPage, previousPage\n}) => (\n  <div className=\"a-paginator\">\n    <ul>\n      {\n        range(start, end + 1).map((page) => (\n          <PageNumber\n            key={page}\n            page={page}\n            currentPage={currentPage}\n            setPage={setPage}\n          />\n        ))\n      }\n    </ul>\n    <button\n      className=\"button button-base-light\"\n      onClick={previousPage}\n      disabled={currentPage === 1}\n    >\n      <T>Previous</T>\n    </button>\n    <button\n      className=\"button button-base-light\"\n      onClick={nextPage}\n      disabled={currentPage === roadPageCount}\n    >\n      <T>Next</T>\n    </button>\n  </div>\n);\n\n\nexport default compose(\n  withProps(({ page, roadPageCount }) => {\n    const start = Math.max(page - 10, 1);\n    const end = Math.min(start + 10, roadPageCount);\n    return { start, end };\n  }),\n  withHandlers({\n    nextPage: ({ page, setPage }) => () => setPage(Math.max(page + 1, 1)),\n    previousPage: ({ page, roadPageCount, setPage }) => () => setPage(Math.min(page - 1, roadPageCount))\n  })\n)(RoadPagination);\n","import React from 'react';\nimport {\n  withProps\n} from 'recompose';\nimport T from './t';\n\n\nconst RoadProgressBar = ({ percent, roadOsmCount, roadCount }) => (\n  <div className='a-main__status'>\n    <h2>\n      <strong>{percent}</strong>\n      <span>% <T>of VPRoMMS Ids have field data</T> <em>({roadOsmCount} / {roadCount})</em></span>\n    </h2>\n    <div className='meter'>\n      <div className='meter__internal' style={{width: `${percent}%`}}></div>\n    </div>\n  </div>\n);\n\n\nexport default withProps(({ roadOsmCount = 0, roadCount }) => ({\n  percent: roadCount === 0 ?\n    0 :\n    ((roadOsmCount / roadCount) * 100).toFixed(2)\n}))(RoadProgressBar);\n","import React from 'react';\nimport { Link } from 'react-router';\nimport c from 'classnames';\nimport { api } from '../config';\nimport T from './t';\n\n\nconst RowReadView = ({\n  vpromm, properties, hasOSMData, language, shouldShowProperties,\n  toggleProperties, showDeleteView, showEditView\n}) => {\n  return (\n    <tr>\n      <td><Link to={`/${language}/assets/road/${vpromm}/`}><strong>{vpromm}</strong></Link></td>\n      <td className={hasOSMData ? 'added' : 'not-added'}>\n        <div className='a-table-actions'>\n          <Link className='a-table-action' to={`/${language}/assets/road/${vpromm}/`}>\n            <T>View</T>\n          </Link>\n          <a className={c('a-table-action', {disabled: !hasOSMData})} href={`${api}/properties/roads/${vpromm}.geojson?download`} disabled={!hasOSMData}>\n            <T>Download</T>\n          </a>\n        </div>\n      </td>\n    </tr>\n  );\n};\n\n\nconst TableRow = (props) => {\n  if (props.viewState === 'read') {\n    return <RowReadView {...props} />;\n  }\n};\n\n\nTableRow.propTypes = {\n  viewState: React.PropTypes.string.isRequired\n};\n\n\nexport const TableErrorRow = () => (\n  <tr className=\"error-row\">\n    <td/>\n    <td colSpan=\"3\">\n      <p className=\"invalid\"><strong><T>Error</T></strong></p>\n    </td>\n  </tr>\n);\n\n\nexport default TableRow;\n","import React from 'react';\nimport _ from 'lodash';\nimport Row from '../containers/road-table-row-container';\nimport RoadPagination from './road-pagination';\nimport RoadProgressBar from './road-progress-bar';\nimport T from './t';\n\n\nconst RoadTable = ({\n  roadsPage, roadsPageStatus,\n  roadCount, roadPageCount, roadOsmCount, roadCountStatus,\n  page, sortField, sortOrder,\n  sortColumnAction, setPage\n}) => (\n  <div className=\"table-container\">\n    {\n      roadCountStatus === 'complete' && roadCount > 0 &&\n        <RoadProgressBar\n          roadOsmCount={roadOsmCount}\n          roadCount={roadCount}\n        />\n    }\n    {\n      roadsPageStatus === 'pending' ?\n        <div className='a-subnav loading'><h2><T>Loading</T></h2></div> :\n        roadsPageStatus === 'error' ?\n          <div className='a-subnav error'><h2><T>Error</T></h2></div> :\n          <div className=\"table a-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th className='table-properties-head'><T>VPRoMMS ID</T></th>\n                  <th className='table-properties-head'><T>Field Data</T></th>\n                </tr>\n              </thead>\n              <tbody>\n                {_.map(roadsPage, (vpromm) => (\n                  <Row\n                    key={vpromm}\n                    vpromm={vpromm}\n                  />\n                ))}\n              </tbody>\n            </table>\n          </div>\n    }\n    {\n      roadCountStatus === 'complete' &&\n        <RoadPagination\n          page={page}\n          roadPageCount={roadPageCount}\n          setPage={setPage}\n        />\n    }\n  </div>\n);\n\n\nRoadTable.propTypes = {\n  roadsPage: React.PropTypes.array,\n  roadPageCount: React.PropTypes.number\n};\n\n\nexport default RoadTable;\n","'use strict';\nimport React from 'react';\nimport {\n  compose,\n  getContext,\n  mapProps\n} from 'recompose';\nimport {\n  Link,\n  withRouter\n} from 'react-router';\nimport c from 'classnames';\nimport T, {\n  translate\n} from './t';\nimport Dropdown from './dropdown';\n\nconst classForLanguage = (current, lang) => c('drop__menu-item', {'drop__menu-item--active': current === lang});\n\nconst SiteHeader = ({language, pathname}) => (\n  <header className='site__header'>\n    <div className='inner'>\n      <div className='site__headline'>\n        <h1 className='site__title'>\n          <Link to={`/${language}`}>\n            <img src='assets/graphics/layout/openroads-vn-logo-hor-neg.svg' width='736' height='96' alt='OpenRoads Vietnam logo' /><span>OpenRoads</span> <strong>Vietnam</strong>\n          </Link>\n        </h1>\n      </div>\n\n      <nav className='site__nav' role='navigation'>\n        <Dropdown\n          className='site__menu-language'\n          triggerClassName='button-language'\n          triggerActiveClassName='button--active'\n          triggerText={language === 'en' ? 'English' : 'Tiếng Việth'}\n          triggerTitle={translate(language, 'Change Language')}\n          direction='down'\n          alignment='center' >\n          <h3 className='drop__title'><T>Select language</T></h3>\n          <ul className='drop__menu drop__menu--select'>\n            <li><Link to={pathname.replace(/^\\/[a-z]+/, '/en')} className={classForLanguage(language, 'en')}>English</Link></li>\n            <li><Link to={pathname.replace(/^\\/[a-z]+/, '/vi')} className={classForLanguage(language, 'vi')}>Tiếng Việt</Link></li>\n          </ul>\n        </Dropdown>\n        <ul className='site__menu-global'>\n          <li>\n            <Link\n              to={`/${language}/assets`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>Assets</T>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/${language}/explore`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>Explore</T>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/${language}/editor`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>Editor</T>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/${language}/tasks`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>Tasks</T>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/${language}/upload`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>Upload</T>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/${language}/faq`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>FAQ</T>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/${language}/demo`}\n              className='site__menu-global-item'\n              activeClassName='site__menu-global-item--active'>\n              <T>Demo</T>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n);\n\n\nSiteHeader.propTypes = {\n  language: React.PropTypes.string.isRequired,\n  pathname: React.PropTypes.string.isRequired\n};\n\n\nmodule.exports = compose(\n  getContext({ language: React.PropTypes.string }),\n  withRouter,\n  mapProps(({ language, router: { location: { pathname } } }) => ({\n    language,\n    pathname\n  }))\n)(SiteHeader);\n","import React, {\n  PropTypes\n} from 'react';\nimport {\n  getContext\n} from 'recompose';\nimport en from '../../locales/source/en.json';\nimport vi from '../../locales/vi.json';\n\n\nexport const translate = (language, str) => {\n  if (language === 'en' && en[str]) {\n    return en[str];\n  } else if (language === 'vi' && vi[str]) {\n    return vi[str];\n  }\n\n  if (language === 'en' && process.env.DS_ENV !== 'production') {\n    console.warn('No english translation for', str);\n  }\n\n  return str;\n};\n\n\nconst T = ({ language, children: str }) => {\n  if (language === 'en' && en[str]) {\n    return <span>{en[str]}</span>;\n  } else if (language === 'vi' && vi[str]) {\n    return <span>{vi[str]}</span>;\n  }\n\n  if (language === 'en' && process.env.DS_ENV !== 'production') {\n    console.warn('No english translation for', str);\n  }\n\n  return <span>{str}</span>;\n};\n\n\nT.propTypes = {\n  language: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired\n};\n\n\nexport default getContext({ language: PropTypes.string })(T);\n","'use strict';\nimport React from 'react';\nimport T, {\n  translate\n} from '../components/t';\n\nconst TaskListItem = React.createClass({\n  displayName: 'TaskListItem',\n  propTypes: {\n    _id: React.PropTypes.string,\n    vpromm: React.PropTypes.string,\n    province: React.PropTypes.object,\n    mode: React.PropTypes.string,\n    type: React.PropTypes.string,\n    language: React.PropTypes.string,\n    selected: React.PropTypes.bool,\n    isHighlighted: React.PropTypes.bool,\n    toggleSelect: React.PropTypes.func,\n    onMouseOver: React.PropTypes.func,\n    onMouseOut: React.PropTypes.func\n  },\n\n  toggleSelect: function () {\n    const { _id, toggleSelect } = this.props;\n    toggleSelect(_id);\n  },\n\n  handleMouseOver: function () {\n    const { _id, onMouseOver } = this.props;\n    onMouseOver(_id);\n  },\n\n  handleMouseOut: function () {\n    const { _id, onMouseOut } = this.props;\n    onMouseOut(_id);\n  },\n\n  renderCheckbox: function () {\n    const { _id, selected } = this.props;\n    return (\n      <label className='form__option form__option--custom-checkbox'>\n        <input\n          type='checkbox'\n          name={ `road-${_id}--checkbox` }\n          id={ `road-${_id}--checkbox` }\n          value={ `road-${_id}` }\n          onChange={ this.toggleSelect }\n          checked={ selected }\n        />\n        <span className='form__option__ui'></span>\n        <span className='form__option__text visually-hidden'><T>Selected</T></span>\n      </label>\n    );\n  },\n\n  renderRadio: function () {\n    const { _id, selected } = this.props;\n    return (\n      <label className='form__option form__option--custom-radio'>\n        <input\n          type='radio'\n          name='road-group--radio'\n          id={`road-${_id}--radio`}\n          value={`road-${_id}`}\n          onChange={ this.toggleSelect }\n          checked={ selected }\n        />\n        <span className='form__option__ui'></span>\n        <span className='form__option__text visually-hidden'><T>Selected</T></span>\n      </label>\n    );\n  },\n\n  render: function () {\n    const { vpromm, language, type, isHighlighted, province } = this.props;\n\n    return (\n      <li className='road-list__item' onMouseOver={ this.handleMouseOver } onMouseOut={ this.handleMouseOut }>\n        <article className={`road ${isHighlighted ? 'road--highlight' : ''}`} id='road-{_id}'>\n          <header className='road__header'>\n            <div className='road__headline'>\n              <h1 className='road__title'>{ vpromm || translate(language, 'No ID')}</h1>\n              { vpromm && <p className='road__subtitle'>{province.name_en}</p> }\n            </div>\n            <div className='road__h-actions'>\n              { type === 'checkbox' && this.renderCheckbox() }\n              { type === 'radio' && this.renderRadio() }\n            </div>\n          </header>\n        </article>\n      </li>\n    );\n  }\n});\n\nmodule.exports = TaskListItem;\n","'use strict';\nimport { defaultsDeep } from 'lodash';\n/*\n * App configuration.\n *\n * Uses settings in config/production.js, with any properties set by\n * config/staging.js or config/local.js overriding them depending upon the\n * environment.\n *\n * This file should not be modified.  Instead, modify one of:\n *\n *  - config/production.js\n *      Production settings (base).\n *  - config/staging.js\n *      Overrides to production if ENV is staging.\n *  - config/local.js\n *      Overrides if local.js exists.\n *      This last file is gitignored, so you can safely change it without\n *      polluting the repo.\n */\n\nvar configurations = require('./config/*.js', {mode: 'hash'});\nvar config = configurations.local || {};\n\nif (process.env.DS_ENV === 'staging') {\n  defaultsDeep(config, configurations.staging);\n}\ndefaultsDeep(config, configurations.production);\n\nmodule.exports = config;\n","module.exports = {};\n","'use strict';\n/*\n * App config for production.\n */\nmodule.exports = {\n  environment: 'production',\n  api: 'http://api.openroads-vn.com',\n  mbToken: 'pk.eyJ1Ijoib3BlbnJvYWRzIiwiYSI6InJ0aUQ2N3MifQ.R3hdFqriZr6kEUr-j_FYpg',\n  editorUrl: '//editor.openroads-vn.com',\n  roadNetTileLayerUrl: 'http://api.openroads-vn.com:3000/dashboard/{z}/{x}/{y}.png',\n  provinceDumpBaseUrl: 'https:/openroads-vn-dumps-prod.s3.amazonaws.com/by-province-id/'\n};\n","'use strict';\n/*\n * App config overrides for staging.\n */\n\nmodule.exports = {\n  environment: 'staging'\n};\n","export const ADMIN_MAP = {\n  province: {\n    '101': '',\n    '103': '',\n    '104': '',\n    '106': '',\n    '107': '',\n    '109': '',\n    '111': '',\n    '113': {id: '67', name: 'Nam Dinh'},\n    '115': '',\n    '117': '',\n    '201': {id: '03', name: 'Ha Giang'},\n    '203': {id: '04', name: 'Cao Bang'},\n    '205': {id: '02', name: 'Lao Cai'},\n    '207': {id: '53', name: 'Bac Kan'},\n    '209': {id: '09', name: 'Lang Son'},\n    '401': {id: '21', name: 'Thanh Hoa'},\n    '403': {id: '22', name: 'Nghe An'},\n    '405': {id: '23', name: 'Ha Tinh'},\n    '407': '',\n    '409': {id: '25', name: 'Quang Tri'},\n    '411': {id: '26', name: 'Thua Thien Hue'},\n    '501': '',\n    '503': {id: '27', name: 'Quang Nam'},\n    '505': '',\n    '507': {id: '31', name: 'Binh Dinh'},\n    '509': '',\n    '511': '',\n    '601': '',\n    '603': '',\n    '605': '',\n    '606': '',\n    '607': '',\n    '701': '',\n    '705': '',\n    '707': '',\n    '709': '',\n    '711': '',\n    '713': '',\n    '715': '',\n    '717': '',\n    '801': '',\n    '803': '',\n    '805': '',\n    '807': '',\n    '809': '',\n    '810': '',\n    '811': '',\n    '813': '',\n    '814': {id: '24', name: 'Quang Binh'},\n    '815': '',\n    '816': '',\n    '817': '',\n    '819': '',\n    '821': '',\n    '823': ''\n  },\n  district: {\n    '40319': 'TK',\n    '40305': 'QP',\n    '40329': 'DL',\n    '40313': 'NG',\n    '40309': 'KS',\n    '40331': 'TC',\n    '40315': 'TD',\n    '40335': 'ND',\n    '40337': 'HN',\n    '40317': 'QL',\n    '40323': 'YT',\n    '40303': 'CL',\n    '40314': '',\n    '40307': 'QC',\n    '40325': 'DC',\n    '40333': 'NL',\n    '40327': 'AS',\n    '40311': 'QH',\n    '40321': 'CC',\n    '40301': 'VI',\n    '40507': 'DT',\n    '40501': 'HT',\n    '40515': 'CX',\n    '40517': 'HK',\n    '40503': 'HL',\n    '40519': 'KA',\n    '40512': '',\n    '40513': 'TH',\n    '40509': 'HS',\n    '40505': 'NX',\n    '40510': 'VQ',\n    '40511': 'CL',\n    '81410': 'DH',\n    '40913': 'HL',\n    '40905': 'VL',\n    '40915': 'HH',\n    '40917': 'DA',\n    '40901': 'DH',\n    '40906': 'CC',\n    '40909': 'CL',\n    '40903': 'QT',\n    '40911': 'TP',\n    '40907': 'GL',\n    '41115': 'AL',\n    '41105': 'QD',\n    '41117': 'ND',\n    '41109': 'PV',\n    '41103': 'PD',\n    '41101': 'HE',\n    '41111': 'HU',\n    '41107': 'HR',\n    '41113': 'PL',\n    '50315': 'TB',\n    '50325': 'NT',\n    '50305': 'DG',\n    '50304': 'TG',\n    '50319': 'HD',\n    '50321': 'TP',\n    '50309': 'DB',\n    '50318': '',\n    '50327': 'BT',\n    '50311': 'DX',\n    '50313': 'NG',\n    '50328': 'NM',\n    '50317': 'QS',\n    '50329': 'PN',\n    '50303': 'HA',\n    '50323': 'PS',\n    '50307': 'DL',\n    '50301': 'TK',\n    '50715': 'TS',\n    '50721': 'VC',\n    '50709': 'MN',\n    '50711': 'VT',\n    '50703': 'AL',\n    '50705': 'HN',\n    '50719': 'TP',\n    '50707': 'HA',\n    '50713': 'PC',\n    '50701': 'QN',\n    '50717': 'AN',\n    '11309': '',\n    '11305': '',\n    '11315': '',\n    '11307': '',\n    '11319': '',\n    '11303': '',\n    '11301': '',\n    '11311': '',\n    '11313': '',\n    '20513': 'SP',\n    '20509': 'BH',\n    '20508': 'SM',\n    '20519': 'VB',\n    '20507': 'BX',\n    '20501': 'LC',\n    '20505': 'MK',\n    '20511': 'BT',\n    '20111': 'BM',\n    '20105': 'MV',\n    '20107': 'YM',\n    '20103': 'DV',\n    '20120': 'QG',\n    '20101': 'HG',\n    '20109': 'QB',\n    '20119': 'BQ',\n    '20115': 'VX',\n    '20117': 'XM',\n    '20113': 'HS',\n    '20303': 'BC',\n    '20321': 'TA',\n    '20311': 'TK',\n    '20307': 'TN',\n    '20301': 'CB',\n    '20318': 'PH',\n    '20304': 'BM',\n    '20317': 'QY',\n    '20315': 'HA',\n    '20309': 'TL',\n    '20319': 'HL',\n    '20313': 'NB',\n    '20305': 'HQ',\n    '20911': 'VQ',\n    '20905': 'VL',\n    '20917': 'CH',\n    '20909': 'BS',\n    '20915': 'LB',\n    '20901': 'LS',\n    '20921': 'HL',\n    '20903': 'TD',\n    '20907': 'BG',\n    '20919': 'DL',\n    '20913': 'CA',\n    '10133': '',\n    '10145': '',\n    '10125': '',\n    '10115': '',\n    '10135': '',\n    '10111': '',\n    '10131': '',\n    '10149': '',\n    '10151': '',\n    '10109': '',\n    '10123': '',\n    '10141': '',\n    '10108': '',\n    '10119': '',\n    '10139': '',\n    '10103': '',\n    '10113': '',\n    '10129': '',\n    '10153': '',\n    '10105': '',\n    '10121': '',\n    '10147': '',\n    '10101': '',\n    '10137': '',\n    '10117': '',\n    '10107': '',\n    '10114': '',\n    '10127': '',\n    '10143': '',\n    '10310': '',\n    '10323': '',\n    '10321': '',\n    '10307': '',\n    '10315': '',\n    '10325': '',\n    '10317': '',\n    '10305': '',\n    '10311': '',\n    '10313': '',\n    '10309': '',\n    '10303': '',\n    '10301': '',\n    '10314': '',\n    '10319': '',\n    '10407': '',\n    '10401': '',\n    '10403': '',\n    '10406': '',\n    '10402': '',\n    '10405': '',\n    '10404': '',\n    '10409': '',\n    '10601': '',\n    '10611': '',\n    '10612': '',\n    '10607': '',\n    '10608': '',\n    '10609': '',\n    '10605': '',\n    '10603': '',\n    '10723': '',\n    '10711': '',\n    '10705': '',\n    '10713': '',\n    '10721': '',\n    '10703': '',\n    '10717': '',\n    '10715': '',\n    '10719': '',\n    '10701': '',\n    '10709': '',\n    '10707': '',\n    '10907': '',\n    '10911': '',\n    '10904': '',\n    '10902': '',\n    '10913': '',\n    '10901': '',\n    '10905': '',\n    '10906': '',\n    '10903': '',\n    '10909': '',\n    '11107': '',\n    '11111': '',\n    '11103': '',\n    '11109': '',\n    '11105': '',\n    '11101': '',\n    '11505': 'HH',\n    '11515': 'TH',\n    '11501': 'TB',\n    '11513': 'KX',\n    '11509': 'NH',\n    '11503': 'QP',\n    '11511': 'VT',\n    '11507': 'TT',\n    '11701': 'NB',\n    '11705': 'NQ',\n    '11711': 'YM',\n    '11703': 'TD',\n    '11709': 'HL',\n    '11713': 'TK',\n    '11707': 'GV',\n    '20515': 'BY',\n    '20709': '',\n    '20704': '',\n    '20711': '',\n    '20712': '',\n    '20703': '',\n    '20705': '',\n    '20707': '',\n    '20701': '',\n    '21107': 'HY',\n    '21105': 'CH',\n    '21111': 'SD',\n    '21101': 'TQ',\n    '21109': 'YS',\n    '21103': 'NH',\n    '21309': 'MC',\n    '21315': 'VC',\n    '21301': 'YB',\n    '21313': '',\n    '21317': 'TT',\n    '21311': 'TY',\n    '21307': 'VC',\n    '21303': 'NL',\n    '21305': 'LC',\n    '21511': '',\n    '21513': '',\n    '21501': '',\n    '21509': '',\n    '21503': '',\n    '21515': '',\n    '21517': '',\n    '21507': '',\n    '21505': '',\n    '21703': '',\n    '21719': '',\n    '21707': '',\n    '21709': '',\n    '21718': '',\n    '21715': '',\n    '21701': '',\n    '21720': '',\n    '21712': '',\n    '21717': '',\n    '21713': '',\n    '21711': '',\n    '21705': '',\n    '22109': '',\n    '22119': '',\n    '22103': '',\n    '22113': '',\n    '22105': '',\n    '22111': '',\n    '22117': '',\n    '22115': '',\n    '22107': '',\n    '22101': '',\n    '22521': 'DT',\n    '22512': 'DH',\n    '22513': 'TY',\n    '22503': 'CP',\n    '22517': 'VP',\n    '22507': 'BL',\n    '22515': 'BC',\n    '22505': 'UB',\n    '22525': 'YH',\n    '22511': 'HH',\n    '22501': 'HL',\n    '22519': 'HB',\n    '22523': 'CT',\n    '22506': 'MC',\n    '30117': 'TU',\n    '30107': 'PT',\n    '30105': 'MT',\n    '30109': 'SH',\n    '30108': 'TD',\n    '30103': 'LC',\n    '30211': '',\n    '30201': '',\n    '30219': '',\n    '30203': '',\n    '30216': '',\n    '30217': '',\n    '30215': '',\n    '30204': '',\n    '30213': '',\n    '30315': 'SM',\n    '30309': 'BY',\n    '30307': 'TC',\n    '30303': 'QN',\n    '30319': 'MC',\n    '30305': 'ML',\n    '30301': 'SL',\n    '30317': 'YC',\n    '30313': 'MS',\n    '30316': 'SC',\n    '30311': 'PY',\n    '30507': 'KS',\n    '30510': 'CP',\n    '30501': 'HB',\n    '30515': 'LC',\n    '30513': 'TL',\n    '30509': 'LG',\n    '30503': 'DR',\n    '30517': 'LT',\n    '30511': 'KB',\n    '30519': 'YT',\n    '30505': 'MC',\n    '40143': 'HH',\n    '40147': 'TS',\n    '40107': 'ML',\n    '40137': 'TX',\n    '40111': 'QS',\n    '40145': 'DS',\n    '40123': 'TN',\n    '40101': 'TH',\n    '40125': 'NX',\n    '40149': 'QX',\n    '40135': 'YD',\n    '40151': 'NC',\n    '40131': 'HT',\n    '40129': 'VL',\n    '40153': 'TG',\n    '40121': 'NL',\n    '40119': 'TT',\n    '40141': 'TU',\n    '40139': 'HL',\n    '40103': 'BS',\n    '40133': 'NS',\n    '40115': 'CT',\n    '40127': 'NT',\n    '40105': 'SS',\n    '40109': 'QH',\n    '40117': 'LC',\n    '40113': 'BT',\n    '40703': 'TH',\n    '40707': 'QT',\n    '40713': 'LT',\n    '40709': 'BT',\n    '40705': 'MH',\n    '40701': 'DH',\n    '40711': 'QN',\n    '50109': '',\n    '50112': '',\n    '50103': '',\n    '50105': '',\n    '50111': '',\n    '50107': '',\n    '50101': '',\n    '50501': 'QN',\n    '50517': 'NH',\n    '50519': 'ML',\n    '50509': 'SN',\n    '50525': 'BT',\n    '50511': 'SY',\n    '50513': 'SH',\n    '50505': 'BS',\n    '50503': 'LS',\n    '50523': 'DP',\n    '50508': 'TT',\n    '50507': 'TB',\n    '50521': 'MD',\n    '50515': 'TN',\n    '50912': 'SH',\n    '50910': 'PH',\n    '50905': 'SC',\n    '50901': 'TH',\n    '50903': 'DX',\n    '50907': 'TA',\n    '50909': 'SO',\n    '50911': 'TH',\n    '50913': 'SH',\n    '51108': '',\n    '51103': 'VN',\n    '51107': 'DK',\n    '51113': 'KS',\n    '51105': 'NH',\n    '51102': 'CR',\n    '51101': 'NT',\n    '51111': 'KV',\n    '60114': '',\n    '60107': 'DT',\n    '60111': 'DH',\n    '60113': 'ST',\n    '60103': 'DG',\n    '60109': 'KP',\n    '60108': 'KR',\n    '60101': 'KT',\n    '60105': 'NH',\n    '60307': 'CH',\n    '60303': 'KB',\n    '60315': 'DC',\n    '60322': 'IP',\n    '60317': 'CG',\n    '60319': 'CS',\n    '60321': 'AP',\n    '60313': 'KC',\n    '60309': 'IG',\n    '60306': 'MY',\n    '60311': 'AK',\n    '60324': '',\n    '60301': 'PL',\n    '60305': 'DD',\n    '60323': 'KP',\n    '60312': 'DP',\n    '60513': 'BD',\n    '60507': 'KN',\n    '60525': 'KB',\n    '60517': 'MD',\n    '60531': 'LA',\n    '60523': 'KA',\n    '60503': 'EH',\n    '60511': 'BD',\n    '60509': 'KK',\n    '60515': 'EK',\n    '60501': 'BM',\n    '60519': 'KP',\n    '60524': '',\n    '60505': 'ES',\n    '60629': '',\n    '60621': '',\n    '60633': '',\n    '60632': '',\n    '60627': '',\n    '60611': '',\n    '60634': '',\n    '60635': '',\n    '60709': '',\n    '60713': '',\n    '60715': '',\n    '60707': '',\n    '60719': '',\n    '60701': '',\n    '60711': '',\n    '60705': '',\n    '60717': '',\n    '60723': '',\n    '60703': '',\n    '60721': '',\n    '70140': '',\n    '70119': '',\n    '70139': '',\n    '70121': '',\n    '70101': '',\n    '70137': '',\n    '70123': '',\n    '70135': '',\n    '70111': '',\n    '70131': '',\n    '70105': '',\n    '70107': '',\n    '70109': '',\n    '70129': '',\n    '70128': '',\n    '70103': '',\n    '70113': '',\n    '70115': '',\n    '70133': '',\n    '70117': '',\n    '70125': '',\n    '70141': '',\n    '70127': '',\n    '70143': '',\n    '70506': '',\n    '70501': '',\n    '70504': '',\n    '70505': '',\n    '70503': '',\n    '70507': '',\n    '70709': '',\n    '70708': '',\n    '70702': '',\n    '70705': '',\n    '70703': '',\n    '70706': '',\n    '70701': '',\n    '70707': '',\n    '70917': '',\n    '70905': '',\n    '70903': '',\n    '70913': '',\n    '70901': '',\n    '70911': '',\n    '70907': '',\n    '70909': '',\n    '70915': '',\n    '71103': '',\n    '71108': '',\n    '71102': '',\n    '71105': '',\n    '71104': '',\n    '71101': '',\n    '71107': '',\n    '71309': '',\n    '71310': '',\n    '71311': '',\n    '71313': '',\n    '71305': '',\n    '71317': '',\n    '71315': '',\n    '71307': '',\n    '71301': '',\n    '71312': '',\n    '71303': '',\n    '71511': '',\n    '71509': '',\n    '71507': '',\n    '71505': '',\n    '71501': '',\n    '71513': '',\n    '71515': '',\n    '71503': '',\n    '71502': '',\n    '71517': '',\n    '71711': '',\n    '71705': '',\n    '71709': '',\n    '71714': '',\n    '71703': '',\n    '71701': '',\n    '71712': '',\n    '71707': '',\n    '80115': '',\n    '80101': '',\n    '80127': '',\n    '80117': '',\n    '80109': '',\n    '80107': '',\n    '80111': '',\n    '80123': '',\n    '80105': '',\n    '80113': '',\n    '80125': '',\n    '80103': '',\n    '80121': '',\n    '80119': '',\n    '80313': '',\n    '80321': '',\n    '80307': '',\n    '80317': '',\n    '80301': '',\n    '80305': '',\n    '80319': '',\n    '80315': '',\n    '80303': '',\n    '80309': '',\n    '80311': '',\n    '80515': '',\n    '80517': '',\n    '80503': '',\n    '80501': '',\n    '80511': '',\n    '80519': '',\n    '80521': '',\n    '80509': '',\n    '80513': '',\n    '80505': '',\n    '80507': '',\n    '80717': '',\n    '80701': '',\n    '80707': '',\n    '80715': '',\n    '80703': '',\n    '80711': '',\n    '80705': '',\n    '80709': '',\n    '80713': '',\n    '80718': '',\n    '80909': '',\n    '80911': '',\n    '80913': '',\n    '80903': '',\n    '80908': '',\n    '80901': '',\n    '80905': '',\n    '80907': '',\n    '81014': 'DT',\n    '81105': '',\n    '81115': '',\n    '81103': '',\n    '81113': '',\n    '81101': '',\n    '81109': '',\n    '81111': '',\n    '81107': '',\n    '81313': '',\n    '81311': '',\n    '81303': '',\n    '81321': '',\n    '81304': '',\n    '81309': '',\n    '81323': '',\n    '81305': '',\n    '81319': '',\n    '81301': '',\n    '81317': '',\n    '81307': '',\n    '81315': '',\n    '81325': '',\n    '81509': '',\n    '81515': '',\n    '81511': '',\n    '81507': '',\n    '81503': '',\n    '81501': '',\n    '81513': '',\n    '81505': '',\n    '81603': '',\n    '81611': '',\n    '81601': '',\n    '81602': '',\n    '81609': '',\n    '81607': '',\n    '81605': '',\n    '81713': '',\n    '81703': '',\n    '81715': '',\n    '81705': '',\n    '81711': '',\n    '81709': '',\n    '81701': '',\n    '81707': '',\n    '81907': '',\n    '81911': '',\n    '81903': '',\n    '81901': '',\n    '81909': '',\n    '81905': '',\n    '81912': '',\n    '81906': '',\n    '81913': '',\n    '82109': '',\n    '82103': '',\n    '82106': '',\n    '82105': '',\n    '82104': '',\n    '82107': '',\n    '82101': '',\n    '82309': '',\n    '82314': '',\n    '82305': '',\n    '82310': '',\n    '82313': '',\n    '82311': '',\n    '82301': '',\n    '82307': '',\n    '82303': ''\n  }\n};\n","import React from 'react';\nimport {\n  compose,\n  withStateHandlers,\n  getContext,\n  withProps\n} from 'recompose';\nimport ProvinceTable from '../components/province-table';\nimport {\n  ADMIN_MAP\n} from '../constants';\n\n\nconst ProvinceTableContainer = compose(\n  getContext({ language: React.PropTypes.string }),\n  withStateHandlers(\n    { sortField: 'name', sortOrder: 'asc' },\n    {\n      sortHandler: ({ sortField, sortOrder }) => (field) => (\n        sortField === field ?\n          { sortOrder: sortOrder === 'asc' ? 'desc' : 'asc' } :\n          { sortField: field, sortOrder: 'asc' }\n      )\n    }\n  ),\n  withProps(({ provinces, provincesRoadCount }) => ({\n    provinces: provinces.map((province) => {\n      const { id, name } = ADMIN_MAP.province[province.id];\n      const { count, osmCount } = provincesRoadCount[id];\n\n      return {\n        name,\n        id,\n        routeId: province.id,\n        osmCount,\n        count,\n        percentageComplete: count > 0 ? osmCount / count * 100 : 0\n      };\n    })\n  }))\n)(ProvinceTable);\n\n\nexport default ProvinceTableContainer;\n","import React from 'react';\nimport {\n  withRouter\n} from 'react-router';\nimport {\n  compose,\n  getContext,\n  withProps,\n  withHandlers,\n  lifecycle\n} from 'recompose';\nimport {\n  at\n} from 'lodash';\nimport {\n  local\n} from 'redux-fractal';\nimport {\n  createStore\n} from 'redux';\nimport {\n  connect\n} from 'react-redux';\nimport RoadTable from '../components/road-table';\nimport {\n  getRoadPageKey,\n  fetchRoadsEpic\n} from '../redux/modules/roads';\nimport {\n  getRoadCountKey,\n  fetchProvincesRoadCountEpic,\n  fetchDistrictRoadCountEpic\n} from '../redux/modules/roadCount';\nimport {\n  ADMIN_MAP\n} from '../constants';\n\n\n\nconst reducer = (\n  state = {\n    sortOrder: 'asc',\n    sortField: 'id',\n    page: 1\n  },\n  action\n) => {\n  if (action.type === 'SORT_COLUMN') {\n    return Object.assign({}, state, {\n      sortOrder: action.sortOrder,\n      sortField: action.sortField\n    });\n  } else if (action.type === 'SET_PAGE') {\n    return Object.assign({}, state, {\n      page: action.page\n    });\n  }\n\n  return state;\n};\n\n\nconst fetchData = ({\n  roadsPage, roadsPageStatus, roadPageCount, roadCountStatus,\n  province, district, page, sortField, sortOrder, fetchRoads, fetchRoadCount\n}) => {\n  if (!roadsPage && roadsPageStatus !== 'pending' && roadsPageStatus !== 'error') {\n    fetchRoads(province, district, page, sortField, sortOrder);\n  }\n\n  if (!roadPageCount && roadCountStatus !== 'pending' && roadCountStatus !== 'error') {\n    fetchRoadCount(province, district);\n  }\n};\n\n\nconst RoadTableContainer = compose(\n  getContext({ language: React.PropTypes.string }),\n  withRouter,\n  local({\n    key: ({ router: { params: { aaId = '', aaIdSub = '' } } }) => `road-table-${aaId}-${aaIdSub}`,\n    createStore: () => createStore(reducer),\n    mapDispatchToProps: (dispatch, { sortOrder }) => ({\n      sortColumn: (sortField, sortOrder) => dispatch({ type: 'SORT_COLUMN', sortField, sortOrder }),\n      setPage: (page) => dispatch({ type: 'SET_PAGE', page })\n    }),\n    filterGlobalActions: ({ type }) => false\n  }),\n  withProps(({ router: { params: { aaId, aaIdSub } } }) => ({\n    province: ADMIN_MAP.province[aaId] && ADMIN_MAP.province[aaId].id,\n    district: ADMIN_MAP.district[aaIdSub]\n  })),\n  connect(\n    (state, { province, district, page, sortField, sortOrder }) => {\n      const roadPageKey = getRoadPageKey(province, district, page, sortField, sortOrder);\n      const roadsPage = state.roads.roadsByPage[roadPageKey] && state.roads.roadsByPage[roadPageKey].roads;\n      const roadsPageStatus = state.roads.roadsByPage[roadPageKey] && state.roads.roadsByPage[roadPageKey].status;\n\n      let roadCount;\n      let roadOsmCount;\n      let roadCountStatus;\n\n      if (district) {\n        const roadCountKey = getRoadCountKey(province, district);\n\n        roadCount = at(state, [`roadCount.districts.${roadCountKey}.count`])[0];\n        roadOsmCount = at(state, [`roadCount.districts.${roadCountKey}.osmCount`])[0];\n        roadCountStatus = state.roadCount.districts[roadCountKey] && state.roadCount.districts[roadCountKey].status;\n      } else {\n        roadCount = at(state, `roadCount.provinces.provinceCount.${province}.count`)[0];\n        roadOsmCount = at(state, `roadCount.provinces.provinceCount.${province}.osmCount`)[0];\n        roadCountStatus = state.roadCount.provinces.status;\n      }\n\n      return {\n        roadsPage,\n        roadsPageStatus,\n        roadCount,\n        roadPageCount: Math.ceil(roadCount / 20),\n        roadOsmCount,\n        roadCountStatus\n      };\n    },\n    (dispatch) => ({\n      fetchRoads: (province, district, page, sortField, sortOrder) => dispatch(fetchRoadsEpic(province, district, page, sortField, sortOrder)),\n      fetchRoadCount: (province, district) => (\n        district ?\n          dispatch(fetchDistrictRoadCountEpic(province, district)) :\n          dispatch(fetchProvincesRoadCountEpic())\n      )\n    })\n  ),\n  withHandlers({\n    sortColumnAction: ({ sortField, sortOrder, sortColumn }) => (fieldId) => {\n      if (sortField === fieldId) {\n        sortColumn(fieldId, sortOrder === 'asc' ? 'desc' : 'asc');\n      } else {\n        sortColumn(fieldId, 'asc');\n      }\n    }\n  }),\n  lifecycle({\n    componentWillMount: function () {\n      fetchData(this.props);\n    },\n    componentWillReceiveProps: function (nextProps) {\n      fetchData(nextProps);\n    }\n  })\n)(RoadTable);\n\n\nexport default RoadTableContainer;\n","import React from 'react';\nimport {\n  compose,\n  getContext,\n  branch,\n  renderComponent,\n  withProps,\n  withHandlers\n} from 'recompose';\nimport {\n  withRouter\n} from 'react-router';\nimport { connect } from 'react-redux';\nimport { local } from 'redux-fractal';\nimport { createStore } from 'redux';\nimport TableRow, {\n  TableErrorRow\n} from '../components/road-table-row';\nimport {\n  EDIT_ROAD,\n  EDIT_ROAD_SUCCESS,\n  EDIT_ROAD_ERROR,\n  DELETE_ROAD,\n  DELETE_ROAD_SUCCESS,\n  DELETE_ROAD_ERROR,\n  roadIdIsValid,\n  editRoadEpic,\n  deleteRoadEpic\n} from '../redux/modules/roads';\nimport {\n  ADMIN_MAP\n} from '../constants';\n\n\nconst reducerFactory = ({ vpromm }) => (\n  state = {\n    viewState: 'read',\n    newRoadId: '',\n    shouldShowProperties: false,\n    formIsInvalid: false,\n    status: 'complete',\n    error: false,\n    vpromm\n  },\n  action\n) => {\n  if (action.type === 'SHOW_READ_VIEW') {\n    return Object.assign({}, state, {\n      viewState: 'read',\n      newRoadId: '',\n      formIsInvalid: false,\n      status: 'complete',\n      error: false\n    });\n  } else if (action.type === 'SHOW_EDIT_VIEW') {\n    return Object.assign({}, state, {\n      viewState: 'edit'\n    });\n  } else if (action.type === 'SHOW_DELETE_VIEW') {\n    return Object.assign({}, state, {\n      viewState: 'delete'\n    });\n  } else if (action.type === 'SHOW_PROPERTIES') {\n    return Object.assign({}, state, {\n      shouldShowProperties: true\n    });\n  } else if (action.type === 'HIDE_PROPERTIES') {\n    return Object.assign({}, state, {\n      shouldShowProperties: false\n    });\n  } else if (action.type === 'UPDATE_NEW_ROAD_ID') {\n    return Object.assign({}, state, {\n      newRoadId: action.id,\n      formIsInvalid: false,\n      status: 'complete',\n      error: false\n    });\n  } else if (action.type === 'FORM_IS_INVALID') {\n    return Object.assign({}, state, {\n      formIsInvalid: true\n    });\n  } else if (action.type === EDIT_ROAD && action.id === state.vpromm) {\n    return Object.assign({}, state, {\n      status: 'pending',\n      formIsInvalid: false\n    });\n  } else if (action.type === EDIT_ROAD_SUCCESS && action.id === state.vpromm) {\n    return Object.assign({}, state, {\n      status: 'complete',\n      newRoadId: ''\n    });\n  } else if (action.type === EDIT_ROAD_ERROR && action.id === state.vpromm) {\n    return Object.assign({}, state, {\n      status: 'error',\n      error: action.error\n    });\n  } else if (action.type === DELETE_ROAD && action.id === state.vpromm) {\n    return Object.assign({}, state, {\n      status: 'pending',\n      formIsInvalid: false\n    });\n  } else if (action.type === DELETE_ROAD_SUCCESS && action.id === state.vpromm) {\n    return Object.assign({}, state, {\n      status: 'complete'\n    });\n  } else if (action.type === DELETE_ROAD_ERROR && action.id === state.vpromm) {\n    return Object.assign({}, state, {\n      status: 'error',\n      error: action.error\n    });\n  }\n\n  return state;\n};\n\n\nconst TableRowContainer = compose(\n  getContext({ language: React.PropTypes.string }),\n  withRouter,\n  local({\n    key: ({ vpromm }) => `${vpromm}-table-row`,\n    createStore: (props) => createStore(reducerFactory(props)),\n    mapDispatchToProps: (dispatch, { vpromm }) => ({\n      showProperties: () => dispatch({ type: 'SHOW_PROPERTIES' }),\n      hideProperties: () => dispatch({ type: 'HIDE_PROPERTIES' }),\n      showReadView: (e) => {\n        e.preventDefault();\n        dispatch({ type: 'SHOW_READ_VIEW' });\n      },\n      showEditView: (e) => {\n        e.preventDefault();\n        dispatch({ type: 'SHOW_EDIT_VIEW' });\n      },\n      showDeleteView: (e) => {\n        e.preventDefault();\n        dispatch({ type: 'SHOW_DELETE_VIEW' });\n      },\n      updateNewRoadId: ({ target: { value: id } }) => dispatch({ type: 'UPDATE_NEW_ROAD_ID', id }),\n      invalidateForm: () => dispatch({ type: 'FORM_IS_INVALID' }),\n      confirmDelete: () => dispatch(deleteRoadEpic(vpromm)),\n      submitEdit: (newRoadId) => dispatch(editRoadEpic(vpromm, newRoadId))\n    }),\n    filterGlobalActions: ({ type }) =>\n      [EDIT_ROAD, EDIT_ROAD_SUCCESS, EDIT_ROAD_ERROR, DELETE_ROAD, DELETE_ROAD_SUCCESS, DELETE_ROAD_ERROR].indexOf(type) > -1\n  }),\n  withProps(({ router: { params: { aaId, aaIdSub } } }) => ({\n    province: ADMIN_MAP.province[aaId] && ADMIN_MAP.province[aaId].id,\n    district: ADMIN_MAP.district[aaIdSub]\n  })),\n  connect(\n    (state, { vpromm }) => ({\n      road: state.roads.roadsById[vpromm]\n    })\n  ),\n  /**\n   * If road does not exist in the redux store, something went wrong in the fetching/deserialization\n   * of the roads redux subtree.\n   * see redux/modules/roads.js#fetchRoadsEpic\n   */\n  branch(\n    ({ road }) => !road,\n    renderComponent(TableErrorRow)\n  ),\n  withProps(({ road }) => ({\n    properties: road.properties,\n    hasOSMData: road.hasOSMData\n  })),\n  withHandlers({\n    toggleProperties: ({ shouldShowProperties, showProperties, hideProperties }) => () =>\n      shouldShowProperties ? hideProperties() : showProperties(),\n    confirmEdit: ({ newRoadId, province, district, submitEdit, invalidateForm }) => (e) => {\n      e.preventDefault();\n      // TODO - expose validation error messages\n      if (!roadIdIsValid(newRoadId, province, district)) {\n        return invalidateForm();\n      }\n\n      submitEdit(newRoadId);\n    }\n  })\n)(TableRow);\n\nexport default TableRowContainer;\n","'use strict';\nimport 'babel-polyfill';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router, Route, Redirect, IndexRoute, hashHistory } from 'react-router';\nimport store from './redux/store';\n\nimport UhOh from './views/uhoh';\nimport App from './views/app';\nimport Home from './views/home';\nimport Editor from './views/editor';\nimport Tasks from './views/tasks';\nimport Explore from './views/explore';\nimport Assets from './views/assets';\nimport AssetsIndex from './views/assets-index';\nimport AssetsAA from './views/assets-admin-area';\nimport AssetsDetail from './views/assets-detail';\nimport Upload from './views/upload';\nimport Faq from './views/faq';\nimport Demo from './views/demo';\n\n\nconst validateLanguage = ({ params: { lang } }, replace) => {\n  if (lang !== 'en' && lang !== 'vi') {\n    replace('/en/404');\n  }\n};\n\nrender((\n  <Provider store={store}>\n    <Router history={hashHistory}>\n      <Redirect from='/' to='/en' />\n      <Route path='/:lang' component={App} onEnter={validateLanguage}>\n        <Route path='tasks' component={Tasks} pageClass='tasks' />\n        <Route path='upload' component={Upload} pageClass='upload' />\n        <Route path='editor' component={Editor} pageClass='editor' />\n        <Route path='editor/*' component={Editor} pageClass='editor' />\n        <Route path='explore' component={Explore} pageClass='explore' />\n        <Route path='faq' component={Faq} pageClass='faq' />\n        <Route path='demo' component={Demo} pageClass='demo' />\n        <Route path='assets' component={Assets}>\n          <IndexRoute component={AssetsIndex} pageClass='assets' />\n          <Route path='road/:vpromm' component={AssetsDetail} pageClass='assets-inner-canvas' />\n          <Route path=':aaId' component={AssetsAA} pageClass='assets-inner-canvas' />\n          <Route path=':aaId/:aaIdSub' component={AssetsAA} pageClass='assets-inner-canvas' />\n        </Route>\n        <IndexRoute component={Home} pageClass='page--landing' />\n        <Route path='*' component={UhOh}/>\n      </Route>\n    </Router>\n  </Provider>\n), document.querySelector('.site-canvas'));\n","import {\n  RECEIVE_ADMIN_BBOX\n} from '../../actions/action-types';\nimport {\n  bboxToLngLatZoom\n} from '../../utils/zoom';\nimport {\n  FETCH_ROAD_BBOX_SUCCESS,\n  FETCH_ROAD_PROPERTY_SUCCESS\n} from './roads';\n\n\n/**\n * constants\n */\nexport const SET_MAP_POSITION = 'SET_MAP_POSITION';\n\n\n/**\n * actions\n */\nexport const setMapPosition = (lng, lat, zoom, waySlug) =>\n  ({ type: SET_MAP_POSITION, lng, lat, zoom, waySlug });\n\n\n/**\n * reducer\n */\nexport default (\n  state = {\n    waySlug: null,\n    lat: 20.029,\n    lng: 105.73,\n    zoom: 6\n  },\n  action\n) => {\n  if (action.type === SET_MAP_POSITION) {\n    return Object.assign({}, state, {\n      lat: action.lat,\n      lng: action.lng,\n      zoom: action.zoom,\n      way: action.waySlug\n    });\n  } else if (action.type === RECEIVE_ADMIN_BBOX) {\n    const { lng, lat, zoom } = bboxToLngLatZoom(action.json.bbox);\n\n    return Object.assign({}, state, {\n      lng,\n      lat,\n      zoom\n    });\n  } else if (action.type === FETCH_ROAD_BBOX_SUCCESS) {\n    const { lng, lat, zoom } = bboxToLngLatZoom(action.bbox);\n\n    return Object.assign({}, state, {\n      lng,\n      lat,\n      zoom\n    });\n  } else if (action.type === FETCH_ROAD_PROPERTY_SUCCESS) {\n    const waySlug = 'w' + action.properties.way_id;\n\n    return Object.assign({}, state, {waySlug});\n  }\n\n  return state;\n};\n","import XmlReader from 'xml-reader';\nimport {\n  fetchWayTaskEpic\n} from './tasks';\nimport config from '../../config';\n\n/**\n * Utils\n */\nconst objectToBlob = (obj) =>\n  new Blob([JSON.stringify(obj, null, 2)], {type: 'application/json'});\n\nconst createChangesetRequest = (taskId, payload) => (\n  fetch(`${config.api}/changeset/create`, {\n    method: 'PUT',\n    body: objectToBlob({ uid: 555555, user: 'Openroads Tasks' })\n  })\n    .then(response => {\n      if (response.status >= 400) {\n        throw new Error(response.textStatus);\n      }\n      return response.text();\n    })\n);\n\nconst uploadChangesetRequest = (changesetId, taskId, payload) => (\n  fetch(`${config.api}/changeset/${changesetId}/upload`, {\n    method: 'POST',\n    body: objectToBlob({ osmChange: payload })\n  })\n    .then(response => {\n      if (response.status >= 400) {\n        throw new Error(response.textStatus);\n      }\n    })\n);\n\n/**\n * constants\n */\nexport const REQUEST_OSM_CHANGE = 'REQUEST_OSM_CHANGE';\nexport const REQUEST_OSM_CHANGE_SUCCESS = 'REQUEST_OSM_CHANGE_SUCCESS';\nexport const REQUEST_OSM_CHANGE_ERROR = 'REQUEST_OSM_CHANGE_ERROR';\n\n\n/**\n * action creators\n */\nexport const requestOsmChange = (taskId) => ({ type: REQUEST_OSM_CHANGE, taskId });\nexport const requestOsmChangeSuccess = (taskId) => ({ type: REQUEST_OSM_CHANGE_SUCCESS, taskId });\nexport const requestOsmChangeError = (taskId) => ({ type: REQUEST_OSM_CHANGE_ERROR, taskId });\n\n\nexport const queryOsmEpic = (taskId, payload) => (dispatch) => {\n  dispatch(requestOsmChange(taskId));\n\n  createChangesetRequest(taskId, payload)\n    .then(changesetId => uploadChangesetRequest(changesetId, taskId, payload))\n    .then(() => {\n      dispatch(fetchWayTaskEpic(taskId));\n      dispatch(requestOsmChangeSuccess(taskId));\n    })\n    .catch(e => {\n      console.error('Error querying Osm', e);\n      dispatch(requestOsmChangeError(taskId));\n    });\n};\n\n// Since the geojson that powers the tasks endpoint doesn't include node IDs,\n// we must query the XML endpoint to get these IDs, then format them into\n// a `delete` action.\nexport const deleteEntireWaysEpic = (taskId, wayIds) => (dispatch) => {\n  dispatch(requestOsmChange(taskId));\n\n  return fetch(`${config.api}/api/0.6/ways?nodes=true&excludeDoubleLinkedNodes=true&ways=${wayIds.join(',')}`)\n    .then(response => {\n      if (response.status >= 400) {\n        throw new Error(response.statusText);\n      }\n      return response.text();\n    })\n    .then((xmlResponse) => {\n      // TODO - wrap XmlReader in promise to make Epic promises more composable\n      const reader = XmlReader.create({ stream: true });\n      const nodeIds = [];\n\n      reader.on('tag:node', node => {\n        if (node.attributes.id) {\n          nodeIds.push(node.attributes.id);\n        }\n      });\n      reader.on('done', () => {\n        const payload = {\n          delete: {\n            node: nodeIds.map(id => ({ id })),\n            way: wayIds.map(id => ({ id }))\n          }\n        };\n        createChangesetRequest(taskId, payload)\n          .then(changesetId => uploadChangesetRequest(changesetId, taskId, payload))\n          .then(() => {\n            dispatch(fetchWayTaskEpic(taskId));\n            dispatch(requestOsmChangeSuccess(taskId));\n          })\n          .catch(e => {\n            console.error('Error Deleting Way', e);\n            dispatch(requestOsmChangeError(taskId));\n          });\n      });\n      reader.parse(xmlResponse);\n    });\n};\n\n\n\n/**\n * reducer\n */\nexport default (\n  state = {\n    status: 'complete'\n  },\n  action\n) => {\n  switch (action.type) {\n    case REQUEST_OSM_CHANGE:\n      return Object.assign({}, state, {\n        status: 'pending'\n      });\n    case REQUEST_OSM_CHANGE_SUCCESS:\n      return Object.assign({}, state, {\n        status: 'complete'\n      });\n    case REQUEST_OSM_CHANGE_ERROR:\n      return Object.assign({}, state, {\n        status: 'error'\n      });\n  }\n\n  return state;\n};\n","import {\n  format\n} from 'url';\nimport config from '../../config';\n\n\n/**\n * utils\n */\nexport const getRoadCountKey = (province, district) =>\n  district ? `${province}-${district}` : province;\n\n/**\n * constants\n */\nexport const FETCH_PROVINCES_ROAD_COUNT = 'FETCH_PROVINCES_ROAD_COUNT';\nexport const FETCH_PROVINCES_ROAD_COUNT_SUCCESS = 'FETCH_PROVINCES_ROAD_COUNT_SUCCESS';\nexport const FETCH_PROVINCES_ROAD_COUNT_ERROR = 'FETCH_PROVINCES_ROAD_COUNT_ERROR';\nexport const FETCH_DISTRICT_ROAD_COUNT = 'FETCH_DISTRICT_ROAD_COUNT';\nexport const FETCH_DISTRICT_ROAD_COUNT_SUCCESS = 'FETCH_DISTRICT_ROAD_COUNT_SUCCESS';\nexport const FETCH_DISTRICT_ROAD_COUNT_ERROR = 'FETCH_DISTRICT_ROAD_COUNT_ERROR';\nexport const CLEAR_ROAD_COUNT = 'CLEAR_ROAD_COUNT';\n\n/**\n * actions\n */\nexport const fetchProvincesRoadCount = () => ({ type: FETCH_PROVINCES_ROAD_COUNT });\nexport const fetchProvincesRoadCountSuccess = (provinces) =>\n  ({ type: FETCH_PROVINCES_ROAD_COUNT_SUCCESS, provinces });\nexport const fetchProvincesRoadCountError = (error) =>\n  ({ type: FETCH_PROVINCES_ROAD_COUNT_ERROR, error });\nexport const fetchDistrictRoadCount = (province, district) => ({ type: FETCH_DISTRICT_ROAD_COUNT, province, district });\nexport const fetchDistrictRoadCountSuccess = (province, district, count, osmCount) =>\n  ({ type: FETCH_DISTRICT_ROAD_COUNT_SUCCESS, province, district, count, osmCount });\nexport const fetchDistrictRoadCountError = (province, district, error) =>\n  ({ type: FETCH_DISTRICT_ROAD_COUNT_ERROR, province, district, error });\nexport const clearRoadCount = () => ({ type: CLEAR_ROAD_COUNT });\n\n\nexport const fetchProvincesRoadCountEpic = () => (dispatch) => {\n  dispatch(fetchProvincesRoadCount());\n\n  return fetch(`${config.api}/admin/roads/total`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then((provinces) => {\n      dispatch(fetchProvincesRoadCountSuccess(provinces));\n    })\n    .catch((err) => dispatch(fetchProvincesRoadCountError(err)));\n};\n\n\nexport const fetchDistrictRoadCountEpic = (province, district) => (dispatch) => {\n  dispatch(fetchDistrictRoadCount(province, district));\n\n  return fetch(\n    format({ pathname: `${config.api}/properties/roads/count`, query: { province, district } })\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(({ count, osmCount }) => {\n      dispatch(fetchDistrictRoadCountSuccess(province, district, count, osmCount));\n    })\n    .catch((err) => dispatch(fetchDistrictRoadCountError(province, district, err)));\n};\n\n\n/**\n * reducer\n */\nexport default (\n  state = {\n    provinces: {},\n    districts: {}\n  },\n  action\n) => {\n  if (action.type === FETCH_PROVINCES_ROAD_COUNT) {\n    return Object.assign({}, state, {\n      provinces: Object.assign({}, state.provinces, {\n        status: 'pending'\n      })\n    });\n  } else if (action.type === FETCH_PROVINCES_ROAD_COUNT_SUCCESS) {\n    return Object.assign({}, state, {\n      provinces: Object.assign({}, state.provinces, {\n        status: 'complete',\n        provinceCount: action.provinces\n      })\n    });\n  } else if (action.type === FETCH_PROVINCES_ROAD_COUNT_ERROR) {\n    return Object.assign({}, state, {\n      provinces: Object.assign({}, state.provinces, {\n        status: 'error'\n      })\n    });\n  } else if (action.type === FETCH_DISTRICT_ROAD_COUNT) {\n    const { province, district } = action;\n    const roadCountKey = getRoadCountKey(province, district);\n\n    return Object.assign({}, state, {\n      districts: Object.assign({}, state.districts, {\n        [roadCountKey]: Object.assign({}, state.districts[roadCountKey] || {}, {\n          status: 'pending'\n        })\n      })\n    });\n  } else if (action.type === FETCH_DISTRICT_ROAD_COUNT_SUCCESS) {\n    const { province, district, count, osmCount } = action;\n    const roadCountKey = getRoadCountKey(province, district);\n\n    return Object.assign({}, state, {\n      districts: Object.assign({}, state.districts, {\n        [roadCountKey]: {\n          status: 'complete',\n          count,\n          osmCount\n        }\n      })\n    });\n  } else if (action.type === FETCH_DISTRICT_ROAD_COUNT_ERROR) {\n    const { province, district } = action;\n    const roadCountKey = getRoadCountKey(province, district);\n\n    return Object.assign({}, state, {\n      districts: Object.assign({}, state.districts, {\n        [roadCountKey]: {\n          status: 'error',\n          count: undefined,\n          osmCount: undefined\n        }\n      })\n    });\n  } else if (action.type === CLEAR_ROAD_COUNT) {\n    return {\n      provinces: {},\n      districts: {}\n    };\n  }\n\n  return state;\n};\n","import {\n  format\n} from 'url';\nimport {\n  reduce,\n  map,\n  property,\n  omit,\n  merge\n} from 'lodash';\nimport {\n  clearRoadCount\n} from './roadCount';\nimport config from '../../config';\n\n\n/**\n * Utils\n */\nexport const roadIdIsValid = (id, province, district) => {\n  return /^\\d{3}([A-ZĐ]{2}|00)\\d{5}$/.test(id) &&\n    (!province || id.substring(0, 2) === province) &&\n    (!district || id.substring(3, 5) === district);\n};\nexport const getRoadPageKey = (province = '', district = '', page, sortField, sortOrder) =>\n  `${province}-${district}-${page}-${sortField}-${sortOrder}`;\n\n\n/**\n * constants\n */\nexport const FETCH_ROADS = 'FETCH_ROADS';\nexport const FETCH_ROADS_SUCCESS = 'FETCH_ROADS_SUCCESS';\nexport const FETCH_ROADS_ERROR = 'FETCH_ROADS_ERROR';\nexport const CLEAR_ROADS_PAGES = 'CLEAR_ROADS_PAGES';\nexport const FETCH_ROAD_GEOMETRY = 'FETCH_ROAD_GEOMETRY';\nexport const FETCH_ROAD_GEOMETRY_SUCCESS = 'FETCH_ROAD_GEOMETRY_SUCCESS';\nexport const FETCH_ROAD_GEOMETRY_ERROR = 'FETCH_ROAD_GEOMETRY_ERROR';\nexport const CREATE_ROAD = 'CREATE_ROAD';\nexport const CREATE_ROAD_SUCCESS = 'CREATE_ROAD_SUCCESS';\nexport const CREATE_ROAD_ERROR = 'CREATE_ROAD_ERROR';\nexport const EDIT_ROAD = 'EDIT_ROAD';\nexport const EDIT_ROAD_SUCCESS = 'EDIT_ROAD_SUCCESS';\nexport const EDIT_ROAD_ERROR = 'EDIT_ROAD_ERROR';\nexport const DELETE_ROAD = 'DELETE_ROAD';\nexport const DELETE_ROAD_SUCCESS = 'DELETE_ROAD_SUCCESS';\nexport const DELETE_ROAD_ERROR = 'DELETE_ROAD_ERROR';\nexport const CREATE_ROAD_PROPERTY = 'CREATE_ROAD_PROPERTY';\nexport const CREATE_ROAD_PROPERTY_SUCCESS = 'CREATE_ROAD_PROPERTY_SUCCESS';\nexport const CREATE_ROAD_PROPERTY_ERROR = 'CREATE_ROAD_PROPERTY_ERROR';\nexport const EDIT_ROAD_PROPERTY = 'EDIT_ROAD_PROPERTY';\nexport const EDIT_ROAD_PROPERTY_SUCCESS = 'EDIT_ROAD_PROPERTY_SUCCESS';\nexport const EDIT_ROAD_PROPERTY_ERROR = 'EDIT_ROAD_PROPERTY_ERROR';\nexport const EDIT_ROAD_STATUS = 'EDIT_ROAD_STATUS';\nexport const EDIT_ROAD_STATUS_SUCCESS = 'EDIT_ROAD_STATUS_SUCCESS';\nexport const EDIT_ROAD_STATUS_ERROR = 'EDIT_ROAD_STATUS_ERROR';\nexport const DELETE_ROAD_PROPERTY = 'DELETE_ROAD_PROPERTY';\nexport const DELETE_ROAD_PROPERTY_SUCCESS = 'DELETE_ROAD_PROPERTY_SUCCESS';\nexport const DELETE_ROAD_PROPERTY_ERROR = 'DELETE_ROAD_PROPERTY_ERROR';\nexport const OP_ON_ROAD_PROPERTY = 'OP_ON_ROAD_PROPERTY';\nexport const OP_ON_ROAD_PROPERTY_SUCCESS = 'OP_ON_ROAD_PROPERTY_SUCCESS';\nexport const OP_ON_ROAD_PROPERTY_ERROR = 'OP_ON_ROAD_PROPERTY_ERROR';\nexport const FETCH_ROAD_BBOX = 'FETCH_ROAD_BBOX';\nexport const FETCH_ROAD_BBOX_SUCCESS = 'FETCH_ROAD_BBOX_SUCCESS';\nexport const FETCH_ROAD_BBOX_ERROR = 'FETCH_ROAD_BBOX_ERROR';\nexport const FETCH_ROAD_PROPERTY = 'FETCH_ROAD_PROPERTY';\nexport const FETCH_ROAD_PROPERTY_ERROR = 'FETCH_ROAD_PROPERTY';\nexport const FETCH_ROAD_PROPERTY_SUCCESS = 'FETCH_ROAD_PROPERTY_SUCCESS';\nexport const EDIT_ROAD_ID = 'EDIT_ROAD_ID';\nexport const EDIT_ROAD_ID_SUCCESS = 'EDIT_ROAD_ID_SUCCESS';\nexport const EDIT_ROAD_ID_ERROR = 'EDIT_ROAD_ID_ERROR';\n\n/**\n * actions\n */\nexport const fetchRoads = (province, district, page, sortField, sortOrder) =>\n  ({ type: FETCH_ROADS, province, district, page, sortField, sortOrder });\nexport const fetchRoadsSuccess = (roadsById, roadsByPage, province, district, page, sortField, sortOrder) =>\n  ({ type: FETCH_ROADS_SUCCESS, roadsById, roadsByPage, province, district, page, sortField, sortOrder });\nexport const fetchRoadsError = (error, province, district, page, sortField, sortOrder) =>\n  ({ type: FETCH_ROADS_ERROR, error, province, district, page, sortField, sortOrder });\nexport const clearRoadsPages = () => ({ type: CLEAR_ROADS_PAGES });\n\nexport const fetchRoadGeometry = (id) => ({ type: FETCH_ROAD_GEOMETRY, id });\nexport const fetchRoadGeometrySuccess = (id, geoJSON) => ({ type: FETCH_ROAD_GEOMETRY_SUCCESS, id, geoJSON });\nexport const fetchRoadGeometryError = (id, error) => ({ type: FETCH_ROAD_GEOMETRY_ERROR, id, error });\n\nexport const editRoad = (id, newId) => ({ type: EDIT_ROAD, id, newId });\nexport const editRoadSuccess = (id, newId) => ({ type: EDIT_ROAD_SUCCESS, id, newId });\nexport const editRoadError = (id, newId, error) => ({ type: EDIT_ROAD_ERROR, id, newId, error });\n\nexport const deleteRoad = (id) => ({ type: DELETE_ROAD, id });\nexport const deleteRoadSuccess = (id) => ({ type: DELETE_ROAD_SUCCESS, id });\nexport const deleteRoadError = (id, error) => ({ type: DELETE_ROAD_ERROR, id, error });\n\nexport const createRoad = (id) => ({ type: CREATE_ROAD, id });\nexport const createRoadSuccess = () => ({ type: CREATE_ROAD_SUCCESS });\nexport const createRoadError = (error) => ({ type: CREATE_ROAD_ERROR, error });\n\nexport const createRoadProperty = (id, key, value) => ({ type: CREATE_ROAD_PROPERTY, id, key, value });\nexport const createRoadPropertySuccess = (id, key, value) => ({ type: CREATE_ROAD_PROPERTY_SUCCESS, id, key, value });\nexport const createRoadPropertyError = (id, key, value, error) => ({ type: CREATE_ROAD_PROPERTY_ERROR, id, key, value, error });\n\nexport const editRoadProperty = (id, key, value) => ({ type: EDIT_ROAD_PROPERTY, id, key, value });\nexport const editRoadPropertySuccess = (id, key, value) => ({ type: EDIT_ROAD_PROPERTY_SUCCESS, id, key, value });\nexport const editRoadPropertyError = (id, key, value, error) => ({ type: EDIT_ROAD_PROPERTY_ERROR, id, key, value, error });\n\nexport const editRoadStatus = (id, value) => ({ type: EDIT_ROAD_STATUS, id, value });\nexport const editRoadStatusSuccess = (id, value) => ({ type: EDIT_ROAD_STATUS_SUCCESS, id, value });\nexport const editRoadStatusError = (id, value, error) => ({ type: EDIT_ROAD_STATUS_ERROR, id, value, error });\n\nexport const deleteRoadProperty = (id, key) => ({ type: DELETE_ROAD_PROPERTY, id, key });\nexport const deleteRoadPropertySuccess = (id, key) => ({ type: DELETE_ROAD_PROPERTY_SUCCESS, id, key });\nexport const deleteRoadPropertyError = (id, key, error) => ({ type: DELETE_ROAD_PROPERTY_ERROR, id, key, error });\n\nexport const opOnRoadProperty = () => ({ type: OP_ON_ROAD_PROPERTY });\nexport const opOnRoadPropertySuccess = (data) => ({ type: OP_ON_ROAD_PROPERTY_SUCCESS, data });\nexport const opOnRoadPropertyError = (error) => ({ type: OP_ON_ROAD_PROPERTY_ERROR, error });\n\nexport const fetchRoadBbox = (roadId) => ({ type: FETCH_ROAD_BBOX, roadId });\nexport const fetchRoadBboxSuccess = (roadId, bbox) => ({ type: FETCH_ROAD_BBOX_SUCCESS, roadId, bbox });\nexport const fetchRoadBboxError = (roadId, error) => ({ type: FETCH_ROAD_BBOX_ERROR, roadId, error });\n\nexport const fetchRoadProperty = (roadId) => ({ type: FETCH_ROAD_PROPERTY, roadId });\nexport const fetchRoadPropertySuccess = (roadId, properties) => ({ type: FETCH_ROAD_PROPERTY_SUCCESS, roadId, properties });\nexport const fetchRoadPropertyError = (roadId, error) => ({ type: FETCH_ROAD_PROPERTY_ERROR, roadId, error });\n\nexport const editRoadId = (wayId, vprommId) => ({ type: EDIT_ROAD_ID, wayId, vprommId });\nexport const editRoadIdSucess = (wayId, vprommId) => ({ type: EDIT_ROAD_ID_SUCCESS, wayId });\nexport const editRoadIdError = (wayId, error) => ({ type: EDIT_ROAD_ID_ERROR, wayId, error });\n\nexport const fetchRoadsEpic = (province, district, page, sortField, sortOrder) => (dispatch) => {\n  dispatch(fetchRoads(province, district, page, sortField, sortOrder));\n\n  return fetch(\n    format({ pathname: `${config.api}/properties/roads`, query: { province, district, page, sortField, sortOrder } })\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then((roads) => {\n      // normalize response\n      const roadsById = reduce(roads, (roadMap, road) => {\n        roadMap[road.id] = omit(road, ['id']);\n        return roadMap;\n      }, {});\n      const roadsByPage = map(roads, property('id'));\n\n      dispatch(fetchRoadsSuccess(roadsById, roadsByPage, province, district, page, sortField, sortOrder));\n    })\n    .catch((err) => dispatch(fetchRoadsError(err, province, district, page, sortField, sortOrder)));\n};\n\n\nexport const fetchRoadGeometryEpic = (id) => (dispatch) => {\n  dispatch(fetchRoadGeometry(id));\n\n  return fetch(`${config.api}/properties/roads/${id}.geojson`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(geoJSON => dispatch(fetchRoadGeometrySuccess(id, geoJSON)))\n    .catch(err => dispatch(fetchRoadGeometryError(id, err)));\n};\n\n\nexport const createRoadEpic = (id) => (dispatch) => {\n  dispatch(createRoad());\n\n  return fetch(`${config.api}/properties/roads/${id}`, {\n    method: 'PUT'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then((id) => {\n      return Promise.all([\n        dispatch(createRoadSuccess(id)),\n        dispatch(clearRoadsPages()),\n        dispatch(clearRoadCount())\n      ]);\n    }, (err) => dispatch(createRoadError(err.message)));\n};\n\n\nexport const editRoadEpic = (id, newId) => (dispatch) => {\n  dispatch(editRoad(id, newId));\n\n  return fetch(`${config.api}/properties/roads/${id}/move`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ id: newId })\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(({ id: newId }) => {\n      return Promise.all([\n        dispatch(editRoadSuccess(id, newId)),\n        dispatch(clearRoadsPages()),\n        dispatch(clearRoadCount())\n      ]);\n    }, (err) => dispatch(editRoadError(id, newId, err.message)));\n};\n\n\nexport const editRoadStatusEpic = (id, status) => (dispatch) => {\n  dispatch(editRoad(id, status));\n\n  return fetch(`${config.api}/properties/roads/${id}/status`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ status })\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(() => {\n      return Promise.all([\n        dispatch(editRoadStatusSuccess(id, status)),\n        dispatch(clearRoadsPages()),\n        dispatch(clearRoadCount())\n      ]);\n    }, (err) => dispatch(editRoadStatusError(id, status, err.message)));\n};\n\n\nexport const deleteRoadEpic = (id) => (dispatch) => {\n  dispatch(deleteRoad(id));\n\n  return fetch(`${config.api}/properties/roads/${id}`, {\n    method: 'DELETE'\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      dispatch(deleteRoadSuccess(id));\n      dispatch(clearRoadsPages());\n      dispatch(clearRoadCount());\n    })\n    .catch(err => dispatch(deleteRoadError(id, err.message)));\n};\n\n\nexport const createRoadPropertyEpic = (id, key, value) => (dispatch) => {\n  dispatch(createRoadProperty(id, key, value));\n\n  return fetch(`${config.api}/properties/roads/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json-patch+json'\n    },\n    body: JSON.stringify([{ op: 'add', path: `/${key}`, value }])\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      dispatch(createRoadPropertySuccess(id, key, value));\n    })\n    .catch((err) => dispatch(createRoadPropertyError(id, key, value, err)));\n};\n\n\nexport const opOnRoadPropertyEpic = (id, operations) => (dispatch) => {\n  dispatch(opOnRoadProperty());\n\n  const computeOps = (type, ops) => (ops[type] || []).map(field => {\n    const path = field.key.replace(/~/g, '~0').replace(/\\//g, '~1');\n    return {op: type, path: `/${path}`, value: field.value};\n  });\n  const ops = computeOps('add', operations)\n    .concat(computeOps('replace', operations))\n    .concat(computeOps('remove', operations));\n\n  return fetch(`${config.api}/properties/roads/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json-patch+json'\n    },\n    body: JSON.stringify(ops)\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return {ok: true};\n    })\n    .then(res => dispatch(opOnRoadPropertySuccess(res)), (err) => dispatch(opOnRoadPropertyError(err)));\n};\n\n\nexport const editRoadPropertyEpic = (id, key, value) => (dispatch) => {\n  dispatch(editRoadProperty(id, key, value));\n\n  return fetch(`${config.api}/properties/roads/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json-patch+json'\n    },\n    body: JSON.stringify([{ op: 'replace', path: `/${key}`, value }])\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      dispatch(editRoadPropertySuccess(id, key, value));\n    })\n    .catch((err) => dispatch(editRoadPropertyError(id, key, value, err)));\n};\n\n\nexport const deleteRoadPropertyEpic = (id, key) => (dispatch) => {\n  dispatch(deleteRoadProperty(id, key));\n\n  return fetch(`${config.api}/properties/roads/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json-patch+json'\n    },\n    body: JSON.stringify([{ op: 'remove', path: `/${key}` }])\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      dispatch(deleteRoadPropertySuccess(id, key));\n    })\n    .catch((err) => dispatch(deleteRoadPropertyError(id, key, err)));\n};\n\n\nexport const fetchRoadBboxEpic = (roadId) => (dispatch) => {\n  dispatch(fetchRoadBbox());\n\n  return fetch(`${config.api}/way/${roadId}/bbox`)\n    .then(response => {\n      if (!response.ok) {\n        return new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(bbox => dispatch(fetchRoadBboxSuccess(roadId, bbox)))\n    .catch(err => dispatch(fetchRoadBboxError(roadId, err)));\n};\n\nexport const fetchRoadPropertyEpic = (roadId) => (dispatch) => {\n  dispatch(fetchRoadProperty());\n\n  return fetch(`${config.api}/properties/roads/${roadId}`)\n    .then(response => {\n      if (!response.ok) {\n        return new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(property => dispatch(fetchRoadPropertySuccess(roadId, property)))\n    .catch(err => dispatch(fetchRoadPropertyError(roadId, err)));\n};\n\nexport const editRoadIdEpic = (wayId, vprommId) => (dispatch) => {\n  dispatch(editRoadId(wayId, vprommId));\n\n  return fetch(`${config.api}/way/tags/vprommid/${wayId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json-patch+json'\n    },\n    body: JSON.stringify({'vprommid': vprommId})\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      return response.json();\n    })\n    .then(wayId => dispatch(editRoadIdSucess(wayId)))\n    .catch(err => dispatch(editRoadError(err)));\n};\n\n/**\n * reducer\n */\nexport default (\n  state = {\n    roadsById: {},\n    roadsByPage: {}\n  },\n  action\n) => {\n  if (action.type === FETCH_ROADS) {\n    const { province, district, page, sortField, sortOrder } = action;\n    const pageKey = getRoadPageKey(province, district, page, sortField, sortOrder);\n\n    return Object.assign({}, state, {\n      roadsByPage: Object.assign({}, state.roadsByPage, {\n        [pageKey]: {\n          status: 'pending',\n          roads: state.roadsByPage[pageKey] ? state.roadsByPage[pageKey].roads : []\n        }\n      })\n    });\n  } else if (action.type === FETCH_ROADS_SUCCESS) {\n    const { roadsById, roadsByPage, province, district, page, sortField, sortOrder } = action;\n    const pageKey = getRoadPageKey(province, district, page, sortField, sortOrder);\n\n    return Object.assign({}, state, {\n      roadsById: merge({}, state.roadsById, roadsById),\n      roadsByPage: Object.assign({}, state.roadsByPage, {\n        [pageKey]: {\n          status: 'complete',\n          roads: roadsByPage\n        }\n      })\n    });\n  } else if (action.type === FETCH_ROADS_ERROR) {\n    const { province, district, page, sortField, sortOrder } = action;\n    const pageKey = getRoadPageKey(province, district, page, sortField, sortOrder);\n\n    return Object.assign({}, state, {\n      roadsByPage: Object.assign({}, state.roadsByPage, {\n        [pageKey]: {\n          status: 'error',\n          roads: []\n        }\n      })\n    });\n  } else if (action.type === CLEAR_ROADS_PAGES) {\n    return Object.assign({}, state, {\n      roadsByPage: {}\n    });\n  } else if (action.type === FETCH_ROAD_GEOMETRY_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, {\n        [action.id]: Object.assign({}, state.roadsById[action.id] || {}, {\n          geoJSON: action.geoJSON\n        })\n      })\n    });\n  } else if (action.type === CREATE_ROAD_PROPERTY_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, {\n        [action.id]: Object.assign({}, state.roadsById[action.id], {\n          properties: Object.assign({}, state.roadsById[action.id].properties, {\n            [action.key]: action.value\n          })\n        })\n      })\n    });\n  } else if (action.type === EDIT_ROAD_PROPERTY_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, {\n        [action.id]: Object.assign({}, state.roadsById[action.id], {\n          properties: Object.assign({}, state.roadsById[action.id].properties, {\n            [action.key]: action.value\n          })\n        })\n      })\n    });\n  } else if (action.type === DELETE_ROAD_PROPERTY_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, {\n        [action.id]: Object.assign({}, state.roadsById[action.id], {\n          properties: omit(state.roadsById[action.id].properties, [action.key])\n        })\n      })\n    });\n  } else if (action.type === EDIT_ROAD_STATUS_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, {\n        [action.id]: Object.assign({}, state.roadsById[action.id], {\n          status: action.value\n        })\n      })\n    });\n  } else if (action.type === FETCH_ROAD_PROPERTY_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, {\n        [action.roadId]: Object.assign({}, state.roadsById[action.roadId], {\n          properties: action.properties\n        })\n      })\n    });\n  } else if (action.type === EDIT_ROAD_ID_SUCCESS) {\n    return Object.assign({}, state);\n  } else if (action.type === DELETE_ROAD_SUCCESS) {\n    return Object.assign({}, state, {\n      roadsById: Object.assign({}, state.roadsById, delete state.roadsById[action.id])\n    });\n  }\n\n  return state;\n};\n","import config from '../../config';\nimport { deleteEntireWaysEpic, REQUEST_OSM_CHANGE_SUCCESS } from './osm';\nimport { editRoadIdEpic } from './roads';\n/**\n * constants\n */\nexport const FETCH_WAY_TASK = 'FETCH_WAY_TASK';\nexport const FETCH_NEXT_WAY_TASK = 'FETCH_NEXT_WAY_TASK';\nexport const FETCH_WAY_TASK_SUCCESS = 'FETCH_WAY_TASK_SUCCESS';\nexport const FETCH_WAY_TASK_ERROR = 'FETCH_WAY_TASK_ERROR';\nexport const FETCH_WAY_TASK_COUNT = 'FETCH_WAY_TASK_COUNT';\nexport const FETCH_WAY_TASK_COUNT_SUCCESS = 'FETCH_WAY_TASK_COUNT_SUCCESS';\nexport const FETCH_WAY_TASK_COUNT_ERROR = 'FETCH_WAY_TASK_COUNT_ERROR';\nexport const MARK_WAY_TASK_PENDING = 'MARK_WAY_TASK_PENDING';\nexport const MARK_WAY_TASK_PENDING_SUCCESS = 'MARK_WAY_TASK_PENDING_SUCCESS';\nexport const MARK_WAY_TASK_PENDING_ERROR = 'MARK_WAY_TASK_PENDING_ERROR';\nexport const SKIP_TASK = 'SKIP_TASK';\nexport const SELECT_NEXT_WAY_TASK_PROVINCE = 'SELECT_NEXT_WAY_TASK_PROVINCE';\nexport const DEDUPE_WAY_TASK = 'DEDUPE_WAY_TASK';\nexport const DEDUPE_WAY_TASK_SUCCESS = 'DEDUPE_WAY_TASK_SUCCESS';\nexport const DEDUPE_WAY_TASK_ERROR = 'DEDUPE_WAY_TASK_ERROR';\n\n/**\n * action creators\n */\nexport const fetchWayTask = (id) => ({ type: FETCH_WAY_TASK, id });\nexport const fetchNextWayTask = () => ({ type: FETCH_NEXT_WAY_TASK });\nexport const fetchWayTaskSuccess = (id, updatedAt, geoJSON) => ({\n  type: FETCH_WAY_TASK_SUCCESS,\n  id,\n  updatedAt,\n  geoJSON\n});\nexport const fetchWayTaskError = (error) => ({ type: FETCH_WAY_TASK_ERROR, error: error });\nexport const fetchWayTaskCount = () => ({ type: FETCH_WAY_TASK_COUNT });\nexport const fetchWayTaskCountSuccess = count => ({ type: FETCH_WAY_TASK_COUNT_SUCCESS, count });\nexport const fetchWayTaskCountError = count => ({ type: FETCH_WAY_TASK_COUNT_ERROR });\nexport const markWayTaskPending = () => ({ type: MARK_WAY_TASK_PENDING });\nexport const markWayTaskPendingSuccess = () => ({ type: MARK_WAY_TASK_PENDING_SUCCESS });\nexport const markWayTaskPendingError = () => ({ type: MARK_WAY_TASK_PENDING_ERROR });\nexport const skipTask = id => ({ type: SKIP_TASK, id });\nexport const selectWayTaskProvince = (provinceId) => ({ type: SELECT_NEXT_WAY_TASK_PROVINCE, selectedProvince: provinceId });\nexport const dedupeWayTask = (taskId, wayIds, wayIdToKeep, dedupeId) => ({ type: DEDUPE_WAY_TASK, taskId: taskId, wayIdsToDelete: wayIds, wayIdToKeep: wayIdToKeep, dedupeIdToApply: dedupeId });\nexport const dedupeWayTaskSuccess = () => ({ type: DEDUPE_WAY_TASK_SUCCESS });\nexport const dedupeWayTaskError = (error) => ({ type: DEDUPE_WAY_TASK_ERROR, error: error });\n\nexport const fetchNextWayTaskEpic = () => (dispatch, getState) => {\n  dispatch(fetchNextWayTask());\n\n  const skipped = getState().waytasks.skipped;\n  const selectedProvince = getState().waytasks.selectedProvince;\n\n  let params = {};\n  if (skipped.length) params['skip'] = skipped;\n  if (selectedProvince) params['province'] = selectedProvince;\n\n  let url = `${config.api}/tasks/next`;\n  if (Object.keys(params).length) {\n    url = url + '?' + Object.keys(params).map(key => `${key}=${params[key]}`).join('&');\n  }\n\n  return fetch(url)\n    .then(response => {\n      if (response.status === 404) {\n        throw new Error('No tasks remaining');\n      } else if (response.status >= 400) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(json => {\n      json.data.features.forEach(feature => {\n        feature.properties._id = feature.meta.id;\n        feature.properties.province = json.province;\n      });\n      dispatch(fetchWayTaskCountEpic());\n      return dispatch(fetchWayTaskSuccess(json.id, json.updated_at, json.data));\n    }, e => {\n      console.error('Error requesting task', e);\n      return dispatch(fetchWayTaskError(e));\n    });\n};\n\n\nexport const fetchWayTaskEpic = taskId => (dispatch, getState) => {\n  dispatch(fetchWayTask(taskId));\n\n  return fetch(`${config.api}/tasks/${taskId}`)\n    .then(response => {\n      if (response.status >= 400) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(({ id, data }) => {\n      data.features.forEach(feature => {\n        feature.properties._id = feature.meta.id;\n      });\n      return dispatch(fetchWayTaskSuccess(id, data.updated_at, data));\n    }, e => {\n      console.error('Error reloading task', e);\n      return dispatch(fetchWayTaskError());\n    });\n};\n\n\nexport const fetchWayTaskCountEpic = () => (dispatch, getState) => {\n  dispatch(fetchWayTaskCount());\n  const selectedProvince = getState().waytasks.selectedProvince;\n  const url = selectedProvince ? `${config.api}/tasks/count?province=${selectedProvince}` : `${config.api}/tasks/count`;\n\n  fetch(url)\n    .then(response => {\n      if (response.status >= 400) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(({ count }) => {\n      dispatch(fetchWayTaskCountSuccess(count));\n    }, e => {\n      console.error('Error requesting task count', e);\n      dispatch(fetchWayTaskCountError());\n    });\n};\n\n\nexport const markWayTaskPendingEpic = wayIds => dispatch => {\n  dispatch(markWayTaskPending());\n\n  return fetch(`${config.api}/tasks/pending`, {\n    method: 'PUT',\n    body: new Blob([JSON.stringify({ way_ids: wayIds })], { type: 'application/json' })\n  })\n    .then(response => {\n      if (response.status >= 400) {\n        console.error('Error marking task as pending', response.statusText);\n        dispatch(markWayTaskPendingError());\n      }\n\n      dispatch(markWayTaskPendingSuccess());\n    });\n};\n\nexport const dedupeWayTaskEpic = (taskId, wayIds, wayIdToKeep, dedupeId) => (dispatch, getState) => {\n  dispatch(dedupeWayTask(taskId, wayIds, wayIdToKeep, dedupeId));\n  // delete ways\n  dispatch(deleteEntireWaysEpic(taskId, wayIds))\n    .then(() => {\n      dispatch(editRoadIdEpic(wayIdToKeep, dedupeId))\n        .then(() => { dispatch(dedupeWayTaskSuccess); })\n        .catch((err) => { dispatch(dedupeWayTaskError(err)); });\n    });\n};\n/**\n * reducer\n */\nexport default (\n  state = {\n    status: 'complete',\n    countStatus: 'complete',\n    id: null,\n    geoJSON: null,\n    skipped: [],\n    provinces: [],\n    selectedProvince: null,\n    dedupeTaskId: null,\n    wayIdsToDelete: [],\n    dedupeIdToApply: null,\n    wayIdToKeep: null,\n    osmChangeTaskId: null\n  },\n  action\n) => {\n  if (action.type === FETCH_WAY_TASK) {\n    return Object.assign({}, state, {\n      status: 'pending'\n    });\n  } else if (action.type === FETCH_NEXT_WAY_TASK) {\n    return Object.assign({}, state, {\n      status: 'pending'\n    });\n  } else if (action.type === FETCH_WAY_TASK_SUCCESS) {\n    return Object.assign({}, state, {\n      geoJSON: action.geoJSON,\n      id: action.id,\n      updatedAt: action.updatedAt,\n      status: 'complete'\n    });\n  } else if (action.type === FETCH_WAY_TASK_ERROR) {\n    return Object.assign({}, state, {\n      status: action.error.message === 'No tasks remaining' ? 'No tasks remaining' : 'error'\n    });\n  } else if (action.type === FETCH_WAY_TASK_COUNT) {\n    return Object.assign({}, state, {\n      taskCount: action.count,\n      countStatus: 'pending'\n    });\n  } else if (action.type === FETCH_WAY_TASK_COUNT_SUCCESS) {\n    return Object.assign({}, state, {\n      taskCount: action.count,\n      countStatus: 'complete'\n    });\n  } else if (action.type === FETCH_WAY_TASK_COUNT_ERROR) {\n    return Object.assign({}, state, {\n      countStatus: 'error'\n    });\n  } else if (action.type === SKIP_TASK) {\n    return Object.assign({}, state, {\n      skipped: state.skipped.concat(action.id)\n    });\n  } else if (action.type === SELECT_NEXT_WAY_TASK_PROVINCE) {\n    return Object.assign({}, state, {\n      selectedProvince: action.selectedProvince\n    });\n  } else if (action.type === DEDUPE_WAY_TASK) {\n    return Object.assign({}, state, {\n      dedupeTaskId: action.taskId,\n      wayIdsToDelete: action.wayIdsToDelete,\n      dedupeIdToApply: action.dedupeIdToApply,\n      wayIdToKeep: action.wayIdToKeep\n    });\n  } else if (action.type === REQUEST_OSM_CHANGE_SUCCESS) {\n    return Object.assign({}, state, {\n      osmChangeTaskId: action.taskId\n    });\n  }\n\n  return state;\n};\n","import { combineReducers } from 'redux';\nimport { routeReducer } from 'react-router-redux';\nimport { localReducer } from 'redux-fractal';\nimport _ from 'lodash';\nimport * as actions from '../actions/action-types';\nimport waytasks from './modules/tasks';\nimport osmChange from './modules/osm';\nimport roads from './modules/roads';\nimport roadCount from './modules/roadCount';\nimport map from './modules/map';\n\n\nconst admins = function (state = {units: [], fetching: false, fetched: false}, action) {\n  switch (action.type) {\n    case actions.REQUEST_ADMINS:\n      console.log('REQUEST_ADMINS');\n      state = _.cloneDeep(state);\n      state.fetching = true;\n      break;\n    case actions.RECEIVE_ADMINS:\n      console.log('RECEIVE_ADMINS');\n      state = _.cloneDeep(state);\n      state.units = action.json;\n      state.fetching = false;\n      state.fetched = true;\n      break;\n    case actions.CLEAR_ADMINS:\n      state = _.cloneDeep(state);\n      state.units = [];\n      break;\n  }\n  return state;\n};\n\n\nconst search = function (state = {results: [], fetching: false, fetched: false, query: '', searching: false}, action) {\n  switch (action.type) {\n    case actions.REQUEST_SEARCH_RESULTS:\n      console.log('REQUEST_SEARCH_RESULTS');\n      state = _.cloneDeep(state);\n      state.fetching = true;\n      state.query = action.query;\n      state.searching = true;\n      break;\n    case actions.RECEIVE_SEARCH_RESULTS:\n      console.log('RECEIVE_SEARCH_RESULTS');\n      state = _.cloneDeep(state);\n      state.results = action.json;\n      state.fetching = false;\n      break;\n    case actions.CLEAN_SEARCH_RESULTS:\n      console.log('CLEAN_SEARCH_RESULTS');\n      state = _.cloneDeep(state);\n      state.results = [];\n      state.fetching = false;\n      state.fetched = true;\n      state.query = '';\n      state.searching = false;\n      break;\n  }\n  return state;\n};\n\n\nconst defaultFieldVProMMsids = {\n  fetching: false,\n  fetched: false,\n  ids: []\n};\n\nconst fieldVProMMsids = function (state = defaultFieldVProMMsids, action) {\n  switch (action.type) {\n    case actions.REQUEST_VPROMMS_FIELD_IDS:\n      state = _.cloneDeep(state);\n      state.fetching = true;\n      break;\n    case actions.RECEIVE_VPROMMS_FIELD_IDS:\n      state = _.cloneDeep(state);\n      state.fetching = false;\n      state.fetched = true;\n      state.ids = action.json;\n      break;\n    case actions.REMOVE_VPROMMS_FIELD_IDS:\n      return defaultFieldVProMMsids;\n  }\n  return state;\n};\n\nconst exploreMapDefaultState = {\n  layer: 'iri',\n  showNoVpromms: true\n};\nconst exploreMap = function (state = exploreMapDefaultState, action) {\n  const newState = _.cloneDeep(state);\n  switch (action.type) {\n    case actions.SELECT_EXPLORE_MAP_LAYER:\n      newState.layer = action.layer;\n      break;\n    case actions.EXPLORE_MAP_SHOW_NO_VPROMMS:\n      newState.showNoVpromms = action.bool;\n      break;\n  }\n  return newState;\n};\n\n\nconst defaultSearchType = {\n  searchType: 'Admin'\n};\n\nconst setSearchType = function (state = defaultSearchType, action) {\n  switch (action.type) {\n    case actions.SET_SEARCH_TYPE:\n      state = _.cloneDeep(state);\n      state.searchType = action.text;\n      break;\n  }\n  return state;\n};\n\nconst setFilteredVProMMs = function (state = [], action) {\n  switch (action.type) {\n    case actions.SET_FILTERED_VPROMMS:\n      state = _.cloneDeep(state);\n      state = action.array;\n      break;\n  }\n  return state;\n};\n\nconst defaultProvinces = {\n  fetching: false,\n  fetched: false,\n  data: {}\n};\n\nconst provinces = function (state = defaultProvinces, action) {\n  switch (action.type) {\n    case actions.REQUEST_PROVINCES:\n      state = _.cloneDeep(state);\n      state.fetching = true;\n      break;\n    case actions.RECEIVE_PROVINCES:\n      state = _.cloneDeep(state);\n      state.fetching = false;\n      state.fetched = true;\n      state.data = action.json;\n      break;\n  }\n  return state;\n};\n\n\nconst defaultAdminInfo = {\n  fetched: false,\n  fetching: false,\n  data: {}\n};\n\nconst adminInfo = function (state = defaultAdminInfo, action) {\n  switch (action.type) {\n    case actions.REQUEST_ADMIN_INFO:\n      state = _.cloneDeep(state);\n      state.fetching = true;\n      break;\n    case actions.RECEIVE_ADMIN_INFO:\n      state = _.cloneDeep(state);\n      state.fetching = false;\n      state.fetched = true;\n      state.data = action.json;\n      break;\n    case actions.REMOVE_ADMIN_INFO:\n      state = defaultAdminInfo;\n      break;\n  }\n  return state;\n};\n\n\nexport default combineReducers({\n  routing: routeReducer,\n  local: localReducer,\n  admins,\n  adminInfo,\n  roads,\n  roadCount,\n  map,\n  waytasks,\n  osmChange,\n  search,\n  exploreMap,\n  provinces,\n  setSearchType,\n  setFilteredVProMMs,\n  fieldVProMMsids // TODO - delete\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { syncHistory } from 'react-router-redux';\nimport reducer from './reducer';\nimport { hashHistory } from 'react-router';\nimport logger from 'redux-logger';\nconst middlewares = [syncHistory(hashHistory), thunkMiddleware];\n\nif (process.env.DS_ENV === 'staging') {\n  middlewares.push(logger);\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware.apply(null, middlewares)\n  )\n);\n","module.exports = {\n  'iri': {\n    property: 'iri',\n    type: 'exponential',\n    colorSpace: 'lab',\n    stops: [\n      [3, '#8CCA1B'],\n      [16, '#DA251D']\n    ]\n  },\n  'RouteShoot': {\n    property: 'RouteShoot',\n    type: 'nominal',\n    stops: [\n      false, '#808080'\n    ]\n  },\n  'RoadLabPro': {\n    property: 'RoadLabPro',\n    type: 'nominal',\n    stops: [\n      false, '#808080'\n    ]\n  }\n};\n","'use strict';\n\nmodule.exports.createModifyLineString = function (features) {\n  const nodes = [];\n  const ways = [];\n  const nodesIndex = {};\n\n  features.forEach(f => {\n    const { geometry, properties } = f;\n    processExistingLineString(geometry.coordinates, properties, ways, nodes, nodesIndex);\n  });\n  var lastNodeId = -1;\n  const changeset = {\n    create: {\n      node: nodes.map(n => {\n        n.id = lastNodeId--;\n        return {\n          id: n.id,\n          lat: n.lat,\n          lon: n.lon\n        };\n      })\n    },\n    modify: {\n      way: ways.map(w => {\n        return {\n          id: w.id,\n          nd: w.nodes.map(wn => ({ ref: wn.id })),\n          tag: processTags(w.tags)\n        };\n      })\n    }\n  };\n  return changeset;\n};\n\nfunction processTags (tags) {\n  const res = [];\n  for (let k in tags) {\n    res.push({k, v: tags[k]});\n  }\n  return res;\n}\n\nfunction processExistingLineString (coordinates, properties, ways, nodes, nodesIndex) {\n  const props = Object.assign({}, properties);\n  const id = props._id;\n  delete props._id;\n  const way = {\n    tags: props,\n    nodes: [],\n    id\n  };\n  ways.push(way);\n\n  coordinates.forEach(function (point) {\n    const hash = getNodeHash(point);\n    let node = nodesIndex[hash];\n    if (!node) {\n      node = emptyNode(point);\n      nodes.push(node);\n      nodesIndex[hash] = node;\n    }\n    way.nodes.push(node);\n  });\n}\n\nfunction getNodeHash (coords) {\n  return JSON.stringify(coords);\n}\n\nfunction emptyNode (coordinates) {\n  return {\n    lat: coordinates[1],\n    lon: coordinates[0]\n  };\n}\n","// Leaflet inspired implementation of extracting a midpoint and zoom level from a set of bounds //\nvar {\n  lngLatToMeters,\n  metersToPixels\n} = require('global-mercator');\n\n/**\n * calculates tranformed pixel point from coordinate point\n * @param {object} geoCoordinate A geographic coordinate\n * @param {number} zoom current map zoom\n * @return {object} tranformed pixel coordinate\n */\nconst transformGeoToPixel = exports.transformGeoToPixel = function (geoCoordinate, zoom) {\n  var meterCrds = lngLatToMeters([geoCoordinate.lng, geoCoordinate.lat]);\n  var pixelCrd = metersToPixels(meterCrds, zoom);\n  return {\n    x: pixelCrd[0],\n    y: pixelCrd[1]\n  };\n};\n\n/**\n * generates object with pixel reprentation of distances between bounds' latitude and longitude extrema\n * @param {object} nwPixel northwest bounds coordinate as pixel coordinate\n * @param {object} sePixel southeastbounds coordinate as pixel coordinate\n * @return {object} object with pixel distances\n */\nconst pixelDistances = exports.pixelDistances = function (nwPixel, sePixel) {\n  return {\n    x: Math.abs(nwPixel.x - sePixel.x),\n    y: Math.abs(nwPixel.y - sePixel.y)\n  };\n};\n\n\n/**\n * returns max zoom for showing extent of the bounding box provided\n * @param {number} scale the scale factor used to calcualte the new zoom\n * @param {number} zoom the map's current zoom\n * @return {number} new zoom for bounds\n */\nconst makeNewZoom = exports.makeNewZoom = function (scale, zoom) {\n  // the high level calculation for new zoom comes from:\n  // https://github.com/Leaflet/Leaflet/blob/703ae02aa8cbd0b87be5b01e77754b83ad732267/src/geo/crs/CRS.js#L65\n  // the high level calculation's components come from\n  // https://github.com/Leaflet/Leaflet/blob/703ae02aa8cbd0b87be5b01e77754b83ad732267/src/map/Map.js#L893\n  var scaledZoom = 256 * Math.pow(2, zoom);\n  var scaledScaledZoom = scale * scaledZoom;\n  var newZoom = Math.log(scaledScaledZoom / 256) / Math.LN2;\n  // the maximum possible zoom is 24.\n  return newZoom > 24 ? 24 : newZoom;\n};\n\n\nexports.bboxToLngLatZoom = ([west, south, east, north]) => {\n  const lng = west + ((east - west) / 2);\n  const lat = south + ((north - south) / 2);\n  const xDimension = 1000;\n  const yDimension = 500;\n  const padding = 10;\n  const zoom = 6;\n\n\n  // TODO - this implementation shouldn't care about current zoom to calculate new zoom for bbox\n  // hardcoding at 6 produces fine enough results, but it shouldn't be necessary\n  // actually using current zoom produces bad/inconsistent results\n  const { x: xDistance, y: yDistance } = pixelDistances(\n    transformGeoToPixel({ lng: west, lat: north }, zoom),\n    transformGeoToPixel({ lng: east, lat: south }, zoom)\n  );\n\n  const zoomScale = Math.min(xDimension / (xDistance + (padding / 2)), yDimension / (yDistance + (padding / 2)));\n  const newZoom = makeNewZoom(zoomScale, zoom);\n\n  return { lng, lat, zoom: newZoom };\n};\n","'use strict';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport {\n  compose,\n  withContext\n} from 'recompose';\nimport { fetchSearchResults, cleanSearchResults } from '../actions/action-creators';\n\nimport SiteHeader from '../components/site-header';\nimport ConfirmationPrompt from '../components/confirmation-prompt';\n\n\nvar App = React.createClass({\n  displayName: 'App',\n\n  propTypes: {\n    _fetchSearchResults: React.PropTypes.func,\n    _cleanSearchResults: React.PropTypes.func,\n    search: React.PropTypes.object,\n    routes: React.PropTypes.array,\n    children: React.PropTypes.object,\n    location: React.PropTypes.object\n  },\n\n  render: function () {\n    const pageClass = _.get(_.last(this.props.routes), 'pageClass', '');\n    return (\n      <div className={'site-canvas-inner ' + pageClass}>\n        <SiteHeader/>\n\n        <main className='site-body'>\n          {this.props.children}\n        </main>\n\n        <ConfirmationPrompt />\n      </div>\n    );\n  }\n});\n\n\nexport default compose(\n  connect(\n    state => ({\n      subregions: state.adminSubregions,\n      search: state.search\n    }),\n    dispatch => ({\n      _fetchSearchResults: (query) => dispatch(fetchSearchResults(query)),\n      _cleanSearchResults: () => dispatch(cleanSearchResults())\n    })\n  ),\n  withContext(\n    { language: React.PropTypes.string },\n    ({ params: { lang: language } }) => ({ language })\n  )\n)(App);\n","'use strict';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  compose,\n  getContext\n} from 'recompose';\nimport T from '../components/t';\nimport { Link } from 'react-router';\nimport RoadTable from '../containers/road-table-container';\nimport DistrictList from '../components/district-list';\nimport {\n  fetchAdminInfo\n} from '../actions/action-creators';\nimport config from '../config';\nimport {\n  ADMIN_MAP\n} from '../constants';\nimport AssetsCreate from '../components/assets-create';\n\n\nconst renderAdminName = (children, aaId, aaIdSub) => {\n  const adminName = aaIdSub ?\n    children.find(child => child.id === Number(aaIdSub)).name_en :\n    ADMIN_MAP.province[aaId].name;\n\n  return (\n    <h2 className='incontainer__title'>{adminName}</h2>\n  );\n};\n\nclass AssetsAA extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.onCreateAssetClick = this.onCreateAssetClick.bind(this);\n\n    this.state = {\n      createModalOpen: false\n    };\n  }\n\n  componentWillMount () {\n    this.props._fetchAdminInfo(this.props.params.aaId);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.params.aaId !== nextProps.params.aaId) {\n      this.props._fetchAdminInfo(nextProps.params.aaId);\n    }\n  }\n\n  onModalClose (data = {}) {\n    this.setState({ createModalOpen: false });\n  }\n\n  onCreateAssetClick (e) {\n    e.preventDefault();\n    this.setState({ createModalOpen: true });\n  }\n\n  render () {\n    const { adminInfoFetched, language, adminInfo: { children }, params: { aaId, aaIdSub } } = this.props;\n\n    return (\n      <div className='incontainer'>\n        <div className='incontainer__header'>\n          <div className='incontainer__headline'>\n            {children && renderAdminName(children, aaId, aaIdSub)}\n\n            <ol className='incontainer__breadcrumb'>\n              <li><Link title='View' to={`${language}/assets`}>Overview</Link></li>\n              {aaIdSub && <li><Link title='View' to={`${language}/assets/${aaId}`}>{ADMIN_MAP.province[aaId].name}</Link></li>}\n            </ol>\n          </div>\n\n          <div className='incontainer__hactions'>\n            {!aaIdSub && aaId && <a href={`${config.provinceDumpBaseUrl}${aaId}.csv`} className='ica-download'><T>Download</T></a>}\n            <AssetsCreate />\n          </div>\n\n        </div>\n\n        <div>\n          {\n            !aaIdSub && adminInfoFetched &&\n              <DistrictList\n                districts={children}\n                aaId={aaId}\n                language={language}\n              />\n          }\n        </div>\n\n        <RoadTable />\n\n      </div>\n    );\n  }\n}\n\nif (config.environment !== 'production') {\n  AssetsAA.propTypes = {\n    _fetchAdminInfo: React.PropTypes.func,\n    params: React.PropTypes.object,\n    language: React.PropTypes.string,\n    adminInfo: React.PropTypes.object,\n    adminInfoFetched: React.PropTypes.bool\n  };\n}\n\n//\n//\n//\n\nexport default compose(\n  getContext({ language: React.PropTypes.string }),\n  connect(\n    state => ({\n      adminInfo: state.adminInfo.data,\n      adminInfoFetched: state.adminInfo.fetched\n    }),\n    dispatch => ({\n      _fetchAdminInfo: (id, level) => dispatch(fetchAdminInfo(id, level))\n    })\n  )\n)(AssetsAA);\n","import React, { PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  toPairs,\n  find,\n  get\n} from 'lodash';\nimport {\n  compose,\n  getContext,\n  withProps\n} from 'recompose';\nimport { local } from 'redux-fractal';\nimport { createStore, combineReducers } from 'redux';\nimport { Link, withRouter } from 'react-router';\nimport bbox from '@turf/bbox';\nimport mapboxgl from 'mapbox-gl';\nimport c from 'classnames';\nimport T, {\n  translate\n} from '../components/t';\n\nimport Dropdown from '../components/dropdown';\nimport AssetsEditModal from '../components/assets-edit-modal';\n\nimport {\n  FETCH_ROAD_GEOMETRY,\n  FETCH_ROAD_GEOMETRY_SUCCESS,\n  FETCH_ROAD_GEOMETRY_ERROR,\n  FETCH_ROAD_PROPERTY,\n  FETCH_ROAD_PROPERTY_ERROR,\n  FETCH_ROAD_PROPERTY_SUCCESS,\n  OP_ON_ROAD_PROPERTY,\n  OP_ON_ROAD_PROPERTY_SUCCESS,\n  OP_ON_ROAD_PROPERTY_ERROR,\n  EDIT_ROAD_STATUS_SUCCESS,\n  fetchRoadGeometryEpic,\n  fetchRoadPropertyEpic,\n  deleteRoadEpic,\n  editRoadEpic,\n  opOnRoadPropertyEpic,\n  editRoadStatusEpic\n} from '../redux/modules/roads';\nimport {\n  ADMIN_MAP\n} from '../constants';\nimport { mbToken, api, environment } from '../config';\nimport { showConfirm } from '../components/confirmation-prompt';\n\nmapboxgl.accessToken = mbToken;\n\nclass AssetsDetail extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.onEditDelete = this.onEditDelete.bind(this);\n    this.onEditProperties = this.onEditProperties.bind(this);\n    this.onModalClose = this.onModalClose.bind(this);\n\n    this.state = {\n      layerRendered: false,\n      editModalOpen: false\n    };\n  }\n\n  componentWillMount () {\n    const { vpromm, fetchRoadProperty, fetchRoadGeometry } = this.props;\n    fetchRoadProperty(vpromm);\n    fetchRoadGeometry(vpromm);\n  }\n\n  componentDidMount () {\n    this.map = new mapboxgl.Map({\n      container: 'asset-map',\n      center: [106.12774207395364, 16.185396038978936],\n      zoom: 4,\n      style: 'mapbox://styles/mapbox/light-v9',\n      failIfMajorPerformanceCaveat: false\n    });\n\n    this.map.addControl(new mapboxgl.ScaleControl({ unit: 'metric' }));\n    this.map.addControl(new mapboxgl.NavigationControl(), 'top-left');\n\n    this.map.on('load', () => {\n      this.setupMapStyle();\n    });\n\n    // Disable map rotation using right click + drag.\n    this.map.dragRotate.disable();\n\n    // Disable map rotation using touch rotation gesture.\n    this.map.touchZoomRotate.disableRotation();\n\n    // Remove compass.\n    document.querySelector('.mapboxgl-ctrl .mapboxgl-ctrl-compass').remove();\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.vpromm !== nextProps.vpromm) {\n      this.props.fetchRoadProperty(nextProps.vpromm);\n      this.props.fetchRoadGeometry(nextProps.vpromm);\n    }\n\n    if (this.props.roadGeo.fetching && !nextProps.roadGeo.fetching && !nextProps.roadGeo.error) {\n      this.setupMapStyle();\n    }\n  }\n\n  setupMapStyle () {\n    const { fetched, data } = this.props.roadGeo;\n\n    if (!fetched || this.map.getSource('road-geometry')) return;\n\n    this.map.addSource('road-geometry', { type: 'geojson', data: data });\n    this.map.addLayer({\n      id: `road-geometry-layer`,\n      type: 'line',\n      source: 'road-geometry',\n      paint: {\n        'line-width': 4,\n        'line-color': '#da251d'\n      }\n    });\n\n    if (data.features.length > 0) {\n      this.map.fitBounds(bbox(data), { padding: 20 });\n    }\n  }\n\n  onModalClose (data = {}) {\n    this.setState({ editModalOpen: false });\n    if (data.action === 'refresh') {\n      // Why the setTimeout you ask?\n      // For some reason redux-fractal doesn't play well with thunks.\n      // It thinks that the action is being dispatched from a reducer and\n      // throws an error. \"Reducers may not dispatch actions.\"\n      // This is meant to refresh the data after properties are saved.\n      setTimeout(() => { this.props.fetchRoadProperty(this.props.vpromm); }, 0);\n    } else if (data.action === 'redirect') {\n      setTimeout(() => { this.props.router.push({pathname: `/${this.props.language}/assets/road/${data.vpromm}/`}); }, 0);\n    }\n  }\n\n  onEditProperties (e) {\n    e.preventDefault();\n    this.setState({ editModalOpen: true });\n  }\n\n  onEditDelete (e) {\n    e.preventDefault();\n    showConfirm({\n      title: 'Delete asset',\n      body: (\n        <div>\n          <p><T>Are you sure you want to delete road <strong>{this.props.vpromm}</strong>?<br /> Note that this action is irreversible.</T></p>\n        </div>\n      )\n    }, () => {\n      this.props.deleteRoad(this.props.vpromm);\n      this.props.router.push({pathname: `/${this.props.language}/assets`});\n    });\n  }\n\n  async onStateChange (status, e) {\n    e.preventDefault();\n\n    try {\n      const res = await this.props.editRoadStatus(this.props.vpromm, status);\n      if (res.error) throw new Error(res.error);\n    } catch (error) {\n      alert('An error occurred while saving. Please try again.');\n    }\n  }\n\n  hasGeometry () {\n    const { roadGeo } = this.props;\n    return roadGeo.fetched ? get(roadGeo, 'data.features', []).length > 0 : true;\n  }\n\n  renderProperties () {\n    const { fetched, data } = this.props.roadProps;\n\n    if (!fetched) return null;\n\n    let propNames = Object.keys(data.properties);\n    propNames.sort((a, b) => a.toLowerCase() > b.toLowerCase() ? 1 : -1);\n\n    const renderDlItem = (name) => {\n      return [\n        <dt key={`dt-${name}`}>{name}</dt>,\n        <dd key={`dd-${name}`}>{data.properties[name] || '-'}</dd>\n      ];\n    };\n\n    return (\n      <section>\n        <h3>Attributes</h3>\n        {propNames.length ? (\n          <dl className='attributes-list'>\n            {propNames.map(renderDlItem)}\n          </dl>\n        ) : (\n          <div className='no-content no-content--attributes'>\n            <p><T>This asset doesn't have any attributes.</T></p>\n            <p><a className='button button--base-raised-light' href='#' onClick={this.onEditProperties}><T>Edit attributes</T></a></p>\n          </div>\n        )}\n      </section>\n    );\n  }\n\n  renderReviewStatus () {\n    const stateMap = {\n      'pending': translate(this.props.language, 'Pending'),\n      'reviewed': translate(this.props.language, 'Reviewed')\n    };\n\n    const reviewState = this.props.roadProps.data.status || 'pending';\n    const triggerText = this.props.roadProps.fetched ? stateMap[reviewState] : 'Loading';\n    const classForState = (state) => c('drop__menu-item', {'drop__menu-item--active': reviewState === state});\n\n    return (\n      <Dropdown\n        className='review-status-menu'\n        triggerClassName='button-review-status'\n        triggerActiveClassName='button--active'\n        triggerText={triggerText}\n        triggerTitle='Change review state'\n        direction='down'\n        alignment='left' >\n        <h3 className='drop__title'><T>Review status</T></h3>\n        <ul className='drop__menu drop__menu--select'>\n          <li><a href='#' className={classForState('pending')} onClick={this.onStateChange.bind(this, 'pending')} data-hook='dropdown:close'>{stateMap['pending']}</a></li>\n          <li><a href='#' className={classForState('reviewed')} onClick={this.onStateChange.bind(this, 'reviewed')} data-hook='dropdown:close'>{stateMap['reviewed']}</a></li>\n        </ul>\n      </Dropdown>\n    );\n  }\n\n  render () {\n    const { vpromm, language, roadProps } = this.props;\n\n    const disId = get(roadProps, 'data.district.id', null);\n    const disName = get(roadProps, 'data.district.name', null);\n    const provId = get(roadProps, 'data.province.id', null);\n    const provName = get(roadProps, 'data.province.name', null);\n    const hasGeometry = this.hasGeometry();\n\n    return (\n      <div className='incontainer'>\n        <div className='incontainer__header'>\n          <div className='incontainer__headline'>\n            <h2 className='incontainer__title'>{vpromm}</h2>\n\n            <ol className='incontainer__breadcrumb'>\n              <li><Link title='View assets page' to={`/${language}/assets`}>Overview</Link></li>\n              {provId && <li><Link title='View province page' to={`/${language}/assets/${provId}`}>{provName}</Link></li>}\n              {disId && <li><Link title='View district page' to={`/${language}/assets/${provId}/${disId}`}>{disName}</Link></li>}\n            </ol>\n          </div>\n          <div className='incontainer__hactions'>\n            {this.renderReviewStatus()}\n\n            <a href={`${api}/properties/roads/${vpromm}.geojson?download`} className='ica-download'><T>Download</T></a>\n\n            <Dropdown\n              className='browse-menu'\n              triggerClassName='ica-pencil ica-main'\n              triggerActiveClassName='button--active'\n              triggerText='Edit'\n              triggerTitle='Toggle menu options'\n              direction='down'\n              alignment='right' >\n              <ul className='drop__menu drop__menu--iconified edit-menu'>\n                <li><a href='#' className='drop__menu-item em-attributes' onClick={this.onEditProperties}>Attributes</a></li>\n                {/*\n                  We're including the way id in the url just to show it, as it\n                  isn't doing anything. The way id for the editor is being\n                  stored by the reducer in redux/modules/map.js once the road\n                  properties are loaded.\n                */}\n                <li><Link to={`/${language}/editor?way=w${roadProps.data.way_id}`} className={c('drop__menu-item em-geometry', {disabled: !hasGeometry})} disabled={!hasGeometry}>Geometry</Link></li>\n              </ul>\n              <ul className='drop__menu drop__menu--iconified'>\n                <li><a href='#' className='drop__menu-item em-delete' onClick={this.onEditDelete}>Delete</a></li>\n              </ul>\n            </Dropdown>\n          </div>\n        </div>\n\n        <figure className='map map--detail'>\n          <div className='map__media' id='asset-map' />\n          {!hasGeometry ? (\n            <div className='no-content no-content--geometry'>\n              <p><T>This asset doesn't have geometry.</T></p>\n              <p><Link to={`/${language}/upload`} className='button button--achromic-glass'><T>Upload geometry</T></Link></p>\n            </div>\n          ) : null}\n          <figcaption className='map__caption'><p><T>Asset geometry</T></p></figcaption>\n        </figure>\n\n        {this.renderProperties()}\n\n        {this.props.roadProps.fetched ? <AssetsEditModal\n          revealed={this.state.editModalOpen}\n          onCloseClick={this.onModalClose}\n          opOnRoadProperty={this.props.opOnRoadProperty}\n          editRoad={this.props.editRoad}\n          vpromm={vpromm}\n          roadPropsOp={this.props.roadPropsOp}\n          roadProps={this.props.roadProps} /> : null}\n      </div>\n    );\n  }\n}\n\nif (environment !== 'production') {\n  AssetsDetail.propTypes = {\n    vpromm: PropTypes.string,\n    router: PropTypes.object,\n    roadGeo: PropTypes.object,\n    roadProps: PropTypes.object,\n    roadPropsOp: PropTypes.object,\n    language: PropTypes.string,\n    fetchRoadProperty: PropTypes.func,\n    fetchRoadGeometry: PropTypes.func,\n    deleteRoad: PropTypes.func,\n    opOnRoadProperty: PropTypes.func,\n    editRoad: PropTypes.func,\n    editRoadStatus: PropTypes.func\n  };\n}\n\n//\n//\n//\n\n// Road properties state and reducer.\nconst stateRoadProps = {\n  fetched: false,\n  fetching: false,\n  data: {}\n};\n\nconst reducerRoadProps = (state = stateRoadProps, action) => {\n  switch (action.type) {\n    case FETCH_ROAD_PROPERTY:\n      return {...state, fetching: true, fetched: false, error: false};\n    case FETCH_ROAD_PROPERTY_ERROR:\n      return {...state, fetching: false, fetched: true, error: true};\n    case FETCH_ROAD_PROPERTY_SUCCESS:\n      return {...state, fetching: false, fetched: true, data: action.properties};\n    case EDIT_ROAD_STATUS_SUCCESS:\n      return {...state, data: {...state.data, status: action.value}};\n  }\n\n  return state;\n};\n\n// Road geometry state and reducer.\nconst stateRoadGeo = {\n  fetched: false,\n  fetching: false,\n  data: {}\n};\n\nconst reducerRoadGeo = (state = stateRoadGeo, action) => {\n  switch (action.type) {\n    case FETCH_ROAD_GEOMETRY:\n      return {...state, fetching: true, fetched: false, error: false};\n    case FETCH_ROAD_GEOMETRY_ERROR:\n      return {...state, fetching: false, fetched: true, error: true};\n    case FETCH_ROAD_GEOMETRY_SUCCESS:\n      return {...state, fetching: false, fetched: true, data: action.geoJSON};\n  }\n\n  return state;\n};\n\n// Road operations state and reducer.\n// Handles operations done to the properties.\nconst stateOpOnRoad = {\n  processing: false,\n  data: {}\n};\n\nconst reducerOpOnRoad = (state = stateOpOnRoad, action) => {\n  switch (action.type) {\n    case OP_ON_ROAD_PROPERTY:\n      return {...state, processing: true, error: false};\n    case OP_ON_ROAD_PROPERTY_SUCCESS:\n      return {...state, processing: false, error: false, data: action.data};\n    case OP_ON_ROAD_PROPERTY_ERROR:\n      return {...state, processing: false, error: true};\n  }\n\n  return state;\n};\n\nconst reducer = combineReducers({\n  properties: reducerRoadProps,\n  geometry: reducerRoadGeo,\n  operations: reducerOpOnRoad\n});\n\n// Notes:\n// The state for each road is handled locally with redux-fractal.\n// The data from the api is also saved in the global state but since each\n// mapStateToProps (either local() or connect()) causes a render is difficult\n// to merge both therefore we're handling everything here.\nexport default compose(\n  withRouter,\n  getContext({ language: React.PropTypes.string }),\n  withProps(({ language, params: { vpromm } }) => {\n    const [aaId, { name }] = find(\n      toPairs(ADMIN_MAP.province),\n      ([aaId, { id }]) => id === vpromm.substring(0, 2)\n    );\n\n    return {\n      vpromm,\n      provinceName: name,\n      aaId\n    };\n  }),\n  local({\n    key: ({ vpromm }) => `${vpromm}-road-map`,\n    createStore: () => createStore(reducer),\n    mapStateToProps: (state) => ({\n      roadProps: state.properties,\n      roadGeo: state.geometry,\n      roadPropsOp: state.operations\n    }),\n    filterGlobalActions: ({ type }) => [\n      FETCH_ROAD_GEOMETRY,\n      FETCH_ROAD_GEOMETRY_SUCCESS,\n      FETCH_ROAD_GEOMETRY_ERROR,\n      FETCH_ROAD_PROPERTY,\n      FETCH_ROAD_PROPERTY_SUCCESS,\n      FETCH_ROAD_PROPERTY_ERROR,\n      OP_ON_ROAD_PROPERTY,\n      OP_ON_ROAD_PROPERTY_SUCCESS,\n      OP_ON_ROAD_PROPERTY_ERROR,\n      EDIT_ROAD_STATUS_SUCCESS\n    ].indexOf(type) > -1\n  }),\n  connect(\n    (state, props) => ({}),\n    (dispatch) => ({\n      fetchRoadGeometry: (...args) => dispatch(fetchRoadGeometryEpic(...args)),\n      fetchRoadProperty: (...args) => dispatch(fetchRoadPropertyEpic(...args)),\n      opOnRoadProperty: (...args) => dispatch(opOnRoadPropertyEpic(...args)),\n      deleteRoad: (...args) => dispatch(deleteRoadEpic(...args)),\n      editRoad: (...args) => dispatch(editRoadEpic(...args)),\n      editRoadStatus: (...args) => dispatch(editRoadStatusEpic(...args))\n    })\n  )\n)(AssetsDetail);\n","'use strict';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  compose,\n  getContext,\n  lifecycle,\n  withProps\n} from 'recompose';\nimport {\n  reduce\n} from 'lodash';\nimport T from '../components/t';\nimport {\n  fetchProvinces\n} from '../actions/action-creators';\nimport {\n  fetchProvincesRoadCountEpic\n} from '../redux/modules/roadCount';\nimport ProvinceTable from '../containers/province-table-container';\nimport {\n  ADMIN_MAP\n} from '../constants';\nimport AssetsCreate from '../components/assets-create';\n\n\nconst AssetsIndex = ({\n  provinces, provincesFetched, provincesRoadCount, totalRoadCount, osmRoadCount, provincesRoadCountStatus\n}) => {\n  return (\n    <div className='incontainer'>\n      <div className='incontainer__header'>\n        <div className='incontainer__headline'>\n          <h2 className='incontainer__title'><T>Overview</T></h2>\n        </div>\n\n        <div className='incontainer__hactions'>\n          <AssetsCreate />\n        </div>\n      </div>\n      {\n        provincesRoadCountStatus === 'complete' &&\n        <div className='a-main__status'>\n          <h2>\n            <strong>{(osmRoadCount / totalRoadCount).toFixed(2)}% </strong>\n            <T>of VPRoMMS Ids have field data collected</T> ({osmRoadCount} of {totalRoadCount})\n          </h2>\n          <div className='meter'>\n            <div className='meter__internal' style={{width: `${osmRoadCount / totalRoadCount}%`}}></div>\n          </div>\n        </div>\n      }\n      {\n        provincesFetched && provincesRoadCountStatus === 'complete' &&\n        <ProvinceTable\n          provinces={provinces.filter(province => ADMIN_MAP.province[province.id])}\n          provincesRoadCount={provincesRoadCount}\n        />\n      }\n    </div>\n  );\n};\n\n\nconst fetchData = ({\n  provinces, provincesRoadCount, provincesRoadCountStatus, fetchProvinces, fetchRoadCount\n}) => {\n  if (!provinces) {\n    fetchProvinces();\n  }\n\n  if (!provincesRoadCount && provincesRoadCountStatus !== 'pending' && provincesRoadCountStatus !== 'error') {\n    fetchRoadCount();\n  }\n};\n\n\nexport default compose(\n  getContext({ language: React.PropTypes.string }),\n  connect(\n    state => ({\n      provinces: state.provinces.data.province,\n      provincesFetched: state.provinces.fetched,\n      provincesRoadCount: state.roadCount.provinces.provinceCount,\n      provincesRoadCountStatus: state.roadCount.provinces.status\n    }),\n    dispatch => ({\n      fetchProvinces: () => dispatch(fetchProvinces()),\n      fetchRoadCount: () => dispatch(fetchProvincesRoadCountEpic())\n    })\n  ),\n  lifecycle({\n    componentWillMount: function () {\n      fetchData(this.props);\n    },\n    componentWillReceiveProps: function (nextProps) {\n      fetchData(nextProps);\n    }\n  }),\n  withProps(({ provincesRoadCount, provincesRoadCountStatus }) => {\n    if (provincesRoadCount) {\n      return {\n        totalRoadCount: reduce(provincesRoadCount, (total, { count }) => total + count, 0),\n        osmRoadCount: reduce(provincesRoadCount, (total, { osmCount }) => total + osmCount, 0)\n      };\n    }\n\n    return {};\n  })\n)(AssetsIndex);\n","'use strict';\nimport React from 'react';\nimport T from '../components/t';\n\nconst Assets = ({ children }) => (\n  <section className='inpage'>\n    <header className='inpage__header'>\n      <div className='inner'>\n        <div className='inpage__headline'>\n          <h1 className='inpage__title'><T>Assets</T></h1>\n        </div>\n      </div>\n    </header>\n    <div className='inpage__body'>\n      <div className='inner'>\n        {children}\n      </div>\n    </div>\n  </section>\n);\n\nexport default Assets;\n","import React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nconst products = [];\n\nconst selectRowProp = {\n  mode: 'checkbox',\n  bgColor: 'rgb(238, 193, 213)'\n};\n\nfunction addProducts(quantity) {\n  const startId = products.length;\n  for (let i = 0; i < quantity; i++) {\n    const id = startId + i;\n    products.push({\n      id: id,\n      name: 'Item name ' + id,\n      price: 2100 + i,\n      coupon: 'yes',\n      status: 'no',\n      customer: 'Customer' + i,\n      order: i\n    });\n  }\n}\n\naddProducts(15);\n\nconst cellEditProp = {\n  mode: 'click',\n  blurToSave: true\n};\n\nexport default class ClickToEditTable extends React.Component {\n  render() {\n    return (\n      <div className = 'content'>\n      <BootstrapTable data={ products } cellEdit={ cellEditProp }  selectRow={ selectRowProp }\n      deleteRow\n      exportCSV>\n          <TableHeaderColumn row='0' rowSpan='2' dataField='id' isKey>ID</TableHeaderColumn>\n        <TableHeaderColumn row='0' colSpan='3' dataSort csvHeader='Product' headerAlign='center'>Product</TableHeaderColumn>\n        <TableHeaderColumn row='1' dataField='name' width='175' dataAlign='center'>name</TableHeaderColumn>\n        <TableHeaderColumn row='1' dataField='price' dataSort>price</TableHeaderColumn>\n        <TableHeaderColumn row='1' dataField='coupon' width='70'>Coupon</TableHeaderColumn>\n        <TableHeaderColumn row='0' csvHeader='In stock' rowSpan='2' headerAlign='center'  dataField='status'>In stock</TableHeaderColumn>\n        <TableHeaderColumn row='0' colSpan='2' csvHeader='Customer' headerAlign='center' filter={ { type: 'TextFilter', delay: 1000 } }>Customer</TableHeaderColumn>\n        <TableHeaderColumn row='1' csvHeader='name' headerAlign='center' dataField='customer'>name</TableHeaderColumn>\n        <TableHeaderColumn row='1' csvHeader='order' headerAlign='center' dataField='order' dataSort>order</TableHeaderColumn>\n      </BootstrapTable>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  compose,\n  getContext\n} from 'recompose';\nimport MapSearch from '../components/map-search';\nimport T from '../components/t';\nimport {\n  setMapPosition\n} from '../redux/modules/map';\nimport config from '../config';\n\nvar Editor = React.createClass({\n  displayName: 'Editor',\n\n  propTypes: {\n    setMapPosition: React.PropTypes.func,\n    lng: React.PropTypes.number,\n    lat: React.PropTypes.number,\n    zoom: React.PropTypes.number,\n    language: React.PropTypes.string.isRequired,\n    way: React.PropTypes.string\n  },\n\n  // /////////////////////////////////////////////////////////////////////////////\n  // / Message listener (postMessage)\n  // /\n  // / When receiving a message form the iframe, process the url and set it.\n  // / The url now becomes shareable. The action to take on the url will depend on\n  // / the app.\n  // /\n  // / The switch is done based on the app id, defined when the OR_frame_notifier\n  // / is included.\n  // /\n  // /\n  // / What this actually does:\n  // / When a the iframe's url changes it is sent via postMessage to the parent. It\n  // / removes the base portion on the url (defined in the config) and stores\n  // / the rest:\n  // / - Url on the \"editor\" changes to:\n  // /     http://devseed.com/editor/#background=something\n  // / - Prefix is removed resulting in:\n  // /     #background=something\n  // / - Appended to the current url:\n  // /     http://devseed.com/openroads/#/editor/background=something\n  // / - When entering the page, everything after (/#/editor/)\n  // /   is sent to the iframe alongside the proper prefix.\n  // /\n  messageListener: function (e) {\n    if (e.data.type === 'urlchange') {\n      switch (e.data.id) {\n        case 'or-editor':\n          this.hash = e.data.url.replace(new RegExp(`(http:|https:)?${config.editorUrl}/?#?`), '');\n          // TODO: reconcile how params are surfaced upto the app. don't dispatch anything upto the app for now.\n          // this.props.dispatch(replace(`/${this.props.language}/editor/${this.hash}`));\n          break;\n      }\n    } else if (e.data.type === 'navigate') {\n      switch (e.data.id) {\n        case 'or-editor':\n          // TODO: reconcile how params are surfaced upto the app. don't dispatch anything upto the app for now.\n          // this.props.dispatch(push(e.data.url));\n          break;\n      }\n    }\n  },\n\n  componentDidMount: function () {\n    this.hash = '';\n    window.addEventListener('message', this.messageListener, false);\n  },\n\n  componentWillReceiveProps: function ({ lng, lat, zoom, way }) {\n    this.props.setMapPosition(lng, lat, zoom, way);\n  },\n\n  componentWillUnmount: function () {\n    window.removeEventListener('message', this.messageListener, false);\n\n    const mapPositionHash = /[0-9.]+\\/[0-9.]+\\/[0-9.]+$/.exec(this.hash);\n    if (mapPositionHash && mapPositionHash[0] && mapPositionHash[0].split('/').length === 3) {\n      const [zoom, lng, lat] = mapPositionHash[0]\n        .split('/')\n        .map(Number);\n      this.props.setMapPosition(lng, lat, zoom);\n    }\n  },\n\n  render: function () {\n    const { lng, lat, way } = this.props;\n    const zoom = way ? 16 : this.props.zoom;\n    return (\n      <section className='inpage inpage--alt'>\n        <header className='inpage__header'>\n          <div className='inner'>\n            <div className='inpage__headline'>\n              <h1 className='inpage__title'><T>Editor</T></h1>\n            </div>\n            <div className='inpage__actions'>\n              <MapSearch />\n            </div>\n          </div>\n        </header>\n        <div className='inpage__body'>\n          <div className='inner'>\n            <figure className='map'>\n              <iframe\n                className='map__media'\n                src={`${config.editorUrl}/#id=${way}&map=${zoom}/${lng}/${lat}`}\n                id='main-frame'\n                name='main-frame'\n                ref=\"iframe\"\n              />\n            </figure>\n          </div>\n        </div>\n      </section>\n    );\n  }\n});\n\n\nmodule.exports = compose(\n  getContext({ language: React.PropTypes.string }),\n  connect(\n    state => ({\n      lng: state.map.lng || 108.239,\n      lat: state.map.lat || 15.930,\n      zoom: state.map.zoom || 6,\n      way: state.map.waySlug\n    }),\n    dispatch => ({\n      setMapPosition: (lng, lat, zoom, way) => dispatch(setMapPosition(lng, lat, zoom, way))\n    })\n  )\n)(Editor);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  compose,\n  withProps,\n  getContext\n} from 'recompose';\nimport mapboxgl from 'mapbox-gl';\nimport T from '../components/t';\nimport config from '../config';\nimport lineColors from '../utils/line-colors';\nimport {\n  selectExploreMapLayer,\n  exploreMapShowNoVpromms\n} from '../actions/action-creators';\nimport {\n  setMapPosition\n} from '../redux/modules/map';\nimport {\n  fetchRoadBboxEpic\n} from '../redux/modules/roads';\nimport MapSearch from '../components/map-search';\nimport MapOptions from '../components/map-options';\nimport MapLegend from '../components/map-legend';\nimport { withRouter } from 'react-router';\n\n\nvar Explore = React.createClass({\n  displayName: 'Explore',\n\n  propTypes: {\n    layer: React.PropTypes.string,\n    activeRoad: React.PropTypes.string,\n    lng: React.PropTypes.number,\n    lat: React.PropTypes.number,\n    zoom: React.PropTypes.number,\n    selectExploreMapLayer: React.PropTypes.func,\n    exploreMapShowNoVpromms: React.PropTypes.func,\n    setMapPosition: React.PropTypes.func,\n    fetchActiveRoad: React.PropTypes.func\n  },\n\n  componentDidMount: function () {\n    mapboxgl.accessToken = config.mbToken;\n\n    const { lng, lat, zoom, activeRoad } = this.props;\n\n    if (activeRoad) {\n      this.props.fetchActiveRoad(activeRoad);\n    }\n\n    this.map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/light-v9',\n      failIfMajorPerformanceCaveat: false,\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    this.map.addControl(new mapboxgl.NavigationControl(), 'top-left');\n\n    // Disable map rotation using right click + drag.\n    this.map.dragRotate.disable();\n\n    // Disable map rotation using touch rotation gesture.\n    this.map.touchZoomRotate.disableRotation();\n\n    // Remove compass.\n    document.querySelector('.mapboxgl-ctrl .mapboxgl-ctrl-compass').remove();\n\n    this.map.on('load', () => {\n      // Load all roads with VPRoMMS values, and color by IRI\n      this.map\n        .addLayer({\n          id: 'active_road',\n          type: 'line',\n          source: {\n            type: 'vector',\n            url: 'mapbox://openroads.vietnam-conflated-1'\n          },\n          'source-layer': 'conflated',\n          paint: {\n            'line-width': 20,\n            'line-color': '#D3D3D3'\n          },\n          layout: { 'line-cap': 'round' },\n          filter: ['==', 'or_vpromms', activeRoad]\n        })\n        .addLayer({\n          id: 'novpromm',\n          type: 'line',\n          source: {\n            type: 'vector',\n            url: 'mapbox://openroads.vietnam-conflated-1'\n          },\n          'source-layer': 'conflated',\n          paint: {\n            'line-width': [\n              'interpolate', ['linear'], ['zoom'],\n              0, 1,\n              10, 2\n            ]\n          },\n          layout: { 'line-cap': 'round' },\n          filter: ['!has', 'or_vpromms'],\n          maxzoom: 11\n        })\n        .addLayer({\n          id: 'novpromm_dashed',\n          type: 'line',\n          source: {\n            type: 'vector',\n            url: 'mapbox://openroads.vietnam-conflated-1'\n          },\n          'source-layer': 'conflated',\n          paint: {\n            'line-width': [\n              'interpolate', ['linear'], ['zoom'],\n              0, 1,\n              10, 2\n            ],\n            'line-dasharray': [1, 2, 1]\n          },\n          layout: { 'line-cap': 'round' },\n          filter: ['!has', 'or_vpromms'],\n          minzoom: 10\n        })\n        .addLayer({\n          id: 'vpromm',\n          type: 'line',\n          source: {\n            type: 'vector',\n            url: 'mapbox://openroads.vietnam-conflated-1'\n          },\n          'source-layer': 'conflated',\n          paint: {\n            'line-width': [\n              'interpolate', ['linear'], ['zoom'],\n              0, 1,\n              10, 2\n            ]\n          },\n          layout: {'line-cap': 'round'},\n          filter: ['has', 'or_vpromms']\n        })\n        .setPaintProperty(\n          'novpromm',\n          'line-color',\n          lineColors['iri']\n        )\n        .setPaintProperty(\n          'novpromm_dashed',\n          'line-color',\n          lineColors['iri']\n        )\n        .setPaintProperty(\n          'vpromm',\n          'line-color',\n          lineColors['iri']\n        );\n    });\n  },\n\n  componentWillReceiveProps: function ({ lng, lat, zoom, activeRoad }) {\n    if (lng !== this.props.lng || lat !== this.props.lat || zoom !== this.props.zoom) {\n      this.map.flyTo({ center: [lng, lat], zoom });\n    }\n\n    if (activeRoad !== this.props.activeRoad) {\n      this.map.setFilter('active_road', ['==', 'or_vpromms', activeRoad]);\n      this.props.fetchActiveRoad(activeRoad);\n    }\n  },\n\n  componentWillUnmount: function () {\n    const { lng, lat } = this.map.getCenter();\n    const zoom = this.map.getZoom();\n    this.props.setMapPosition(lng, lat, zoom);\n  },\n\n  handleLayerChange: function ({ target: { value } }) {\n    this.props.selectExploreMapLayer(value);\n    this.map.setPaintProperty(\n      'conflated',\n      'line-color',\n      lineColors[value]\n    );\n  },\n\n  handleShowNoVpromms: function ({ target: { checked } }) {\n    this.props.exploreMapShowNoVpromms(checked);\n\n    if (checked) {\n      this.map.setLayoutProperty('novpromm', 'visibility', 'visible');\n      this.map.setLayoutProperty('novpromm_dashed', 'visibility', 'visible');\n    } else {\n      this.map.setLayoutProperty('novpromm', 'visibility', 'none');\n      this.map.setLayoutProperty('novpromm_dashed', 'visibility', 'none');\n    }\n  },\n\n  render: function () {\n    return (\n      <section className='inpage inpage--alt'>\n        <header className='inpage__header'>\n          <div className='inner'>\n            <div className='inpage__headline'>\n              <h1 className='inpage__title'><T>Explore</T></h1>\n            </div>\n            <div className='inpage__actions'>\n              <MapSearch />\n            </div>\n          </div>\n        </header>\n        <div className='inpage__body'>\n          <div className='inner'>\n            <figure className='map'>\n              <div className='map__media' id='map'></div>\n              <div className='map__controls map__controls--top-right'>\n                <MapOptions\n                  handleLayerChange={this.handleLayerChange}\n                  handleShowNoVpromms={this.handleShowNoVpromms}\n                />\n              </div>\n              <div className='map__controls map__controls--bottom-right'>\n                <MapLegend\n                  layer={this.props.layer}\n                />\n              </div>\n            </figure>\n          </div>\n        </div>\n      </section>\n    );\n  }\n});\n\n\nexport default compose(\n  withRouter,\n  withProps(({ location: { query: { activeRoad = '' } } }) => ({\n    activeRoad\n  })),\n  getContext({ language: React.PropTypes.string }),\n  connect(\n    state => ({\n      layer: state.exploreMap.layer,\n      lng: state.map.lng,\n      lat: state.map.lat,\n      zoom: state.map.zoom\n    }),\n    (dispatch, { activeRoad }) => ({\n      setMapPosition: (lng, lat, zoom) => dispatch(setMapPosition(lng, lat, zoom)),\n      selectExploreMapLayer: (value) => dispatch(selectExploreMapLayer(value)),\n      exploreMapShowNoVpromms: (checked) => dispatch(exploreMapShowNoVpromms(checked)),\n      fetchActiveRoad: (activeRoad) => dispatch(fetchRoadBboxEpic(activeRoad))\n    })\n  )\n)(Explore);\n","import React from 'react';\nimport {\n  compose,\n  getContext\n} from 'recompose';\nimport T, {\n  translate\n} from '../components/t';\n\n\nconst Faq = ({ language }) => (\n  <section className='inpage'>\n    <header className='inpage__header'>\n      <div className='inner'>\n        <div className='inpage__headline'>\n          <h1 className='inpage__title'><T>Frequently Asked Questions</T></h1>\n        </div>\n      </div>\n    </header>\n    <div className='inpage__body'>\n      <div className='inner'>\n        {/* EXAMPLE QUESTION\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>ADD ENGLISH QUESTION TITLE HERE</h3>\n              <p>ADD ENGLISH QUESTION ANSWER HERE</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>ADD VIETNAMESE QUESTION TITLE HERE</h3>\n              <p>ADD VIETNAMESE QUESTION ANSWER HERE</p>\n            </section>\n        */}\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>I typed in the correct username and password but couldn’t open ORMA</h3>\n              <p>Please change your Vietnamese typing into English</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Tôi đã nhập đúng tên người dùng và mật khẩu nhưng không thể mở ORMA</h3>\n              <p>Hãy chuyển kiểu gõ Tiếng Việt sang tiếng Anh</p>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>I tried to upload data multiple times but keep getting error</h3>\n              <p>Make sure the following conditions are met</p>\n              <ul>\n                <li>The data hasn’t been uploaded before</li>\n                <li>The format of uploading file is ZIP</li>\n                <li>File size is less than 4MB</li>\n                <li>VPRoMMS ID in the data is correct</li>\n              </ul>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Tôi đã thử tải dữ liệu lên nhiều lần nhưng vẫn gặp lỗi</h3>\n              <p>Chắc chắn rằng những điều kiện sau được thỏa mãn:</p>\n              <ul>\n                <li>Dữ liệu này chưa được tải lên trước đây</li>\n                <li>Định dạng tập tin là ZIP</li>\n                <li>Kích thước tập tin nhỏ hơn 4MB</li>\n                <li>Mã VPRoMMS trong dữ liệu chính xác</li>\n              </ul>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>How can I show only one selected road on the map?</h3>\n              <p>You can click on ‘Explore’ button next to a VPRoMMS ID</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Làm thế nào để chỉ hiện một đường đã chọn trên bản đồ?</h3>\n              <p>Bạn có thể ấn vào nút ‘Hiển thị’ cạnh một mã VPRoMMS</p>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>How can I know which VPRoMMS IDs are uploaded?</h3>\n              <p>The uploaded VPRoMMS IDs are shown in red color.</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Làm sao tôi có thể biết những mã VPRoMMS nào đã được tải lên?</h3>\n              <p>Những mã VPRoMMS đã được tải lên được hiển thị màu đỏ.</p>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>Why can’t I click on some VPRoMMS IDs?</h3>\n              <p>You can only choose a VPRoMMS ID when it has data attached to (the red one)</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Tại sao tôi không thể chọn một số mã VPRoMMS?</h3>\n              <p>Bạn chỉ có thể chọn một mã VPRoMMS khi nó có dữ liệu đính kèm (mã màu đỏ)</p>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>Why are there two different values of road length in one VPRoMMS ID?</h3>\n              <p>There are two values of length in a VPRoMMS ID: one comes from VPRoMMS speardsheet, one is calculated from GPS trace in the field. In some cases, these can be different.</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Tại sao có hai giá trị của chiều dài đường trong một mã VPRoMMS?</h3>\n              <p>Có hai giá trị của chiều dài đường trong một mã VPRoMMS: một là từ bảng dữ liệu VPRoMMS, một là được tính từ dữ liệu GPS từ hiện trường. Trong một số trường hợp, những dữ liệu này có thể khác nhau.</p>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>What is ‘road without VPRoMMS ID’?</h3>\n              <p>Some previously uploaded roads have no VPRoMMS IDs or the VPRoMMS IDs mismatch with VPRoMMS ID list in ORMA.</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>‘đường không có mã VPRoMMS’ là gì?</h3>\n              <p>Một số đường đã được tải lên từ trước không có mã VPRoMMS hoặc mã VPRoMMS không khớp với danh sách mã VPRoMMS trong ORMA</p>\n            </section>\n        }\n        {\n          language === 'en' ?\n            <section className=\"question\">\n              <h3 className='inpage__title'>In ‘Tasks’, the system shows that there are 3 roads but I can only see 2 roads.</h3>\n              <p>Please try to zoom in and look around the roads, you may find the third one.</p>\n            </section> :\n            <section className=\"question\">\n              <h3 className='inpage__title'>Trong mục ‘Nhiệm vụ’, hệ thống báo rằng có 3 đường đang được hiển thị nhưng tôi chỉ thấy 2 đường.</h3>\n              <p>Hãy thử phóng to và tìm xung quanh các đường đang hiển thị, bạn có thể tìm thấy đường thứ ba.</p>\n            </section>\n        }\n\n        <section>\n          <p>\n            <T>If you have any remaining questions</T>\n            <a href={`mailto:dphan2@worldbank.org?cc=gost@worldbank.org&subject=${translate(language, 'Question regarding ORMA, not answered in the FAQ')}`}>\n              <button className=\"button button--base-raised-light\"><T>email us</T></button>\n            </a>\n          </p>\n        </section>\n      </div>\n    </div>\n  </section>\n);\n\nexport default compose(\n  getContext({ language: React.PropTypes.string })\n)(Faq);\n","'use strict';\nimport React, {\n  PropTypes\n} from 'react';\nimport {\n  getContext\n} from 'recompose';\nimport { Link } from 'react-router';\nimport T from '../components/t';\n\n\nconst Home = ({ language }) => (\n  <section>\n    <header className='page__header--landing'>\n      <div className='page__headline--landing'>\n        <h1 className='page__title--landing'><img src='assets/graphics/layout/openroads-vn-logo-hor-neg.svg' width='736' height='96' alt='OpenRoads Vietnam logo' /><span>OpenRoads</span> <strong>Vietnam</strong></h1>\n        <p className='page__description--landing'>\n          <T>Tracking and visualizing road assets in Vietnam for inclusive growth.</T>\n        </p>\n      </div>\n    </header>\n\n    <div className='page__body--landing'>\n      <div className='inner'>\n        <h2><T>Access and improve Road Networks</T></h2>\n        <p className='description'><T>Work with the OpenRoads project to close this critical information gap and create a comprehensive road network of Vietnam</T></p>\n        <div className='cta-block'>\n          <Link to={`/${language}/assets`} className='button button--xlarge button--base-raised-light'><T>View assets</T></Link> <small>or</small> <Link to={`/${language}/explore`} className='button button--xlarge button--primary-raised-dark'><T>Explore on map</T></Link>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default getContext({ language: PropTypes.string })(Home);\n","import React from 'react';\nimport {\n  compose,\n  lifecycle,\n  getContext\n} from 'recompose';\nimport { connect } from 'react-redux';\nimport mapboxgl from 'mapbox-gl';\nimport config from '../config';\nimport getExtent from 'turf-extent';\nimport { Link } from 'react-router';\nimport intersect from '@turf/line-intersect';\nimport pointOnLine from '@turf/point-on-line';\nimport point from 'turf-point';\nimport { coordReduce } from '@turf/meta';\nimport getDistance from '@turf/distance';\nimport moment from 'moment';\nimport {\n  queryOsmEpic,\n  deleteEntireWaysEpic\n} from '../redux/modules/osm';\nimport {\n  setMapPosition\n} from '../redux/modules/map';\nimport {\n  fetchNextWayTaskEpic,\n  fetchWayTaskCountEpic,\n  markWayTaskPendingEpic,\n  skipTask,\n  selectWayTaskProvince,\n  dedupeWayTaskEpic\n} from '../redux/modules/tasks';\nimport { fetchProvinces } from '../actions/action-creators.js';\nimport { createModifyLineString } from '../utils/to-osm';\nimport T, {\n  translate\n} from '../components/t';\nimport TaskListItem from '../components/task-list-item';\nimport Select from 'react-select';\nimport _ from 'lodash';\n\nconst source = 'collisions';\nconst roadHoverId = 'road-hover';\nconst roadSelected = 'road-selected';\nconst roadSelectedStep1 = 'road-selected-step1';\nconst layers = [{\n  id: 'road',\n  type: 'line',\n  source,\n  paint: {\n    'line-width': 4,\n    'line-opacity': 0.2\n  },\n  layout: { 'line-cap': 'round' }\n}, {\n  id: roadHoverId,\n  type: 'line',\n  source,\n  paint: {\n    'line-width': 6,\n    'line-opacity': 0.9\n  },\n  layout: { 'line-cap': 'round' },\n  filter: ['==', '_id', '']\n}, {\n  id: roadSelected,\n  type: 'line',\n  source,\n  paint: {\n    'line-width': 6,\n    'line-opacity': 0.9,\n    'line-color': '#FF0000'\n  },\n  layout: { 'line-cap': 'round' },\n  filter: ['==', '_id', '']\n}, {\n  id: roadSelectedStep1,\n  type: 'line',\n  source,\n  paint: {\n    'line-width': 6,\n    'line-opacity': 0.9,\n    'line-color': '#8F1812'\n  },\n  layout: { 'line-cap': 'round' },\n  filter: ['==', '_id', '']\n}];\n\nconst layerIds = layers.map(layer => layer.id);\n\nvar Tasks = React.createClass({\n  getInitialState: function () {\n    return {\n      renderedFeatures: null,\n      mode: 'dedupe',\n\n      // Steps are 0, 1 and 2 in accordance with new step workflow\n      step: 0,\n      hoverId: '',\n      selectedIds: [],\n      selectedStep0: [], // ids of selected features in step 0\n      selectedStep1: null, // in step \"1\", there can only ever be one id selected\n      selectedProvince: null,\n      selectedVpromm: null\n    };\n  },\n\n  propTypes: {\n    fetchNextTask: React.PropTypes.func,\n    setMapPosition: React.PropTypes.func,\n    _queryOsm: React.PropTypes.func,\n    _markTaskAsDone: React.PropTypes.func,\n    _deleteWays: React.PropTypes.func,\n    skipTask: React.PropTypes.func,\n    fetchTaskCount: React.PropTypes.func,\n    osmStatus: React.PropTypes.string,\n    taskStatus: React.PropTypes.string,\n    meta: React.PropTypes.object,\n    task: React.PropTypes.object,\n    taskId: React.PropTypes.number,\n    taskUpdatedAt: React.PropTypes.string,\n    taskCount: React.PropTypes.number,\n    selectOptions: React.PropTypes.object,\n    selectedProvince: React.PropTypes.number,\n    selectNextTaskProvince: React.PropTypes.func,\n    dedupeWayTask: React.PropTypes.func,\n    language: React.PropTypes.string\n  },\n\n  componentDidMount: function () {\n    mapboxgl.accessToken = config.mbToken;\n    const map = this.map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/light-v9',\n      failIfMajorPerformanceCaveat: false,\n      zoom: 12\n    }).addControl(new mapboxgl.NavigationControl(), 'top-left');\n\n    // Disable map rotation using right click + drag.\n    this.map.dragRotate.disable();\n\n    // Disable map rotation using touch rotation gesture.\n    this.map.touchZoomRotate.disableRotation();\n\n    // Remove compass.\n    document.querySelector('.mapboxgl-ctrl .mapboxgl-ctrl-compass').remove();\n\n    this.onMapLoaded(() => {\n      map.on('mousemove', (e) => {\n        // toggle cursor and hover filters on mouseover\n        let features = map.queryRenderedFeatures(e.point, { layers: layerIds });\n        let id;\n\n        if (features.length && features[0].properties._id) {\n          map.getCanvas().style.cursor = 'pointer';\n          id = features[0].properties._id;\n        } else {\n          map.getCanvas().style.cursor = '';\n          id = '';\n        }\n\n        this.hoverItemOver(id);\n      });\n\n      map.on('click', (e) => {\n        const { step } = this.state;\n        let features = map.queryRenderedFeatures(e.point, { layers: [ roadHoverId ] });\n        if (features.length && features[0].properties._id) {\n          let featId = features[0].properties._id;\n          if (step === 0) {\n            this.selectStep0(featId);\n          } else if (step === 1) {\n            this.selectStep1(featId);\n          } else {\n            // do nothing\n          }\n        }\n      });\n    });\n  },\n\n  componentWillReceiveProps: function ({ task: nextTask, taskId: nextTaskId, osmStatus: nextOsmStatus }) {\n    if (this.props.task !== nextTask) {\n      // TODO - ANTIPATTERN: should not mirror properties task and taskId in state\n      this.setState({ renderedFeatures: nextTask }, () => this.onMapLoaded(() => this.syncMap()));\n    } else if (this.props.osmStatus === 'pending' && nextOsmStatus === 'complete') {\n      // We've just successfully completed an osm changeset\n\n      // TODO - move this state into redux store so it can be modified directly by actions\n      // specifically, COMPLETE_OSM_CHANGE\n      this.setState({\n        selectedIds: [],\n        mode: null\n      });\n    }\n  },\n\n  componentWillUnmount: function () {\n    const { lng, lat } = this.map.getCenter();\n    const zoom = this.map.getZoom();\n    this.props.setMapPosition(lng, lat, zoom);\n  },\n\n  onMapLoaded: function (fn) {\n    if (this.map.loaded()) fn();\n    else this.map.once('load', fn);\n  },\n\n  syncMap: function () {\n    const features = this.state.renderedFeatures;\n    const { map } = this;\n    const existingSource = map.getSource(source);\n    const selectedIds = [].concat(this.state.selectedStep0);\n    const selectedStep1 = this.state.selectedStep1 || '';\n    const hoverId = this.state.hoverId;\n    if (!existingSource) {\n      map.addSource(source, {\n        type: 'geojson',\n        data: features\n      });\n      layers.forEach(layer => {\n        map.addLayer(layer);\n      });\n    } else {\n      existingSource.setData(features);\n    }\n    map.fitBounds(getExtent(features), {\n      linear: true,\n      padding: 25\n    });\n    map.setFilter(roadSelected, ['in', '_id'].concat(selectedIds));\n    map.setFilter(roadHoverId, ['==', '_id', hoverId]);\n    map.setFilter(roadSelectedStep1, ['==', '_id', selectedStep1]);\n  },\n\n  renderPropertiesOverlay: function () {\n    const { hoverId } = this.state;\n    const { task } = this.props;\n    const properties = task.features.find(c => hoverId === c.properties._id).properties;\n    const displayList = Object.keys(properties)\n      .filter(key => key.charAt(0) !== '_' && typeof properties[key] === 'string')\n      .map(key => [\n        <dt key={`${key}-key`}><strong>{key}</strong></dt>,\n        <dd key={`${key}-value`}>{properties[key] ? properties[key] : '--'}</dd>\n      ]);\n    return (\n      <div className='map__controls map__controls--top-left'>\n        <figcaption className='panel properties-panel'>\n          <div className='panel__body'>\n            <dl>\n              {displayList}\n            </dl>\n          </div>\n        </figcaption>\n      </div>\n    );\n  },\n\n  getPanelTitle: function () {\n    const { mode, step } = this.state;\n    if (step === 0) {\n      return 'Prepare workflow';\n    }\n    if (step === 1 && mode === 'dedupe') {\n      return 'Remove duplicates';\n    }\n    if (step === 1 && mode === 'join') {\n      return 'Create intersection';\n    }\n    if (step === 2) {\n      return 'Workflow completed';\n    }\n  },\n\n  renderInstrumentPanel: function () {\n    const { step, renderedFeatures } = this.state;\n    const { osmStatus, language, taskId, taskUpdatedAt } = this.props;\n    const diffHours = moment().diff(taskUpdatedAt, 'hours');\n    const hoursText = diffHours === 1 ? translate(language, 'hour ago') : translate(language, 'hours ago');\n    const panelTitle = this.getPanelTitle();\n    if (osmStatus === 'pending') {\n      return (\n        <div className='map__controls map__controls--column-right'>\n          <div className='panel tasks-panel'>\n            <div className='panel__body'>\n              <h2><T>Performing action...</T></h2>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className='map__controls map__controls--column-right'>\n        <article className='panel task-panel'>\n          {renderedFeatures &&\n            <header className='panel__header'>\n              <div className='panel__headline'>\n                <h1 className='panel__sectitle'><T>Task</T> #{ taskId }</h1>\n                <p className='panel__subtitle'><time dateTime={ taskUpdatedAt }>{ diffHours } { hoursText }</time></p>\n                <h2 className='panel__title'><T>{ panelTitle }</T></h2>\n              </div>\n            </header>\n          }\n\n          { step === 0 && renderedFeatures && this.renderStep0() }\n          { step === 1 && renderedFeatures && this.renderStep1() }\n          { step === 2 && renderedFeatures && this.renderStep2() }\n\n          <footer className='panel__footer'>\n\n            { step === 0 && renderedFeatures && this.renderActionsStep0() }\n            { step === 1 && renderedFeatures && this.renderActionsStep1() }\n            { step === 2 && renderedFeatures && this.renderActionsStep2() }\n\n          </footer>\n        </article>\n      </div>\n    );\n  },\n\n  // reset selected items when user changes mode, user can only change mode in step 0\n  handleChangeMode: function (event) {\n    this.setState({mode: event.target.value, selectedStep0: []}, this.syncMap);\n  },\n\n  // trigger when an item is selected during step 0\n  selectStep0: function (id) {\n    const { mode, selectedStep0 } = this.state;\n    let selectedClone = [].concat(selectedStep0);\n    if (mode === 'dedupe') { // user can select multiple\n      if (selectedClone.includes(id)) {\n        selectedClone.splice(selectedClone.indexOf(id));\n      } else {\n        selectedClone.push(id);\n      }\n    } else if (mode === 'join') { // Intersect mode will only allow one element to be selected\n      if (selectedClone[0] === id) {\n        selectedClone = [];\n      } else {\n        selectedClone[0] = id;\n      }\n    }\n    this.setState({ selectedStep0: selectedClone }, this.syncMap);\n  },\n\n  selectStep1: function (id) {\n    this.setState({ selectedStep1: id }, this.syncMap);\n  },\n\n  hoverItemOver: function (id) {\n    this.setState({ hoverId: id }, this.syncMap);\n  },\n\n  hoverItemOut: function (id) {\n    this.setState({ hoverId: '' }, this.syncMap);\n  },\n\n  renderStep0: function () {\n    const { renderedFeatures, mode, selectedStep0, hoverId } = this.state;\n    const { language } = this.props;\n    const title = mode === 'dedupe' ? 'Select roads to work on' : 'Select road to work on';\n    const type = mode === 'dedupe' ? 'checkbox' : 'radio';\n\n    // we need to assign these translated strings as variables\n    // because if we use the <T> tag inside an <option>, it generates invalid markup\n    // by inserting a <span> around the string\n    const removeDuplicatesT = translate(language, 'Remove duplicates');\n    const createIntersectionT = translate(language, 'Create intersection');\n    return (\n      <div className='panel__body'>\n        <section className='task-group'>\n          <header className='task-group__header'>\n            <h1 className='task-group__title'><T>Select action to perform</T></h1>\n          </header>\n          <div className='task-group__body'>\n            <form className='form task-group__actions'>\n              <div className='form__group'>\n                <label className='form__label visually-hidden'><T>Actions</T></label>\n                <select className='form__control' value={ mode } onChange={ this.handleChangeMode }>\n                  <option value='dedupe'>{ removeDuplicatesT }</option>\n                  <option value='join'>{ createIntersectionT }</option>\n                </select>\n              </div>\n            </form>\n          </div>\n        </section>\n        <section className='task-group'>\n          <header className='task-group__header'>\n            <h1 className='task-group__title'><T>{ title }</T></h1>\n          </header>\n          <div className='task-group__body'>\n            <ul className='road-list'>\n              {\n                renderedFeatures.features.map(road =>\n                  <TaskListItem\n                    vpromm={ road.properties.or_vpromms }\n                    province={ road.properties.province }\n                    _id={ road.properties._id }\n                    mode={ mode }\n                    type={ type }\n                    language={ language }\n                    key={ road.properties._id }\n                    selected={ selectedStep0.includes(road.properties._id) }\n                    isHighlighted={ road.properties._id === hoverId }\n                    onMouseOver={ this.hoverItemOver }\n                    onMouseOut={ this.hoverItemOut }\n                    toggleSelect={ this.selectStep0 }\n                  />\n                )\n              }\n            </ul>\n          </div>\n        </section>\n      </div>\n    );\n  },\n\n  renderActionsStep0: function () {\n    const { mode, selectedStep0 } = this.state;\n    let isDisabled;\n    if (mode === 'dedupe') {\n      isDisabled = selectedStep0.length < 2;\n    } else if (mode === 'join') {\n      isDisabled = selectedStep0.length === 0;\n    }\n    return (\n      <div className='panel__f-actions'>\n        <button type='button' className='pfa-secondary' onClick={ this.next }>\n          <span><T>Skip task</T></span>\n        </button>\n        <button\n          type='button'\n          className={`pfa-primary ${isDisabled ? 'disabled' : ''}`}\n          disabled={ isDisabled }\n          onClick={ this.gotoStep1 }\n        >\n          <span><T>Continue</T></span>\n        </button>\n      </div>\n    );\n  },\n\n  renderActionsStep1: function () {\n    const { mode, selectedStep1 } = this.state;\n    const isDisabled = !selectedStep1;\n    let onClick;\n    if (mode === 'join') {\n      onClick = this.commitJoin;\n    } else if (mode === 'dedupe') {\n      onClick = this.commitDedupe;\n    }\n    return (\n      <div className='panel__f-actions'>\n        <button type='button' className='pfa-secondary' onClick={ this.gotoStep0 }>\n          <span><T>Back</T></span>\n        </button>\n        <button\n          type='button'\n          className={`pfa-primary ${isDisabled ? 'disabled' : ''}`}\n          disabled={ isDisabled }\n          onClick={ onClick }\n        >\n          <span><T>Apply</T></span>\n        </button>\n      </div>\n    );\n  },\n\n  doMore: function () {\n    this.setState({\n      selectedStep0: [],\n      selectedStep1: null,\n      step: 0\n    }, this.syncMap);\n  },\n\n  renderActionsStep2: function () {\n    return (\n      <div className='panel__f-actions'>\n        <button type='button' className='pfa-secondary' onClick={ this.doMore }><span><T>Do more</T></span></button>\n        <button type='button' onClick={ this.next } className='pfa-primary'><span><T>Next task</T></span></button>\n      </div>\n    );\n  },\n\n  getSelectedVpromms: function () {\n    const { renderedFeatures, selectedStep0 } = this.state;\n    const vpromms = renderedFeatures.features\n      .filter(feat => selectedStep0.includes(feat.properties._id))\n      .map(feat => feat.properties.or_vpromms || 'No ID');\n    return _.uniq(vpromms);\n  },\n\n\n  renderStep1: function () {\n    const { mode, selectedStep0, selectedStep1, renderedFeatures, hoverId } = this.state;\n    const { language } = this.props;\n    let step1Features;\n    const title = mode === 'dedupe' ? 'Select Road to Keep' : 'Select Road to Intersect With';\n    if (mode === 'dedupe') {\n      // in dedupe mode, show all features selected in previous step\n      step1Features = renderedFeatures.features.filter(feat => selectedStep0.includes(feat.properties._id));\n    } else if (mode === 'join') {\n      // in join mode, show all features except the one selected in previous step\n      step1Features = renderedFeatures.features.filter(feat => feat.properties._id !== selectedStep0[0]);\n    }\n    const vpromms = this.getSelectedVpromms();\n    return (\n      <div className='panel__body'>\n        <section className='task-group'>\n          <header className='task-group__header'>\n            <h1 className='task-group__title'><T>{ title }</T></h1>\n          </header>\n          <div className='task-group__body'>\n            <ul className='road-list'>\n              {\n                step1Features.map(road =>\n                  <TaskListItem\n                    vpromm={ road.properties.or_vpromms }\n                    province={ road.properties.province }\n                    _id={ road.properties._id }\n                    mode={ mode }\n                    type='radio'\n                    language={ language }\n                    key={ road.properties._id }\n                    selected={ selectedStep1 === road.properties._id }\n                    isHighlighted={ road.properties._id === hoverId }\n                    onMouseOver={ this.hoverItemOver }\n                    onMouseOut={ this.hoverItemOut }\n                    toggleSelect={ this.selectStep1 }\n                  />\n                )\n              }\n            </ul>\n          </div>\n        </section>\n        { mode === 'dedupe' &&\n        <section className='task-group'>\n          <header className='task-group__header'>\n            <h1 className='task-group__title'><T>Select VPROMMID to Apply</T></h1>\n          </header>\n          <div className='task-group__body'>\n            <form className='form task-group__actions'>\n              <div className='form__group'>\n                <label className='form__label visually-hidden'><T>VPROMMIDs</T></label>\n                <select className='form__control' onChange={ this.selectVpromm }>\n                  { vpromms.map(id =>\n                    <option key={ id } value={ id }>{ id }</option>\n                  )\n                  }\n                </select>\n              </div>\n            </form>\n          </div>\n        </section>\n        }\n      </div>\n    );\n  },\n\n  renderStep2: function () {\n    const { mode, selectedStep0 } = this.state;\n    const { language } = this.props;\n\n    const numRoads = mode === 'dedupe' ? selectedStep0.length - 1 : 2;\n    const roadStr = numRoads === 1 ? translate(language, 'road was') : translate(language, 'roads were');\n    const actionStr = mode === 'dedupe' ? translate(language, 'removed') : translate(language, 'intersected');\n    return (\n      <div className='panel__body'>\n        <div className='prose task-prose'>\n          <p>{numRoads} {roadStr} {actionStr} <T>and submitted to the system for review.</T></p>\n          <p><T>Do you want to continue to work on this task or move to the next one?</T></p>\n        </div>\n      </div>\n    );\n  },\n\n  gotoStep0: function () {\n    this.setState({step: 0, selectedStep1: null}, this.syncMap);\n  },\n\n  gotoStep1: function () {\n    this.setState({step: 1});\n  },\n\n  gotoStep2: function () {\n    this.setState({step: 2});\n  },\n\n  handleSelectVprommid: function (selectedVprommid) {\n    this.setState({ applyVprommid: selectedVprommid });\n  },\n\n  commitDedupe: function () {\n    const { selectedStep1, renderedFeatures, applyVprommid } = this.state;\n    const { features } = renderedFeatures;\n    const toDelete = features.filter(feature => feature.properties._id !== selectedStep1);\n    const wayIdToKeep = selectedStep1;\n    this.props.dedupeWayTask(this.props.taskId, toDelete.map(feature => feature.properties._id), wayIdToKeep, applyVprommid === 'No ID' ? null : applyVprommid);\n    // this.props._deleteWays(this.props.taskId, toDelete.map(feature => feature.properties._id));\n\n    // TODO - should deduping mark task as done?\n    this.props._markTaskAsDone(toDelete.map(feature => feature.properties._id));\n    this.gotoStep2();\n  },\n\n  commitJoin: function () {\n    const { selectedStep0, selectedStep1, renderedFeatures } = this.state;\n    const { features } = renderedFeatures;\n    const line1 = features.find(f => f.properties._id === selectedStep0[0]);\n    const line2 = features.find(f => f.properties._id === selectedStep1);\n    const intersectingFeatures = intersect(line1, line2);\n    const changes = [];\n\n    if (!intersectingFeatures.features.length) {\n      // lines don't intersect, find the two nearest points on the two respective lines.\n      const closestPoints = coordReduce(line1, (context, line1Point) => {\n        // If we find two points with shorter distance between them,\n        // set the coordinates on the second line to this variable.\n        let closerLine2Point = null;\n        let bestDistance = coordReduce(line2, (currentBest, line2Point) => {\n          let distance = getDistance(line1Point, line2Point);\n          if (distance < currentBest) {\n            closerLine2Point = line2Point;\n            return distance;\n          }\n          return currentBest;\n        }, context.distance);\n\n        if (closerLine2Point) {\n          return {\n            distance: bestDistance,\n            line1Point,\n            line2Point: closerLine2Point\n          };\n        }\n        return context;\n      }, {distance: Infinity, line1Point: null, line2Point: null});\n\n\n      // Figure out where to add the extra point.\n      // For either line, if the closest coordinate is at the start or tail end of the line,\n      // we can just add it to the beginning or end.\n      const line1Point = pointOnLine(line1, point(closestPoints.line1Point));\n      const line2Point = pointOnLine(line2, point(closestPoints.line2Point));\n\n      if (line1Point.properties.index === 0\n        || line1Point.properties.index === line1.geometry.coordinates.length - 1) {\n        changes.push(insertPointOnLine(line1, line2Point));\n      } else if (line2Point.properties.index === 0\n        || line2Point.properties.index === line2.geometry.coordinates.length - 1) {\n        changes.push(insertPointOnLine(line2, line1Point));\n      } else {\n        changes.push(insertPointOnLine(line1, point(closestPoints.line2Point)));\n        changes.push(insertPointOnLine(line2, point(closestPoints.line1Point)));\n      }\n    } else {\n      let intersection = intersectingFeatures.features[0];\n      changes.push(insertPointOnLine(line1, intersection));\n      changes.push(insertPointOnLine(line2, intersection));\n    }\n\n    const changeset = createModifyLineString(changes);\n\n    this.props._queryOsm(this.props.taskId, changeset);\n\n    // TODO - should deduping mark task as done?\n    this.props._markTaskAsDone([line1.properties._id, line2.properties._id]);\n\n    this.gotoStep2();\n  },\n\n  markAsDone: function () {\n    // This function is different from #next, in that it allows you\n    // to specify all visible roads as 'done'\n    this.props._markTaskAsDone(this.state.renderedFeatures.features.map(feature => Number(feature.properties._id)));\n    this.props.fetchTaskCount();\n    this.next();\n  },\n\n  next: function () {\n    this.map.setFilter(roadSelected, ['all', ['in', '_id', '']]);\n    this.props.skipTask(this.props.taskId);\n    this.setState({ selectedStep0: [], selectedStep1: null, mode: 'dedupe', selectedVpromm: null, step: 0, renderedFeatures: null }, this.props.fetchNextTask);\n  },\n\n  handleProvinceChange: function (selectedProvince) {\n    const value = selectedProvince ? selectedProvince.value : null;\n    this.props.selectNextTaskProvince(value);\n    this.props.fetchNextTask();\n  },\n\n  renderProvinceSelect: function () {\n    const { selectedProvince, language } = this.props;\n    const provinceOptions = this.props.selectOptions.province.map((p) => { return {value: p.id, label: p.name_en}; });\n    const value = selectedProvince;\n    return (\n      <Select\n        name=\"form-province-select\"\n        value={value}\n        onChange= {this.handleProvinceChange}\n        options={ provinceOptions }\n        placeholder ={ translate(language, 'Filter tasks by province') }\n      />\n    );\n  },\n\n  render: function () {\n    const { taskId, taskCount, taskStatus } = this.props;\n    const { hoverId } = this.state;\n    const renderPanel = !((taskStatus === 'error' || taskStatus === 'No tasks remaining') ||\n      (!taskId && taskStatus === 'pending'));\n\n    return (\n      <section className='inpage inpage--alt'>\n        <header className='inpage__header'>\n          <div className='inner'>\n            <div className='inpage__headline'>\n              <h1 className='inpage__title'><T>Tasks</T></h1>\n            </div>\n            <nav className='inpage__nav'>\n              <ul className='inpage__menu'>\n                <li><Link to={`/${this.props.language}/tasks`} className='inpage__menu-link' activeClassName='inpage__menu-link--active' title='View'><span><T>Solve</T> <small className='label'>{ taskCount }</small></span></Link></li>\n                <li><a className='inpage__menu-link disabled' href='#' title='View'><span><T>Stats</T></span></a></li>\n              </ul>\n            </nav>\n            <div className='inpage__actions'>\n              <div className='form__group task-search'>\n                <label className='form__label' htmlFor='form-select-1'><T>Search admin area</T></label>\n                { this.props.selectOptions.province && this.renderProvinceSelect() }\n              </div>\n            </div>\n          </div>\n        </header>\n        <div className='inpage__body'>\n          <div className='inner'>\n\n            <figure className='map'>\n              <div className='map__media' id='map'></div>\n              {\n                hoverId && this.renderPropertiesOverlay()\n              }\n              {\n                taskStatus === 'error' &&\n                <div className='placeholder__fullscreen'>\n                  <h3 className='placeholder__message'><T>Error</T></h3>\n                </div>\n              }\n              {\n                taskStatus === 'No tasks remaining' &&\n                <div className='placeholder__fullscreen'>\n                  <h3 className='placeholder__message'><T>No tasks remaining</T></h3>\n                </div>\n              }\n              {\n                !taskId && taskStatus === 'pending' &&\n                <div className='placeholder__fullscreen'>\n                  <h3 className='placeholder__message'><T>Loading</T></h3>\n                </div>\n              }\n              {\n                renderPanel && this.renderInstrumentPanel()\n              }\n            </figure>\n\n\n          </div>\n        </div>\n      </section>\n    );\n  }\n});\n\n\nexport default compose(\n  getContext({ language: React.PropTypes.string }),\n  connect(\n    state => ({\n      task: state.waytasks.geoJSON,\n      taskId: state.waytasks.id,\n      taskUpdatedAt: state.waytasks.updatedAt,\n      taskCount: state.waytasks.taskCount,\n      taskStatus: state.waytasks.status,\n      osmStatus: state.osmChange.status,\n      selectOptions: state.provinces.data,\n      selectedProvince: state.waytasks.selectedProvince\n    }),\n    dispatch => ({\n      fetchProvinces: () => dispatch(fetchProvinces()),\n      selectNextTaskProvince: (provinceId) => dispatch(selectWayTaskProvince(provinceId)),\n      dedupeWayTask: (taskId, wayIds, wayIdToKeep, dedupeVprommid) => dispatch(dedupeWayTaskEpic(taskId, wayIds, wayIdToKeep, dedupeVprommid)),\n      fetchNextTask: () => dispatch(fetchNextWayTaskEpic()),\n      fetchTaskCount: () => dispatch(fetchWayTaskCountEpic()),\n      skipTask: (id) => dispatch(skipTask(id)),\n      _markTaskAsDone: (taskIds) => dispatch(markWayTaskPendingEpic(taskIds)),\n      _queryOsm: (taskId, payload) => dispatch(queryOsmEpic(taskId, payload)),\n      _deleteWays: (taskId, wayIds) => dispatch(deleteEntireWaysEpic(taskId, wayIds)),\n      setMapPosition: (lng, lat, zoom) => dispatch(setMapPosition(lng, lat, zoom))\n    })\n  ),\n  lifecycle({\n    componentDidMount: function () {\n      // TODO - data fetching for this page should be moved into a route container\n      // fire to get all the provinces here.\n      this.props.fetchProvinces();\n      this.props.fetchNextTask();\n      this.props.fetchTaskCount();\n    }\n  })\n)(Tasks);\n\nfunction insertPointOnLine (feature, point) {\n  const nearest = pointOnLine(feature, point);\n  const { index } = nearest.properties;\n  const coordinates = feature.geometry.coordinates.slice();\n  const targetIndex = index === 0 ? 0\n    : index === coordinates.length - 1 ? coordinates.length\n      : getDistance(point, coordinates[index - 1]) < getDistance(point, coordinates[index + 1]) ? index : index + 1;\n  coordinates.splice(targetIndex, 0, point.geometry.coordinates);\n  return Object.assign({}, feature, {\n    geometry: {\n      type: 'LineString',\n      coordinates\n    }\n  });\n}\n","'use strict';\nimport React from 'react';\nimport T from '../components/t';\n\n\nvar UhOh = React.createClass({\n  displayName: 'UhOh',\n\n  render: function () {\n    return (\n      <div className='inpage__body'>\n        <div className='inner'>\n          <h2><T>Page Not Found</T></h2>\n        </div>\n      </div>\n    );\n  }\n});\n\nmodule.exports = UhOh;\n","'use strict';\nimport React from 'react';\nimport config from '../config';\nimport T from '../components/t';\n\n\nvar Upload = React.createClass({\n  render: function () {\n    return (\n      <section className='inpage'>\n        <header className='inpage__header'>\n          <div className='inner'>\n            <div className='inpage__headline'>\n              <h1 className='inpage__title'><T>Upload</T></h1>\n            </div>\n          </div>\n        </header>\n        <div className='inpage__body'>\n          <div className='inner'>\n            <h2><T>Upload RoadLabPro ZIP files</T></h2>\n            <form className='form upload-form' method='post' encType='multipart/form-data' action={config.api + '/fielddata/properties/rlp'}>\n              <div className='form__group'>\n                <label className='form__label' htmlFor='rlp-zip-properties'><T>Road properties</T></label>\n                <div className='form__input-group form__input-group--medium'>\n                  <input type='file' className='form__control' id='rlp-zip-properties' name='rlp-zip-properties' accept='.zip' />\n                  <button type='Submit' className='button button--primary-raised-dark' title='Submit'><span><T>Upload</T></span></button>\n                </div>\n              </div>\n            </form>\n\n            <form className='form upload-form' method='post' encType='multipart/form-data' action={config.api + '/fielddata/geometries/rlp'}>\n              <div className='form__group'>\n                <label className='form__label' htmlFor='rlp-zip-geometries'><T>Road geometries</T></label>\n                <div className='form__input-group form__input-group--medium'>\n                  <input type='file' className='form__control' id='rlp-zip-geometries' name='rlp-zip-geometries' accept='.zip' />\n                  <button type='Submit' className='button button--primary-raised-dark' title='Submit'><span><T>Upload</T></span></button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n});\n\nmodule.exports = Upload;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}